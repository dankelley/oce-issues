	program tide12
C***********************************************************************
C*
C*  THIS PROGRAM DOES A TIDAL HEIGHTS 'HARMONIC' ANALYSIS OF IRREGULARLY
C*  SAMPLED OBSERVATIONS.  THE ANALYSIS METHOD IS A LEAST SQUARES FIT
C*  (WITH SOLUTION BY BARRODALE'S MODIFIED GRAM-SCHMIDT ALGORITHM)
C*  COUPLED WITH NODAL MODULATION AND INFERENCE(IF SO REQUESTED).  IF
C*  ALL OBSERVATIONS ARE HIGH/LOWS, EXPRESSIONS IN WHICH THE TIME
C*  DERIVATIVE IS EQUATED TO ZERO CAN BE EMPLOYED TO OBTAIN A BETTER
C*  FIT.  THE ASSOCIATED USER MANUAL GIVES DETAILS ON THE PROGRAM'S
C*  CALCULATIONS.
C*
C*                                          M. FOREMAN   MAY 1979.
C*
c*  The program was converted to a PC with IBM Professional FORTRAN
c*  version 1.22 in Nov 1987.
c*
c	
c	This program version was modified in October 1992 to
c	incorporate a new calendar and a higher order approximation
c	for the astronomical arguments, their
c	derivatives, and the constituent frequencies.
c						M. Foreman
c*
C***********************************************************************
C*
C*  FILE REFERENCE NUMBERS OF DEVICES REQUIRED BY THIS PROGRAM.
C*      KR  - INPUT FILE  - CONTAINS THE TIDAL CONSTITUENT INFORMATION.
C*      KR1 - INPUT FILE  - GIVES ANALYSIS TYPE AND TIDAL STATION
C*                          DETAILS.
C*      KR2 - INPUT FILE  - CONTAINS THE OBSERVED TIMES AND HEIGHTS.
C*      LP  - OUTPUT FILE - LINE PRINTER.
C*  PRESENTLY KR,KR1,KR2, AND LP ARE ASSIGNED THE RESPECTIVE VALUES
C*  8,5,9, AND 6.  SEE THE MANUAL OR COMMENT STATEMENTS WITHIN THIS
C*  PROGRAM FOR FURTHER DETAILS ON THEIR USE.
C*
C***********************************************************************
C*
C*  ARRAY DEFINITIONS AND DIMENSION GUIDELINES.
C*
C*  LET    MC      BE THE TOTAL NUMBER OF CONSTITUENTS, INCLUDING Z0
C*                 AND ANY INFERRED CONSTITUENTS, TO BE INCLUDED IN THE
C*                 ANALYSIS;
C*         NOBS    BE THE NUMBER OF TIDAL HEIGHT OBSERVATIONS;
C*         NR      BE THE NUMBER OF INPUT RECORDS OF OBSERVED TIDAL
C*                 HEIGHTS
C*         MPAR    BE 2*MC-1;
C*         NEQ     BE NOBS*2 IF ALL THE OBSERVATIONS ARE EXTREMES AND
C*                 THE DERIVATIVE CONDITION IS TO BE INCLUDED FOR EACH,
C*                 AND NOBS OTHERWISE.
C*  THEN PARAMETERS MXNDAY, NMAXP1, AND NMAXPM SHOULD BE AT LEAST NR,
C*  MPAR+1, AND NEQ+MPAR RESPECTIVELY.  THEY ARE CURRENTLY SET TO 366,
C*  40, AND 1600.
C*
C*  NAME(I)        IS THE ARRAY CONTAINING ALL THE CONSTITUENT NAMES,
C*                 INCLUDING Z0 AND ANY INFERRED CONSTITUENTS, TO BE IN
C*                 THE ANALYSIS.  IT SHOULD BE DIMENSIONED AT LEAST MC.
C*  FREQC(I),      ARE THE ARRAYS OF FREQUENCIES IN CYCLES/HR AND
C*  FREQ(I)        RADIANS/HR RESPECTIVELY CORRESPONDING TO THE
C*                 CONSTITUENT NAME(I).  THEY SHOULD BE DIMENSIONED AT
C*                 LEAST MC.
C*  AMP(I),PH(I)   ARE ARRAYS CONTAINING THE RAW AMPLITUDE AND PHASE FOR
C*                 CONSTITUENT NAME(I) AS FOUND VIA THE LEAST SQUARES
C*                 ANALYSIS.  THEY SHOULD BE DIMENSIONED AT LEAST MC.
C*  AMPC(I),PHG(I) ARE ARRAYS CONTAINING THE AMPLITUDE AND PHASE FOR
C*                 CONSTITUENT NAME(I) AFTER CORRECTIONS FOR NODAL
C*                 MODULATION, ASTRONOMICAL ARGUMENT AND INFERRED
C*                 CONSTITUENTS.  THEIR MINIMUM DIMENSION SHOULD BE MC.
C*  ITH(I),ITM(I), ARE ARRAYS CONTAINING THE TIMES IN HOURS AND MINUTES
C*  HT(I)          AND HEIGHTS, OF THE OBSERVED DATA AS IT IS INPUT BY
C*                 RECORD.  THEY SHOULD BE DIMENSIONED ACCORDINGLY( AT
C*                 PRESENT ONLY 6 OBSERVATIONS ARE EXPECTED PER RECORD).
C*  X(I),Y(I)      ARE ARRAYS CONTAINING ALL THE TIMES(IN HOURS AS
C*                 MEASURED FROM THE CENTRE OF THE ANALYSIS PERIOD) AND
C*                 HEIGHTS OF THE OBSERVED DATA.  THEIR MINIMUM
C*                 DIMENSION SHOULD BE NOBS.
C*  NSTN(I)        IS THE ARRAY CONTAINING THE TIDAL STATION NAME.  IT
C*                 SHOULD HAVE MINIMUM DIMENSION 5.
C*  Q(I)           IS THE OVERDETERMINED ARRAY OF EQUATIONS THAT IS
C*                 SOLVED IN THE LEAST SQUARES SENSE BY THE MODIFIED
C*                 GRAM-SCHMIDT ALGORITHM.  IT SHOULD HAVE THE EXACT
C*                 DIMENSION OF NMAXPM BY NMAXP1.
C*  P(I)           IS THE ARRAY CONTAINING THE TIDAL CONSTITUENT SINE
C*                 AND COSINE COEFICIENTS AS FOUND WITH THE LEAST
C*                 SQUARES FIT.  IT SHOULD HAVE MINIMUM DIMENSION MPAR.
C*
C***********************************************************************
C
      CHARACTER*5 NAME,KON,KBLANK,KONIN
      REAL*8 AV,SDEV,SUM1,SUM2
      DIMENSION Q(1600,40),P(40),FREQ(20),NAME(20),X(800),Y(800)
     1,ITH(6),ITM(6),HT(6),AMP(20),PH(20),AMPC(20),PHG(20),NSTN(5)
     2,FREQC(20)
      	common /const/name,freqc,mf
	open(unit=9,file='tide13.dat',status='old',form='formatted')
	open(unit=5,file='tide14.dat',status='old',form='formatted')
	open(unit=8,file='tide5.dat',status='old',form='formatted')
c	open(unit=9,status='old',form='formatted')
c	open(unit=7,status='old',form='formatted')
c	open(unit=8,status='old',form='formatted')
C
C***********************************************************************
C*  PARAMETER INITIALIZATION.
C*
c      KR1=7
      KR1=5
      KR2=9
      LP=6
      NMAXP1=40
      NMAXPM=1600
      KBLANK='     '
      MXNDAY=366
      TWPI=2.*3.1415926535898
C
C***********************************************************************
C*  READ FROM DEVICE KR1 THE ANALYSIS TYPE AND TIDAL STATION DETAILS.
C*
C*
C*  1)ONE RECORD FOR THE VARIABLES MF,IDERV,WT IN THE FORMAT (2I5,F5.2).
C*  MF   = THE NUMBER OF CONSTITUENTS, INCLUDING THE CONSTANT TERM Z0,
C*         TO BE IN THE LEAST SQUARES FIT.
C*  IDERV=1 IF ALL OBSERVATIONS ARE EXTREME VALUES AND IT IS DESIRED
C*          TO USE THE DERIVATIVE CONDITIONS IN THE LEAST SQUARES FIT,
C*       =0 OTHERWISE.
C*  WT   = THE WEIGHT TO BE APPLIED TO ALL THE DERIVATIVE CONDITIONS
C*         WHEN IDERV=1.  A RECOMMENDED VALUE IS WT=1.0.
C*
C*  2)ONE RECORD FOR EACH OF THE MF CONSTITUENTS TO BE INCLUDED IN THE
C*  FIT.  EACH RECORD CONTAINS THE VARIABLES NAME AND FREQC IN THE
C*  FORMAT (A5,2X,F13.10).  NAME IS THE CONSTITUENT NAME, WHICH SHOULD
C*  BE LEFT JUSTIFIED IN THE ALPHANUMERIC FIELD, WHILE FREQC IS ITS
C*  FREQUENCY MEASURED IN CYCLES PER HOUR.
C*
C*  3) ONE RECORD IN THE FORMAT (8I5) CONTAINING THE FOLLOWING
C*  INFORMATION ON THE TIME PERIOD OF THE ANALYSIS.
C*  ID1,IM1,IY1 - DAY,MONTH,YEAR OF THE BEGINNING OF THE ANALYSIS
C*                PERIOD,
C*  ID2,IM2,IY2 - DAY,MONTH,YEAR OF THE END OF THE ANALYSIS PERIOD.
C*  IC1,IC2     - CENTURY OFR THE BEGINNING AND END OF THE ANALYSIS
C*                PERIOD (ZERO VALUES ARE RESET TO 19)
C*
C*
C*  4)ONE RECORD IN THE FORMAT (I5,5A4,1X,A4,4I5) CONTAINING THE
C*  FOLLOWING TIDAL STATION  INFORMATION.
C*  JSTN      = TIDAL STATION NUMBER,
C*  (NSTN(I),I=1,5) = TIDAL STATION NAME,
C*  ITZ       = TIME ZONE IN WHICH THE OBSERVATIONS WERE RECORDED,
C*  LATD,LATM = STATION LATITUDE IN DEGREES AND MINUTES,
C*  LOND,LONM = STATION LONGITUDE IN DEGREES AND MINUTES.
C*
C*  5)ONE RECORD FOR EACH POSSIBLE INFERENCE PAIR.  THE FORMAT IS
C*  (2(4X,A5,E16.10),2F10.3) AND THE RESPECTIVE VALUES READ (THRU ENTRY
C*  POINT OPNINF OF SUBROUTINE INFER) ARE:
C*  KONAN,SIGIN    = THE NAME AND FREQUENCY OF THE ANALYSED CONSTITUENT
C*                   TO BE USED FOR THE INFERENCE,
C*  KONIN,SIGIN    = THE NAME AND FREQUENCY OF THE INFERRED CONSTITUENT,
C*  R              = AMPLITUDE RATIO OF KONIN TO KONAN,
C*  ZETA           = THE GREENWICH PHASE LAG OF THE INFERRED CONSTITUENT
C*                   SUBTRACTED FROM THE GREENWICH PHASE LAG OF THE
C*                   ANALYSED CONSTITUENT.
C*  THESE RECORDS ARE TERMINATED BY ONE BLANK RECORD.
C*
C*  FOR KR1 INPUT, ALL CONSTITUENT NAMES SHOULD BE LEFT JUSTIFIED IN
C*  THE ALPHANUMERIC FIELD, FREQUENCIES ARE MEASURED IN CYCLES/HOUR, AND
C*  ALL CONSTITUENTS MUST BE INCLUDED IN THE LIST IN APPENDIX 1 OF THE
C*  MANUAL.
C
      READ(KR1,10) MF,IDERV,WT
      M=2*MF-1
   10 FORMAT(2I5,F5.2)
      READ(KR1,11) (NAME(I),FREQC(I),I=1,MF)
   11 FORMAT(A5,2X,F13.10)
      WRITE(LP,12)
   12 FORMAT('1NAMES AND FREQUENCIES OF CONSTITUENTS TO BE USED IN THE F
     1IT ARE')
      WRITE(LP,13) (NAME(I),FREQC(I),I=1,MF)
   13 FORMAT((1X,6(A5,F12.10,3X)))
      READ(KR1,7) ID1,IM1,IY1,ID2,IM2,IY2,IC1,IC2
      IF(IC1.EQ.0) IC1=19
      IF(IC2.EQ.0) IC2=19
    7 FORMAT(16I5)
      READ(KR1,9) JSTN,(NSTN(I),I=1,5),ITZ,LATD,LATM,LOND,LONM
    9 FORMAT(I5,5A4,1X,A4,4I5)
      WRITE(LP,15) ID1,IM1,IC1,IY1,ID2,IM2,IC2,IY2,ITZ
   15 FORMAT(//' THE ANALYSIS PERIOD IS FROM',I3,'/',I2,'/',I2,I2,
     1' TO ',I2,'/',I2,'/',I2,I2,'  IN THE TIME ZONE ',A4)
      WRITE(LP,8) JSTN,(NSTN(I),I=1,5),LATD,LATM,LOND,LONM
    8 FORMAT(' AND IS FOR STATION NUMBER',I5,' , ',5A4,', WHICH IS LOCAT
     1ED AT LATITUDE',2I3,' AND LONGITUDE',I4,I3)
      XLAT=LATD+ISIGN(LATM,LATD)/60.
      IF(ABS(XLAT).LT.5.) XLAT=SIGN(5.,XLAT)
      CALL GDAY(ID1,IM1,IY1,IC1,KD1)
      KH1=24*KD1
      CALL GDAY(ID2,IM2,IY2,IC2,KD2)
      KH2=24*(KD2+1)
      KHM=(KH1+KH2)/2
      CENHR=FLOAT((KH2-KH1)/2)
c
c	read in the astronomical argument information
c	 and re-calculate the constituent frequencies
      CALL OPNVUF(KHM,KON,VUX,FX,XLAT)
      CALL SETVUF(KHM,KON,VUX,FX,XLAT)
      DO 14 I=1,MF
   14 FREQ(I)=FREQC(I)*TWPI
C
C***********************************************************************
C*  READ FROM DEVICE KR2 THE OBSERVED TIDAL HEIGHTS AND TIMES.
C*
C*  EACH RECORD HAS THE FORMAT (2X,I5,2I3,I2,6(I3,I2,F5.1),3X,I2) AND CONTAINS
C*  THE FOLLOWING IN FORMATION:
C*  ISTN      = TIDAL STATION NUMBER;
C*  ID,IM,IY  = DAY,MONTH, AND YEAR OF SUBSEQUENT OBSERVATIONS;
C*  ITH,ITM,HT= TIMES(IN HOURS AND MINUTES), AND HEIGHTS, OF UP TO
C*              SIX OBSERVATIONS FOR THE SPECIFIED DATE.  IF THERE ARE
C*              LESS THAN SIX OBSERVATIONS FOR A DAY, THEY ARE PADDED
C*              TO THAT NUMBER WITH THE VALUES 99,99, AND 99.9 FOR THE
C*              TIMES AND HEIGHTS RESPECTIVELY. IF THERE ARE MORE THAN
C*              SIX OBSERVATIONS ON A GIVEN DAY, INCLUDE AS MANY RECORDS
C*              AS ARE NECESSARY, EACH WITH THE SAME REPEATED DATE;
C*  IC        = CENTURY OF SUBSEQUENT OBSERVATIONS.
C*  MISSING DAYS AND/OR MISSING OBSERVATIONS(HIGH/LOWS) ARE ACCEPTABLE.
C*  HOWEVER, IT IS NECESSARY THAT THE RECORDS BE ORDERED ACCORDING TO
C*  DATE.
C*  THERE MUST BE AT LEAST ONE RECORD FOR EACH OF THE DATES ID1/IM1/IY1
C*  AND ID2/IM2/IY2.
C*  A ZERO VALUE FOR IC IS RESET TO 19
C
   16 FORMAT(2X,I5,2I3,I2,6(I3,I2,F5.1),3X,I2)
      DO 17 I=1,1000
      READ(KR2,16) ISTN,ID,IM,IY,(ITH(J),ITM(J),HT(J),J=1,6),IC
	IF(IC.EQ.0) IC=19
      CALL GDAY(ID,IM,IY,IC,KD)
      IF(KD.EQ.KD1) GO TO 18
   17 CONTINUE
      WRITE(LP,22)
   22 FORMAT('0COULD NOT FIND THE STARTING DATE')
      STOP
C
C***********************************************************************
C*  DETERMINE THE CENTRAL HOUR OF THE ANALYSIS PERIOD AND SET UP THE
C*  DEPENDENT AND INDEPENDENT VARIABLES, Y AND X.
C
   18 K=1
      CUMHR=-CENHR+24.D0*(KD-KD1)
      DO 19 J=1,6
      IF(ITH(J).EQ.99) GO TO 20
      IT=100*ITH(J)+ITM(J)
      IF(IT.EQ.0) GO TO 20
      Y(K)=HT(J)
      X(K)=CUMHR+FLOAT(ITH(J))+FLOAT(ITM(J))/60.
      K=K+1
   19 CONTINUE
   20 DO 21 I=1,MXNDAY
      READ(KR2,16,END=99) ISTN,ID,IM,IY,(ITH(J),ITM(J),HT(J),J=1,6)
     1,IC
      IF(IC.EQ.0) IC=19
      CALL GDAY(ID,IM,IY,IC,KD)
      IF(KD.GT.KD2) GO TO 25
      CUMHR=-CENHR+24.*(KD-KD1)
      DO 23 J=1,6
      IF(ITH(J).EQ.99) GO TO 24
      IT=100*ITH(J)+ITM(J)
      IF(IT.EQ.0) GO TO 24
      Y(K)=HT(J)
      X(K)=CUMHR+FLOAT(ITH(J))+FLOAT(ITM(J))/60.
      K=K+1
   23 CONTINUE
   24 CONTINUE
   21 CONTINUE
   99 IF(KD.EQ.KD2) GO TO 25
      WRITE(LP,26)
   26 FORMAT('0 COULD NOT FIND THE FINISHING DATE')
      STOP
   25 N=K-1
      WRITE(LP,27) N
   27 FORMAT('0IT INCLUDES THE FOLLOWING',I5,'  OBSERVED HEIGHTS')
      WRITE(LP,47) (Y(I),I=1,N)
      WRITE(LP,46)
   46 FORMAT('0WHICH OCCUR AT THE FOLLOWING HOURS RELATIVE TO THE CENTRE
     1 OF THE ANALYSIS PERIOD')
      WRITE(LP,47) (X(I),I=1,N)
   47 FORMAT(' ',13F10.2)
C
C***********************************************************************
C*  SETTING UP THE OVERDETERMINED MATRIX AND SOLVING WITH MODIFIED
C*  GRAM-SCHMIDT.  IF IDERV IS NON ZERO, DERIVATIVE INFORMATION IS ALSO
C*  INCLUDED AND THESE EQUATIONS ARE MULTIPLIED BY THE WEIGHT WT.
C
      DO 28 I=1,N
      Q(I,1)=1.
      Q(I,NMAXP1)=Y(I)
      DO 28 J=2,MF
      ARG=X(I)*FREQ(J)
      JJ=2*(J-1)
      JJ1=JJ+1
      Q(I,JJ)=COS(ARG)
   28 Q(I,JJ1)=SIN(ARG)
      NMAX=M
      MEQ=N
      IF(IDERV.EQ.0) GO TO 29
      NP1=N+1
      MEQ=2*N
      DO 30 I=NP1,MEQ
      II=I-N
      Q(I,1)=0.
      Q(I,NMAXP1)=0.
      DO 30 J=2,MF
      ARG=X(II)*FREQ(J)
      FWT=FREQ(J)*WT
      JJ=2*(J-1)
      JJ1=JJ+1
      Q(I,JJ)=-FWT*SIN(ARG)
   30 Q(I,JJ1)=FWT*COS(ARG)
   29 ICODE=1
      TOLER=1.E-6
      SSQ=1.0
      RES=1.0
      NCOL=NMAX
      NEW=NMAX
C
C***********************************************************************
C*  CALCULATION OF THE STANDARD DEVIATION OF THE RIGHT HAND SIDES OF
C*  THE OVERDETERMINED SYSTEM
C
      AV=0.D0
      DO 64 I=1,MEQ
   64 AV=AV+Q(I,NMAXP1)
      AV=AV/MEQ
      SDEV=0.D0
      DO 65 I=1,MEQ
   65 SDEV=SDEV+(Q(I,NMAXP1)-AV)**2
      SDEV=SDEV/(MEQ-1)
      SDEV=SQRT(SDEV)
C
C***********************************************************************
C*  MODIFIED GRAM-SCHMIDT SOLUTION OF THE OVERDETERMINED SYSTEM OF
C*  EQUATIONS.
C
      CALL MGS(ICODE,MEQ,NMAX,NMAXP1,NMAXPM,NEW,NCOL,Q,TOLER,JCODE,P,SSQ
     1,RES)
      IF(JCODE.EQ.0) GO TO 31
      WRITE(LP,32) JCODE
   32 FORMAT('1COLUMN',I5,'  IS DEPENDENT AND THE FULL LEAST SQUARES SOL
     1UTION COULD NOT BE FOUND')
      WRITE(6,54)
   54 FORMAT(' THE SUGGESTED CORRECTIVE PROCEDURE IS EITHER',/'      1)
     1TO INCREASE THE VALUE OF TOLER SLIGHTLY (AS A ROUGH GUIDE, IT SHOU
     2LD NOT EXCEED 10**(-4))',/' OR   2) TO REMOVE FROM THE LEAST SQUAR
     3ES ANALYSIS THE CONSTITUENT(OR ITS NEAREST NEIGHBOUR, DEPENDING ON
     4 WHICH ONE',/'         HAS THE SMALLEST EXPECTED AMPLITUDE) CORRES
     5PONDING TO THIS TIDAL COEFFICIENT PARAMETER')
      STOP
   31 WRITE(LP,33)
   33 FORMAT('1SOLUTION TO THE SYSTEM OF EQUATIONS IS AS FOLLOWS')
      IF(IDERV.EQ.0) GO TO 34
      WRITE(LP,35) WT
   35 FORMAT(' ZERO DERIVATIVE INFORMATION AT THE OBSERVED POINTS WAS US
     1ED WITH WEIGHT =',F10.5)
      GO TO 36
   34 WRITE(LP,37)
   37 FORMAT(' ZERO DERIVATIVE INFORMATION AT THE OBSERVED POINTS WAS NO
     1T USED')
   36 WRITE(LP,38)
   38 FORMAT('0VALUES FOR THE CONSTANT TERM AND COEFFICIENTS FOR THE COS
     1INE AND SINE TERMS OF ALL OTHER CONSTITUENTS ARE')
      WRITE(LP,44) (P(I),I=1,M)
   44 FORMAT(' ',13F10.3)
      WRITE(LP,52) RES,SSQ
   52 FORMAT('0THE LARGEST RESIDUAL IN MAGNITUDE AND THE RESIDUAL SUM OF
     1 SQUARES FOR THIS SOLUTION ARE RESPECTIVELY',2E15.6)
      RMSR=SQRT(SSQ/(MEQ-M))
      WRITE(LP,66) SDEV,RMSR
   66 FORMAT('0STANDARD DEVIATION OF THE RIGHT HAND SIDES OF THE ORIGINA
     1L OVERDETERMINED SYSTEM IS',E15.6/' AND THE ROOT MEAN SQUARE RESID
     1UAL ERROR IS',E15.6)
C
C***********************************************************************
C*  CALCULATION OF THE RAW AMPLITUDES AND PHASES
C
      AMP(1)=P(1)
      PH(1)=0.
      FAC=360./TWPI
      DO 39 I=2,MF
      I2=2*(I-1)
      I21=I2+1
      C=P(I2)
      S=P(I21)
	write(6,*) i,c,s
      AAMP=SQRT(C*C+S*S)
      IF(AAMP.LT.1.E-5) GO TO 40
      PH(I)=ATAN2(S,C)*FAC
      GO TO 39
   40 PH(I)=0.
39      AMP(I)=AAMP
C
C***********************************************************************
C*  CALCULATION OF THE ASTRONOMICAL PHASE ARGUMENT AND THE NODAL
C*  MODULATION PHASE AND AMPLITUDE CORRECTIONS.
C*  VUX IS RETURNED IN UNITS CYCLES.
C
      DO 45 I=1,MF
	write(6,*) i,name(i),xlat,khm
      CALL VUF(KHM,NAME(I),VUX,FX,XLAT)
	write(6,*) i,name(i),vux,fx,xlat,khm
      AMPC(I)=AMP(I)/FX
      PHG(I)=VUX*360.+PH(I)
      PHG(I)=AMOD(PHG(I),360.)
      IF(PHG(I).LT.0.) PHG(I)=PHG(I)+360.
	write(6,*) ampc(i),phg(i)
   45 CONTINUE
      WRITE(LP,41)
   41 FORMAT('1HARMONIC TIDAL ANALYSIS RESULTS:'/' RAW AMPLITUDES AND RA
     1W LOCAL PHASES ARE FOLLOWED BY NODALLY CORRECTED AMPLITUDES AND GR
     2EENWICH PHASES')
      DO 42 I=1,MF
   42 WRITE(LP,43) NAME(I),FREQC(I),AMP(I),PH(I),AMPC(I),PHG(I)
   43 FORMAT(' ',5X,A5,4X,F12.9,5X,F10.3,5X,F10.2,5X,F10.3,5X,F10.2)
C
C***********************************************************************
C*  INFERENCE CALCULATIONS ARE DONE NOW, IF SO REQUESTED.
C
      NHR=KH2-KH1
      CALL OPNINF(NAME,MF,NHR,KON,AAN,EPSAN,KON,AIN,EPSIN,SIGIN,NIN)
      IF(NIN.EQ.0) GO TO 56
      MFO=MF
      I=1
   57 CONTINUE
      AAN=AMP(I)
      EPSAN=PH(I)/360.
      CALL INFER(NAME,MF,NHR,NAME(I),AAN,EPSAN,KONIN,AIN,EPSIN,SIGIN,NIN
     1)
      IF(KONIN.EQ.KBLANK) GO TO 67
   58 SIGIN=SIGIN*TWPI
      EPSAN=360.*EPSAN
      EPSIN=360.*EPSIN
      EPSAN=AMOD(EPSAN,360.)
      EPSIN=AMOD(EPSIN,360.)
C
C*  ADJUSTING THE ORDER TO INCLUDE THE NEW INFERRED CONSTITUENT
C
      IP2=I+2
      MF=MF+1
      DO 60 K=IP2,MF
      KK=MF+IP2-K
      KM1=KK-1
      NAME(KK)=NAME(KM1)
      FREQ(KK)=FREQ(KM1)
      AMP(KK)=AMP(KM1)
   60 PH(KK)=PH(KM1)
      IP1=I+1
      IF(SIGIN.GT.FREQ(I)) GO TO 59
      NAME(IP1)=NAME(I)
      FREQ(IP1)=FREQ(I)
      AMP(IP1)=AAN
      PH(IP1)=EPSAN
      NAME(I)=KONIN
      FREQ(I)=SIGIN
      AMP(I)=AIN
      PH(I)=EPSIN
      GO TO 63
   59 AMP(I)=AAN
      PH(I)=EPSAN
      NAME(IP1)=KONIN
      FREQ(IP1)=SIGIN
      AMP(IP1)=AIN
      PH(IP1)=EPSIN
   63 I=IP1
   67 I=I+1
      IF(I.LE.MF) GO TO 57
      IF(MF.EQ.MFO) GO TO 56
      WRITE(LP,61)
   61 FORMAT('0THE SAME RESULTS WITH INFERENCE')
      DO 62 I=1,MF
      FREQC(I)=FREQ(I)/TWPI
      CALL VUF(KHM,NAME(I),VUX,FX,XLAT)
      AMPC(I)=AMP(I)/FX
      PHG(I)=VUX*360.+PH(I)
      PHG(I)=AMOD(PHG(I),360.)
      IF(PHG(I).LT.0.) PHG(I)=PHG(I)+360.
   62 WRITE(LP,43) NAME(I),FREQC(I),AMP(I),PH(I),AMPC(I),PHG(I)
C
C***********************************************************************
C*  CALCULATION OF THE NEW RESIDUAL ROOT MEAN SQUARE ERROR AFTER
C*  INFERENCE.
C
      SDEV=0.D0
      FAC=TWPI/360.
      DO 68 I=1,N
      SUM1=P(1)
      DO 69 J=2,MF
      ARG=X(I)*FREQ(J)-PH(J)*FAC
   69 SUM1=SUM1+AMP(J)*COS(ARG)
      SDEV=SDEV+(Y(I)-SUM1)**2
      IF(IDERV.EQ.0) GO TO 68
      SUM2=0.D0
      DO 70 J=2,MF
      ARG=X(I)*FREQ(J)-PH(J)*FAC
   70 SUM2=SUM2-FREQ(J)*SIN(ARG)
      SDEV=SDEV+(WT*SUM2)**2
   68 CONTINUE
      SSQ=SDEV
      RMSR=SQRT(SSQ/(MEQ-M))
      WRITE(LP,71) RMSR
   71 FORMAT('0AND THE ROOT MEAN SQUARE RESIDUAL ERROR AFTER INFERENCE I
     1S',E15.6)
   56 CONTINUE
      STOP
      END
      SUBROUTINE VUF (KH,KONX,VUX,FX,XLAT)
C
C***********************************************************************
C*  THIS SUBROUTINE CALCULATES V (ASTRONOMICAL PHASE ARGUMENT), U AND F
C*  (NODAL MODULATION PHASE AND AMPLITUDE CORRECTIONS) FOR ALL CONSTITU-
C*  ENTS.
c*
C*	This October 1992 version also recalculates the constituent
c	frequencies for the middle of the analysis period
C
      character*5 KON,KBLANK,KONCO,KONX,kontab
	real*8 d1,h,pp,s,p,enp,dh,dpp,ds,dp,dnp,hh,tau,dtau
      DIMENSION KON(170),VU(170),F(170),NJ(170),II(50),JJ(50),KK(50),
     1 LL(50),MM(50),NN(50),SEMI(50),kontab(20),freq(20)
      DIMENSION EE(180),LDEL(180),MDEL(180),NDEL(180),IR(180),PH(180)
      DIMENSION KONCO(320),COEF(320),indx(170)
      	common /const/kontab,freq,mtot
	DATA KBLANK/'     '/
C
C***********************************************************************
C*  THE DIMENSION OF KON, VU, F, AND NJ SHOULD BE AT LEAST EQUAL TO THE
C*  TOTAL NUMBER OF POSSIBLE CONSTITUENTS (PRESENTLY 146), THE DIMENSION
C*  OF II, JJ, KK, LL, MM, NN AND SEMI SHOULD BE AT LEAST EQUAL TO THE
C*  NUMBER OF MAIN CONSTITUENTS (PRESENTLY 45), THE DIMENSION OF EE,
C*  LDEL, MDEL, NDEL, IR, AND PH SHOULD BE AT LEAST EQUAL TO THE TOTAL
C*  NUMBER OF SATELLITES TO ALL THE MAIN CONSTITUENTS PLUS THE NUMBER
C*  OF CONSTITUENTS WITH NO SATELLITES (PRESENTLY 162+8),
C*  AND THE DIMENSION OF KONCO, AND COEFF SHOULD BE AT LEAST EQUAL TO
C*  THE SUM FOR ALL SHALLOW WATER CONSTITUENTS OF THE NUMBER OF MAIN
C*  CONSTITUENTS FROM WHICH EACH IS DERIVED (PRESENTLY 251).
C***********************************************************************
C* GIVEN CONSTITUENT KONX , THE NODAL CORRECTIONS V+U AND F ARE RETURNED
C
      DO 20 K=1,NTOTAL
      IF(KON(K).eq.KONX) go to 40
20    CONTINUE
      WRITE(LP,30)KONX
   30 FORMAT(' VUF STOP.',A5)
      STOP
40    VUX=VU(K)
      FX=F(K)
      RETURN
C
C***********************************************************************
C*  THE ASTRONOMICAL ARGUMENTS AND THEIR RATES OF CHANGE,
C*  S0,H0,P0,ENP0,PP0,DS,DH,DP,DNP,DPP,  ARE READ FROM TWO RECORDS IN
C*  THE FORMAT(5F13.10):
C*     S0  = MEAN LONGITUDE OF THE MOON (CYCLES) AT 000 ET 1/1/1976.
C*     H0  = MEAN LONGITUDE OF THE SUN.
C*     P0  = MEAN LONGITUDE OF THE LUNAR PERIGEE.
C*     ENP0= NEGATIVE OF THE MEAN LONGITUDE OF THE ASCENDING NODE.
C*     PP0 = MEAN LONGITUDE OF THE SOLAR PERIGEE (PERIHELION).
C*     DS,DH,DP,DNP,DPP ARE THEIR RESPECTIVE RATES OF CHANGE OVER A 365
C*     DAY PERIOD AS OF 000 ET 1/1/1976.
C
      ENTRY OPNVUF(KH,KONX,VUX,FX,XLAT)
      KR=8
      LP=6
      PI=3.1415926536
      TWOPI=2.*PI
c	These values are no longer used though they are still
c	read in. More accurate polynomial approximations are 
c	now employed.
      READ(KR,50)S0,H0,P0,ENP0,PP0,DS,DH,DP,DNP,DPP
 50   FORMAT(5F13.10)
C
C***********************************************************************
C*  HERE THE MAIN CONSTITUENTS AND THEIR DOODSON NUMBERS ARE READ IN
C*  FORMAT (6X,A5,1X,6I3,F5.2,I4). THE VALUES ARE RESPECTIVELY
C*     KON    = CONSTITUENT NAME
C*  II,JJ,KK,LL,MM,NN = THE SIX DOODSON NUMBERS
C*     SEMI   = PHASE CORRECTION
C*     NJ     = THE NUMBER OF SATELLITES FOR THIS CONSTITUENT.
C*  THE END OF ALL MAIN CONSTITUENTS IS DENOTED BY A BLANK CARD.
C
      JBASE=0
      DO 90 K=1,1000
      READ(KR,60)KON(K),II(K),JJ(K),KK(K),LL(K),MM(K),NN(K),SEMI(K),
     2 NJ(K)
   60 FORMAT(6X,A5,1X,6I3,F5.2,I4)
      IF(KON(K).eq.KBLANK) go to 100
70    J1=JBASE+1
      IF(NJ(K).GE.1) GO TO 75
      NJ(K)=1
      JL=J1
      PH(J1)=0.
      EE(J1)=0.
      LDEL(J1)=0
      MDEL(J1)=0
      NDEL(J1)=0
      IR(J1)=0
      GO TO 90
   75 JL=JBASE+NJ(K)
C
C***********************************************************************
C*  IF NJ&gt;0, INFORMATION ON THE SATELLITE CONSTITUENTS IS READ , THREE
C*  SATELLITES PER CARD, IN THE FORMAT (11X,3(3I3,F4.2,F7.4,1X,I1,1X)).
C*  FOR EACH SATELLITE THE VALUES READ ARE
C*     LDEL,MDEL,NDEL = THE CHANGES IN THE LAST THREE DOODSON NUMBERS
C*                      FROM THOSE OF THE MAIN CONSTITUENT.
C*     PH     = THE PHASE CORRECTION
C*     EE     = THE AMPLITUDE RATIO OF THE SATELLITE TIDAL POTENTIAL TO
C*              THAT OF THE MAIN CONSTITUENT.
C*     IR     = 1 IF THE AMPLITUDE RATIO HAS TO BE MULTIPLIED BY THE
C*                LATITUDE CORRECTION FACTOR FOR DIURNAL CONSTITUENTS
C*              2 IF THE AMPLITUDE RATIO HAS TO BE MULTIPLIED BY THE
C*                LATITUDE CORRECTION FACTOR FOR SEMI-DIURNAL CONSTI-
C*                TUENTS.
C*              OTHERWISE IF NO CORRECTION IS REQUIRED TO THE AMPLITUDE
C*                RATIO.
C
      READ(KR,80)(LDEL(J),MDEL(J),NDEL(J),PH(J),EE(J),IR(J),J=J1,JL)
   80 FORMAT((11X,3(3I3,F4.2,F7.4,1X,I1,1X)))
90    JBASE=JL
100   NTIDAL=K-1
C
C***********************************************************************
C*  THE SHALLOW WATER CONSTITUENTS AND THE MAIN CONSTITUENTS FROM WHICH
C*  THEY ARE DERIVED ARE READ IN HERE WITH THE FORMAT
C*  (6X,A5,I1,2X,4(F5.2,A5,5X)). THE VALUES ARE RESPECTIVELY
C*     KON    = NAME  OF THE SHALLOW WATER CONSTITUENT
C*     NJ     = NUMBER OF MAIN CONSTITUENTS FROM WHICH IT IS DERIVED.
C*     COEF,KONCO = COMBINATION NUMBER AND NAME OF THESE MAIN
C*                  CONSTITUENTS.
C*  THE END OF THESE CONSTITUENTS IS DENOTED BY A BLANK CARD.
C
      JBASE=0
      K1=NTIDAL+1
      DO 160 K=K1,1000
      J1=JBASE+1
      J4=J1+3
      READ(KR,130)KON(K),NJ(K),(COEF(J),KONCO(J),J=J1,J4)
  130 FORMAT(6X,A5,I1,2X,4(F5.2,A5,5X))
      IF(KON(K).eq.KBLANK) go to 170
160   JBASE=JBASE+NJ(K)
170   NTOTAL=K-1
      RETURN
C
C***********************************************************************
C*  NTIDAL IS THE NUMBER OF MAIN CONSTITUENTS
C*  NTOTAL IS THE NUMBER OF CONSTITUENTS (MAIN + SHALLOW WATER)
C*  FOR  THE GIVEN TIME KH, THE TABLE OF F AND V+U VALUES IS
C*  CALCULATED FOR ALL THE CONSTITUENTS.
C*     F IS THE NODAL MODULATION ADJUSTMENT FACTOR FOR AMPLITUDE
C*     U IS THE NODAL MODULATION ADJUSTMENT FACTOR FOR PHASE
C*     V IS THE ASTRONOMICAL ARGUMENT ADJUSTMENT FOR PHASE.
C
      ENTRY SETVUF(KH,KONX,VUX,FX,XLAT)
      SLAT=SIN(PI*XLAT/180.)
c      CALL GDAY(1,1,76,19,KD)
c      YEARS=(KH/24.D0-KD)/365.00D0
C
C***********************************************************************
C*  THE ASTRONOMICAL ARGUMENTS ARE CALCULATED BY LINEAR APPROXIMATION
C*  AT THE MID POINT OF THE ANALYSIS PERIOD.
C
c      S=S0+YEARS*DS
c      H=H0+YEARS*DH
c      P=P0+YEARS*DP
c      ENP=ENP0+YEARS*DNP
c      PP=PP0+YEARS*DPP
c	day number measured from January 0.5 1900 (i.e.,
c	1200 UT December 31, 1899
	d1=kh/24.d0
	call gday(31,12,99,18,kd0)
	d1=d1-dfloat(kd0)-0.5d0
	call astr(d1,h,pp,s,p,enp,dh,dpp,ds,dp,dnp)
      INT24=24
      INTDYS=KH/INT24
      HH=dfloat(KH-INTDYS*INT24)
      TAU=HH/24.D0+H-S
	dtau=365.d0+dh-ds
C
C***********************************************************************
C*  ONLY THE FRACTIONAL PART OF A SOLAR DAY NEED BE RETAINED FOR COMPU-
C*  TING THE LUNAR TIME TAU.
C
      JBASE=0
      DO 210 K=1,NTIDAL
	do 209 l=1,mtot
	if(kon(k).eq.kontab(l)) then
      FREQ(l)=(II(K)*DTAU+JJ(K)*DS+KK(K)*DH+LL(K)*DP+MM(K)*DNP+
     1NN(K)*DPP)/(365.*24.)
	indx(k)=l
	end if
209	continue
      VDBL=II(K)*TAU+JJ(K)*S+KK(K)*H+LL(K)*P+MM(K)*ENP+NN(K)*PP+SEMI(K)
      IV=VDBL
      IV=(IV/2)*2
      V=VDBL-IV
      J1=JBASE+1
      JL=JBASE+NJ(K)
      SUMC=1.
      SUMS=0.
      DO 200 J=J1,JL
C
C***********************************************************************
C*  HERE THE SATELLITE AMPLITUDE RATIO ADJUSTMENT FOR LATITUDE IS MADE
C
      RR=EE(J)
      L=IR(J)+1
      GO TO (901,902,903),L
  902 RR=EE(J)*0.36309*(1.-5.*SLAT*SLAT)/SLAT
      GO TO 901
  903 RR=EE(J)*2.59808*SLAT
  901 CONTINUE
      UUDBL=LDEL(J)*P+MDEL(J)*ENP+NDEL(J)*PP+PH(J)
      IUU=UUDBL
      UU=UUDBL-IUU
      SUMC=SUMC+RR*COS(UU*TWOPI)
      SUMS=SUMS+RR*SIN(UU*TWOPI)
  200 CONTINUE
      F(K)=SQRT(SUMC*SUMC+SUMS*SUMS)
      VU(K)=V+ATAN2(SUMS,SUMC)/TWOPI
210   JBASE=JL
C
C***********************************************************************
C*  HERE F AND V+U OF THE SHALLOW WATER CONSTITUENTS ARE COMPUTED FROM
C*  THE VALUES OF THE MAIN CONSTITUENT FROM WHICH THEY ARE DERIVED.
C
      JBASE=0
      K1=NTIDAL+1
      IF(K1.GT.NTOTAL) RETURN
      DO 270 K=K1,NTOTAL
      F(K)=1.0
      VU(K)=0.0
	iflag=0
	do 269 lk=1,mtot
	if(kon(k).eq.kontab(lk)) then
      FREQ(lk)=0.
	iflag=1
	go to 268
	end if
269	continue
268   J1=JBASE+1
      JL=JBASE+NJ(K)
      DO 260 J=J1,JL
      KM1=K-1
      DO 240 L=1,KM1
      IF(KON(L).eq.KONCO(J)) go to 250
240   CONTINUE
      WRITE(LP,241)KONCO(J)
  241 FORMAT('   SETVUF STOP.',A5)
      STOP
250   F(K)=F(K)*F(L)**ABS(COEF(J))
      VU(K)=VU(K)+COEF(J)*VU(L)
      if(iflag.eq.1) FREQ(lk)=FREQ(lk)+COEF(J)*FREQ(indx(L))
260	continue
270   JBASE=JL
      RETURN
      END
      SUBROUTINE INFER(KON,M,N,KONA,AAN,EPSAN,KONI,AIN,EPSIN,SIGI,NIN)
C
C***********************************************************************
C*  THIS SUBROUTINE INFERS THE AMPLITUDE &amp; PHASE OF A CONSTITUENT NOT
C*  INCLUDED IN THE ANALYSIS FROM ONE THAT WAS. THE AMPLITUDE &amp; PHASE OF
C*  THE CONSTITUENT USED FOR THE INFERENCE IS APPROPRIATELY ADJUSTED.
C
C*     KONAN &amp; SIGAN ARE THE NAME AND FREQUENCY OF A CONSTITUENT TO BE
C*                   USED FOR INFERENCE.
C*     KONIN &amp; SIGIN ARE THE NAME AND FREQUNCY OF A CONSTITUENT TO BE
C*                   INFERRED FROM KONAN.
C*     R IS THE AMPLITUDE RATIO OF KONIN TO KONAN.
C*     ZETA IS THE GREENWICH PHASE LAG OF THE MAIN CONSTITUENT -
C*          GREENWICH PHASE LAG OF THE INFERRED CONSTITUENT.
C*  KONAN,SIGAN,KONIN,SIGIN,R,ZETA ARE READ FROM DEVICE MTD WITH THE
C*  FORMAT (2(4X,A5,E16.10),2F10.3). THEIR END IS DENOTED BY A BLANK
C*  CARD.
C
      CHARACTER*5 KONAN,KONIN,KBLANK,KON,KONI,KONA
      DIMENSION KON(20),KONAN(10),KONIN(10),R(10),ZETA(10)
      DIMENSION SIGAN(10),SIGIN(10)
C
C***********************************************************************
C*  TEST FOR INFERENCE
C*  IF A CONSTITUENT SPECIFIED FOR INFERENCE WAS INCLUDED DIRECTLY IN
C*  THE LEAST SQUARES FIT ANALYSIS, THEN THE INFERENCE IS IGNORED.
C
      DO 30 L=1,NIN
      IF(KONA.NE.KONAN(L)) GO TO 30
10    DO 20 KK=1,M
      IF(KONIN(L).EQ.KON(KK)) GO TO 30
20    CONTINUE
      GO TO 40
30    CONTINUE
      KONI=KBLANK
      RETURN
C
C***********************************************************************
C*  PERFORM INFERENCE
C
40    KONI  =KONIN(L)
      SIGI  =SIGIN(L)
      ZETAC=ZETA(L)/360.
      CALL VUF (KH,KONAN(L),VUAN,FAN,XLAT)
      CALL VUF (KH,KONIN(L),VUIN,FIN,XLAT)
      SIGDIF=SIGAN(L)-SIGIN(L)
      DSIGIA=SIGDIF*N*PI
      IBANG=SIGDIF*N*.5D0
      BANG=(SIGDIF*N*.5D0-IBANG)*TWOPI
      V=SIN(BANG)/DSIGIA
      FACTOR=R(L)*V*FIN/FAN
      ETA=(VUIN-VUAN+ZETAC)*TWOPI
      STERM=FACTOR*SIN(ETA)
      CTERM=1.+FACTOR*COS(ETA)
      DG=ATAN2(STERM,CTERM)/TWOPI
      DIV=SQRT(CTERM*CTERM+STERM*STERM)
      EPSAN=EPSAN+DG
      AAN=AAN/DIV
      EPSIN=EPSAN+VUAN-ZETAC-VUIN
      AIN=(AAN/FAN)*R(L)*FIN
      RETURN
C
C***********************************************************************
C*  READ INFERENCE DATA.
C
      ENTRY OPNINF(KON,M,N,KONA,AAN,EPSAN,KONI,AIN,EPSIN,SIGI,NIN)
c      KR1=7
      KR1=5
      PI=3.1415926536
      TWOPI=2.*PI
      KBLANK='     '
      DO 1020 K=1,100
      READ(KR1,1010)KONAN(K),SIGAN(K),KONIN(K),SIGIN(K),R(K),ZETA(K)
 1010 FORMAT(2(4X,A5,E16.10),2F10.3)
      IF(KONAN(K).EQ.KBLANK) GO TO 1040
1020  CONTINUE
1040  NIN=K-1
      RETURN
      END
      SUBROUTINE MGS(ICODE,M,NMAX,NMAXP1,NMAXPM,NEW,N,Q,
     1TOLER,JCODE,X,SSQ,RES)
C MGS USES THE MODIFIED GRAM-SCHMIDT ALGORITHM TO
C CALCULATE THE LEAST-SQUARES SOLUTION TO AN OVERDETERMINED
C SYSTEM OF LINEAR EQUATIONS WITH COEFFICIENT MATRIX A AND
C RIGHT HAND SIDE VECTOR B.
C
C THERE ARE THREE WAYS TO USE MGS:
C 1 GIVEN AN OVERDETERMINED SYSTEM, MGS WILL ORTHOGONALIZE
C   A AND B AND PRODUCE THE LEAST-SQUARES SOLUTION.
C 2 GIVEN AN ORTHOGONALIZED A (I.E. OUTPUT FROM 1, 2 OR 3),
C   MGS WILL ORTHOGONALIZE B WITH RESPECT TO A AND PRODUCE
C   THE LEAST-SQUARES SOLUTION. THIS ALLOWS THE USE OF
C   MULTIPLE R.H.S. WITHOUT REORTHOGONALIZING A.
C 3 GIVEN A AND B ORTHOGONALIZED (I.E. OUTPUT FROM 1, 2, OR
C   3), MGS WILL PROCESS ADDITIONAL COLUMNS OF A AND
C   CALCULATE THE LEAST-SQUARES SOLUTION. THIS ALLOWS
C   ADDITIONAL BASIS FUNCTIONS TO BE USED WITHOUT
C   REORTHOGONALIZING THE PREVIOUS BASIS.
C
C DESCRIPTION OF PARAMETERS:
C ICODE  AN INPUT CODE WHICH MUST BE SET TO 1, 2 OR 3
C        CORRESPONDING TO THE THREE OPTIONS ABOVE.
C M      THE NUMBER OF EQUATIONS.
C NMAX   THE MAXIMUM NUMBER OF UNKNOWNS.
C NMAXP1 THE NUMBER OF COLUMNS OF Q, AT LEAST NMAX+1.
C NMAXPM THE NUMBER OF ROWS OF Q, AT LEAST NMAX+M.
C NEW    FOR OPTION 3, NEW MUST BE SET TO THE INDEX OF THE
C        FIRST NEW COLUMN OF A (NEW MUST NOT EXCEED N).
C N      THE TOTAL NUMBER OF COLUMNS OF A TO BE USED (N MUST
C        NOT EXCEED NMAX). ON EXIT THE THE VALUE OF N IS
C        UNCHANGED UNLESS A DEPENDENT COLUMN IS DETECTED,
C        IN WHICH CASE N REPRESENTS THE ACTUAL NUMBER OF
C        COLUMNS THAT HAVE BEEN USED.
C Q      AN NMAXPM-BY-NMAXP1 ARRAY WHICH ON ENTRY MUST
C        CONTAIN THE MATRIX A IN ITS FIRST M ROWS AND N
C        COLUMNS, AND THE VECTOR B IN ITS FIRST M ROWS OF
C        COLUMN NMAXP1. THE FIRST N COLUMNS AND COLUMN
C        NMAXP1 OF THE NEXT N ROWS OF Q ARE USED AS WORK
C        SPACE BY MGS. ON EXIT THE RESIDUAL OF EQUATION
C        I IS STORED IN Q(I,NMAXP1), I=1 TO M.
C TOLER  AN INPUT TOLERANCE. IF THE INNER PRODUCT OF AN
C        ORTHOGONALIZED COLUMN WITH ITSELF IS LESS THAN
C        TOLER, THE COLUMN IS CONSIDERED TO BE DEPENDENT.
C        TYPICALLY TOLER IS CHOSEN TO BE LESS THEN 10**(-D)
C        WHERE D REPRESENTS THE NUMBER OF DECIMAL DIGITS
C        OF ACCURACY AVAILABLE. HOWEVER, IF A IS POORLY
C        SCALED IT MAY BE NECESSARY TO CHOOSE A MUCH LARGER
C        VALUE FOR TOLER.
C JCODE  AN OUTPUT CODE WHICH IS SET TO THE INDEX OF THE
C        DEPENDENT COLUMN, IF SUCH A COLUMN IS DETECTED.
C        IN THIS EVENT THE LEAST-SQUARES SOLUTION FOR
C        THE COLUMNS PRECEEDING COLUMN JCODE IS DETERMINED,
C        AND N IS SET TO JCODE-1 ON EXIT. THE USER CAN
C        THEN TAKE SOME CORRECTIVE ACTION, SUCH AS
C        REPLACING COLUMN JCODE AND CONTINUING THE
C        ORTHOGONALIZATION USING OPTION 3. IF NO
C        DEPENDENCY IS DETECTED, JCODE IS SET TO ZERO.
C X      AN OUTPUT ARRAY OF DIMENSION AT LEAST NMAX
C        CONTAINING THE LEAST-SQUARES SOLUTION IN POSITIONS
C        1 TO N.
C SSQ    IF SET TO 1.0 THE SUM OF SQUARES OF THE RESIDUALS
C        IS CALCULATED AND ON EXIT SSQ HAS THIS VALUE.
C        WHEN SET TO ANY OTHER NUMBER NO ACTION IS TAKEN.
C RES    IF SET TO 1.0 THE LARGEST RESIDUAL IN MAGNITUDE
C        IS FOUND AND ON EXIT RES HAS THIS VALUE.
C        WHEN SET TO ANY OTHER NUMBER NO ACTION IS TAKEN.
C
C AN IMPLEMENTATION NOTE:
C IF YOUR FORTRAN COMPILER PERMITS A SINGLE COLUMN OF A TWO
C DIMENSIONAL ARRAY TO BE PASSED TO A ONE DIMENSIONAL ARRAY
C THROUGH A SUBROUTINE CALL, CONSIDERABLE SAVINGS IN
C EXECUTION TIME MAY BE ACHIEVED THROUGH THE USE OF THE
C SUBROUTINE INPROD    WHICH OPERATES ON COLUMN VECTORS.
C THIS MODIFICATION IS PERMISSABLE ON THE UNIVAC 1106 AT PAT BAY.  SEE
C COMMENTS BELOW FOR INSTRUCTIONS ON REMOVING THIS CHANGE IF YOUR SYSTEM
C DOES NOT ALLOW IT.
C
      REAL*8 INP,DBLE
      DIMENSION Q(NMAXPM,NMAXP1),X(NMAX)
      M1=M+1
      JCODE=0
      IF(ICODE.NE.3) NEW=1
      IF(ICODE.EQ.2) GO TO 10
C SET UP A SQUARE IDENTITY MATRIX.
    1 DO 2 J=NEW,N
        MJ=M+J-1
        DO 2 I=M1,MJ
    2     Q(I,J)=0.0
      NS=NEW
      NE=N
      IF(NEW.NE.1) GO TO 4
C THE INNER PRODUCT (FROM I=1 TO M) OF AN ORTHOGONALIZED
C COLUMN WITH ITSELF IS STORED IN THE DIAGONAL POSITION OF
C THE CORRESPONDING COLUMN OF THE SQUARE IDENTITY MATRIX.
C IF SUBROUTINE INPROD CANNOT BE USED, REPLACE THE SUBSEQUENT CALL BY
C THE FOLLOWING FOUR STATEMENTS.
      INP=0.0D0
      DO 3 I=1,M
    3   INP=INP+DBLE(Q(I,1))**2
      PD=INP
c      CALL INPROD(Q(1,1),Q(1,1),PD,M)
      Q(M1,1)=PD
      IF(NEW.EQ.N) GO TO 10
      NS=2
      IF(PD.GE.TOLER) GO TO 4
      N=0
      JCODE=1
      GO TO 16
C ORTHOGONALIZE COLUMNS K=NS TO NE W.R.T. THE COLUMNS
C PRECEEDING K.
    4 IF(N.EQ.1) GO TO 10
      DO 9 K=NS,NE
        KM1=K-1
        DO 7 J=1,KM1
C IF SUBROUTINE INPROD CANNOT BE USED, REPLACE THE SUBSEQUENT CALL BY
C THE FOLLOWING FOUR STATEMENTS.
         INP=0.0D0
         DO 5 I=1,M
   5       INP=INP+DBLE(Q(I,J))*DBLE(Q(I,K))
          PN=INP
c          CALL INPROD(Q(1,J),Q(1,K),PN,M)
          MJ=M+J
          TERM=PN/Q(MJ,J)
          MJM1=MJ-1
          DO 6 I=1,MJM1
    6       Q(I,K)=Q(I,K)-TERM*Q(I,J)
    7     Q(MJ,K)=Q(MJ,K)-TERM
C IF SUBROUTINE INPROD CANNOT BE USED, REPLACE THE SUBSEQUENT CALL BY
C THE FOLLOWING FOUR STATEMENTS.
        INP=0.0D0
        DO 8 I=1,M
    8     INP=INP+DBLE(Q(I,K))**2
        PD=INP
c        CALL INPROD(Q(1,K),Q(1,K),PD,M)
        MK=M+K
        Q(MK,K)=PD
        IF(PD.GT.TOLER) GO TO 9
        JCODE=K
        N=K-1
        IF(NEW.GT.N) GO TO 16
        GO TO 10
    9   CONTINUE
C ORTHOGONALIZE COLUMN NMAXP1 W.R.T. COLUMNS NEW TO N.
   10 MNMAX1=M+NEW
      MN=M+N
      DO 11 J=MNMAX1,MN
   11   Q(J,NMAXP1)=0.0
      DO 14 J=NEW,N
C IF SUBROUTINE INPROD CANNOT BE USED, REPLACE THE SUBSEQUENT CALL BY
C THE FOLLOWING FOUR STATEMENTS.
        INP=0.0D0
        DO 12 I=1,M
   12     INP=INP+DBLE(Q(I,J))*DBLE(Q(I,NMAXP1))
        PN=INP
c        CALL INPROD(Q(1,J),Q(1,NMAXP1),PN,M)
        MJ=M+J
        TERM=PN/Q(MJ,J)
        MJM1=MJ-1
        DO 13 I=1,MJM1
   13     Q(I,NMAXP1)=Q(I,NMAXP1)-TERM*Q(I,J)
   14   Q(MJ,NMAXP1)=Q(MJ,NMAXP1)-TERM
      DO 15 J=1,N
        MJ=M+J
   15   X(J)=-Q(MJ,NMAXP1)
   16 IF(SSQ.NE.1.0) GO TO 18
C IF SUBROUTINE INPROD CANNOT BE USED, REPLACE THE SUBSEQUENT CALL BY
C THE FOLLOWING FOUR STATEMENTS.
      INP=0.D0
      DO 17 I=1,M
   17   INP=INP+DBLE(Q(I,NMAXP1))**2
      SSQ=INP
c      CALL INPROD(Q(1,NMAXP1),Q(1,NMAXP1),SSQ,M)
   18 IF(RES.NE.1.0) RETURN
      RES=0.0
      DO 19 I=1,M
        PD=ABS(Q(I,NMAXP1))
        IF(PD.LE.RES) GO TO 19
        RES=PD
   19   CONTINUE
      RETURN
      END
      SUBROUTINE INPROD(U,V,SPROD,M)
      DIMENSION U(M),V(M)
      DOUBLE PRECISION PROD,DBLE
      PROD=0.0D0
      DO 1 I=1,M
    1   PROD=PROD+DBLE(U(I))*DBLE(V(I))
      SPROD=PROD
      RETURN
      END
	subroutine astr(d1,h,pp,s,p,np,dh,dpp,ds,dp,dnp)
c	this subroutine calculates the following five ephermides
c	of the sun and moon
c	h = mean longitude of the sum
c	pp = mean longitude of the solar perigee
c	s = mean longitude of the moon
c	p = mean longitude of the lunar perigee
c	np = negative of the longitude of the mean ascending node
c	and their rates of change.
c	Units for the ephermides are cycles and for their derivatives
c	are cycles/365 days
c	The formulae for calculating this ephermides were taken from
c	pages 98 and 107 of the Explanatory Supplement to the
c	Astronomical Ephermeris and the American Ephermis and
c	Nautical Almanac (1961)
c
	implicit real*8(a-h,o-z)
	real*8 np
	d2=d1*1.d-4
	f=360.d0
	f2=f/365.d0
	h=279.696678d0+.9856473354d0*d1+.00002267d0*d2*d2
	pp=281.220833d0+.0000470684d0*d1+.0000339d0*d2*d2+
     1  .00000007d0*d2**3
	s=270.434164d0+13.1763965268d0*d1-.000085d0*d2*d2+
     1  .000000039d0*d2**3
	p=334.329556d0+.1114040803d0*d1-.0007739d0*d2*d2-
     1  .00000026d0*d2**3
	np=-259.183275d0+.0529539222d0*d1-.0001557d0*d2*d2-
     1  .00000005d0*d2**3
	h=h/f
	pp=pp/f
	s=s/f
	p=p/f
	np=np/f
	h=h-dint(h)
	pp=pp-dint(pp)
	s=s-dint(s)
	p=p-dint(p)
	np=np-dint(np)
	dh=.9856473354d0+2.d-8*.00002267d0*d1
	dpp=.0000470684d0+2.d-8*.0000339d0*d1
     1  +3.d-12*.00000007d0*d1**2
	ds=13.1763965268d0-2.d-8*.000085d0*d1+
     1  3.d-12*.000000039d0*d1**2
	dp=.1114040803d0-2.d-8*.0007739d0*d1-
     1  3.d-12*.00000026d0*d1**2
	dnp=+.0529539222d0-2.d-8*.0001557d0*d1-
     1  3.d-12*.00000005d0*d1**2
	dh=dh/f2
	dpp=dpp/f2
	ds=ds/f2
	dp=dp/f2
	dnp=dnp/f2
	return
	end
      SUBROUTINE GDAY(IDD,IMM,IYY,ICC,KD)
C!
C!  GIVEN DAY,MONTH,YEAR AND CENTURY(EACH 2 DIGITS), GDAY RETURNS
C!  THE DAY#, KD BASED ON THE GREGORIAN CALENDAR.
C!  THE GREGORIAN CALENDAR, CURRENTLY 'UNIVERSALLY' IN USE WAS
C!  INITIATED IN EUROPE IN THE SIXTEENTH CENTURY. NOTE THAT GDAY
C!  IS VALID ONLY FOR GREGORIAN CALENDAR DATES.
C
C   KD=1 CORRESPONDS TO JANUARY 1, 0000
C	
c 	Note that the Gregorian reform of the Julian calendar 
c	omitted 10 days in 1582 in order to restore the date
c	of the vernal equinox to March 21 (the day after
c	Oct 4, 1582 became Oct 15, 1582), and revised the leap 
c	year rule so that centurial years not divisible by 400
c	were not leap years.
c
C   THIS ROUTINE WAS WRITTEN BY EUGENE NEUFELD, AT IOS, IN JUNE 1990.
C
      INTEGER NDP(13)
      INTEGER NDM(12)
      DATA NDP/0,31,59,90,120,151,181,212,243,273,304,334,365/
      DATA NDM/31,28,31,30,31,30,31,31,30,31,30,31/
C!
      LP = 6
C!  TEST FOR INVALID INPUT:
      IF(ICC.LT.0)THEN
	 WRITE(LP,5000)ICC
	 STOP
      ENDIF
      IF(IYY.LT.0.OR.IYY.GT.99)THEN
	 WRITE(LP,5010)IYY
	 STOP
      ENDIF
      IF(IMM.LE.0.OR.IMM.GT.12)THEN
	 WRITE(LP,5020)IMM
	 STOP
      ENDIF
      IF(IDD.LE.0)THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
      IF(IMM.NE.2.AND.IDD.GT.NDM(IMM))THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
      IF(IMM.EQ.2.AND.IDD.GT.29)THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
      IF(IMM.EQ.2.AND.IDD.GT.28.AND.((IYY/4)*4-IYY.NE.0.OR.(IYY.EQ.0.AND
     .    .(ICC/4)*4-ICC.NE.0)))THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
5000  FORMAT(' INPUT ERROR. ICC = ',I7)
5010  FORMAT(' INPUT ERROR. IYY = ',I7)
5020  FORMAT(' INPUT ERROR. IMM = ',I7)
5030  FORMAT(' INPUT ERROR. IDD = ',I7)
C!
C!  CALCULATE DAY# OF LAST DAY OF LAST CENTURY:
      KD = ICC*36524 + (ICC+3)/4
C!
C!  CALCULATE DAY# OF LAST DAY OF LAST YEAR:
      KD = KD + IYY*365 + (IYY+3)/4
C!
C!  ADJUST FOR CENTURY RULE:
C!  (VIZ. NO LEAP-YEARS ON CENTURYS EXCEPT WHEN THE 2-DIGIT
C!  CENTURY IS DIVISIBLE BY 4.)
      IF(IYY.GT.0.AND.(ICC-(ICC/4)*4).NE.0) KD=KD-1
C!  KD NOW TRULY REPRESENTS THE DAY# OF THE LAST DAY OF LAST YEAR.
C!
C!  CALCULATE DAY# OF LAST DAY OF LAST MONTH:
      KD = KD + NDP(IMM)
C!
C!  ADJUST FOR LEAP YEARS:
      IF(IMM.GT.2.AND.((IYY/4)*4-IYY).EQ.0.AND.((IYY.NE.0).OR.
     .   (((ICC/4)*4-ICC).EQ.0)))   KD=KD+1
C!  KD NOW TRULY REPRESENTS THE DAY# OF THE LAST DAY OF THE LAST
C!  MONTH.
C!
C!  CALCULATE THE CURRENT DAY#:
      KD = KD + IDD
      RETURN
C!
C!
      ENTRY DMY(IDD,IMM,IYY,ICC,KD)
C!
C!  GIVEN THE (GREGORIAN) DAY#, KD, AS CALCULATED ABOVE IN THIS ROUTINE,
C!  ENTRY DMY RETURNS THE (GREGORIAN) DAY, MONTH, YEAR AND CENTURY.
C!
C!  TEST FOR VALID INPUT:
      IF(KD.LE.0) WRITE(LP,5040)KD
5040  FORMAT(' KD = ',I7,'  INVALID INPUT. DMY STOP.')
C!
C!  SAVE KD
      KKD=KD
C!  CALCULATE ICC AND SUBTRACT THE NUMBER OF DAYS REPRESENTED BY ICC
C!  FROM KKD
C!  JFH IS THE NUMBER OF 400 YEAR INTERVALS UP TO KKD
C!  JCC IS THE NUMBER OF ADDITIONAL CENTURIES UP TO KKD
      JFH = KKD/146097
      KKD = KKD - JFH*146097
      IF(KKD.LT.36525)THEN
	 JCC = 0
      ELSE
	 KKD = KKD - 36525
	 JCC = 1 + KKD/36524
	 KKD = KKD - (JCC-1)*36524
      END IF
      ICC = 4*JFH + JCC
      IF(KKD.EQ.0)THEN
	 ICC = ICC-1
	 IYY = 99
	 IMM = 12
	 IDD = 31
	 RETURN
      ENDIF
C!
C!  CALCULATE IYY. JFY IS THE NUMBER OF FOUR YEAR INTERVALS IN THE
C!  CURRENT CENTURY. THE FIRST FOUR YEAR INTERVAL IS SHORT (1460 DAYS
C!  RATHER THAN 1461)IF THE CURRENT CENTURY IS NOT DIVISIBLE BY 4, AND
C!  IN THIS CASE JCC.NE.0 AS CALCULATED ABOVE.
C!
C!  CALCULATE JFY:
      JFY = 0
      IF(JCC.EQ.0)GOTO 10
      IF(KKD.LT.1460)GOTO 10
      JFY = 1
      KKD = KKD - 1460
10    KK = KKD/1461
      JFY = JFY + KK
      KKD = KKD - KK*1461
C!
C!  CALCULATE JYY, THE REMAINING YEARS OF THE CURRENT CENTURY UP TO THE
C!  CURRENT DAY:
      JYY = 0
C!  THE NEXT YEAR IS NOT A LEAP YEAR IF JFY=0 AND JCC.NE.0.
      IF(JFY.EQ.0.AND.JCC.NE.0)GOTO 20
      IF(KKD.LT.366)GOTO 30
      JYY = 1
      KKD = KKD - 366
20    JYYY = KKD/365
      JYY = JYY + JYYY
      KKD = KKD - JYYY*365
30    IYY = 4*JFY + JYY
      IF(KKD.EQ.0) THEN
	 IYY=IYY-1
	 IMM=12
	 IDD=31
	 RETURN
      END IF
C!
C!  SET L=1 IF WE HAVE A LEAP YEAR.
      L=0
      IF(IYY-(IYY/4)*4.NE.0)GOTO 40
      IF(IYY.EQ.0.AND.(ICC-(ICC/4)*4).NE.0)GOTO 40
      L=1
C!
C!  CALCULATE IMM AND IDD
40    IF(KKD.GT.31) GOTO 50
      IMM=1
      IDD=KKD
      RETURN
C!
50    IF(KKD.GT.59)GOTO 60
      IMM = 2
      IDD = KKD-31
      RETURN
C!
60    IF(KKD.GT.60)GOTO 70
      IF(L.EQ.0)GOTO 70
      IMM = 2
      IDD = 29
      RETURN
C!
70    IF(L.EQ.1) KKD=KKD-1
      DO 80 I=4,13
	 IF(KKD.GT.NDP(I))GOTO 80
	 IMM = I-1
	 IDD = KKD - NDP(I-1)
	 RETURN
C!
80    CONTINUE
90    WRITE(LP,5050)
5050  FORMAT(' ERROR IN DMY.')
      STOP
      END
