	program tide10
c	
c	This program version was modified in October 1992 to
c	incorporate a new calendar and a higher order approximation
c	for the astronomical arguments, their
c	derivatives, and the constituent frequencies.
c						M. Foreman
c
C TIDAL CURRENTS PREDICTION PROGRAM   FOR G GODIN   OCEANOGRAPHY  DEC/72
C
C INPUT
C =====
C  1) THE STANDARD CONSTITUENT DATA PACKAGE IS READ BY ROUTINE ASTRO.
C     SEE THIS SUBROUTINE FOR A DESCRIPTION OF THE INPUT REQUIRED. IN
C     ORDER TO INSURE A CONSISTENT INTERPRETATION OF THE ELLIPSE
C     PARAMETERS AND PHASES, THE DATA PACKAGE SHOULD BE IDENTICAL TO
C     THE ONE USED BY THE TIDAL CURRENTS ANALYSIS PROGRAM.
C
C  2) ONE RECORD WITH THE TIDAL STATION INFORMATION ISTN,(NA(J),J=1,4),
C     ITZONE,LAD,LAM,LOD,LOM IN THE FORMAT
C     (5X,I4,1X,3A6,A4,A3,1X,I2,1X,I2,2X,I3,1X,I2), WHERE
C          ISTN    = STATION NUMBER
C          NA      = STATION NAME
C          ITZONE  = TIME ZONE
C          LAD,LAM = LATITUDE IN DEGREES AND MINUTES OF THE STATION
C          LOD,LOM = LONGITUDE IN DEGREES AND MINUTES OF THE STATION.
C     FOLLOWED BY ONE RECORD FOR EACH CONSTITUENT TO BE INCLUDED IN THE
C     PREDICTION, WITH THE CONSTITUENT NAME (KON), THE ELLIPSE MAJOR AND
C     MINOR SEMI-AXIS LENGTHS (EMAJ AND EMIN) AND ANGLE OF INCLINATION
C     (EINC), AND THE GREENWICH PHASE LAG (G), IN THE FORMAT
C     (4X,A5,13X,2F8.3,2F7.1).  THE UNITS OF THE PREDICTED CURRENTS WILL
C     BE THE SAME AS THOSE OF THE MAJOR AND MINOR SEMI-AXIS LENGTHS,
C     THE ANGLE OF INCLINATION SHOULD BE MEASURED IN DEGREES COUNTER-
C     CLOCKWISE FROM EAST, AND THE PHASE LAG SHOULD BE MEASURED IN
C     DEGREES RELATIVE TO THE TIME ZONE FOR WHICH THE PREDICTION IS
C     DESIRED.
C     THE LAST CONSTITUENT RECORD SHOULD BE FOLLOWED BY A BLANK RECORD.
C
C  3) ONE RECORD CONTAINING THE FOLLOWING INFORMATION ON THE PERIOD AND
C     TYPE OF PREDICTION DESIRED.  THE FORMAT IS
C     (3I3,1X,3I3,1X,A4,2X,A4,F9.5,2X,2I3) AND THE INPUT VARIABLES ARE
C        IDY0,IMO0,IYR0 = DAY, MONTH, AND YEAR OF THE BEGINNING OF THE
C                         PREDICTION.
C        IDYE,IMOE,IYRE = DAY, MONTH, AND YEAR OF THE END OF THE
C                         PREDICTION.
C        ITYPE          = 'EQUI' IF EQUALLY SPACED PREDICTIONS ARE
C                         DESIRED,
C                         'EXTR' IF DAILY HIGH LOWS ARE DESIRED.
C        IOUT           = 'COMP' IF ITYPE='EQUI' AND NORTH/SOUTH AND
C                              EAST/WEST COMPONENT PREDICTIONS ARE
C                              DESIRED,
C                         OTHERWISE IF ITYPE='EQUI' AND VECTOR MAGNI-
C                              TUDE AND DIRECTION PREDICTIONS ARE
C                              DESIRED, OR IF ITYPE='EXTR'.
C        DT             = TIME SPACING OF THE PREDICTED VALUES IF
C                         ITYPE='EQUI',
C                         TIME STEP INCREMENT USED TO INITIALLY BRACKET
C                         A HIGH OR LOW IF ITYPE='EXTR'.
C        ICE0,ICEE      = CENTURIES FOR THE BEGINNING AND END OF THE
C                         PREDICTION
C
C     RECOMMENDED VALUES FOR DT WHEN ITYPE='EXTR' ARE GIVEN IN THE USER
C     MANUAL. EQUALLY SPACED PREDICTIONS BEGIN AT DT HOURS ON THE FIRST
C     DAY AND END AT 2400 HOURS OF THE LAST DAY.
C
C     ZERO VALUES FOR ICE0 OR ICEE ARE RESET TO 19.
C
C     TYPE 3 DATA MAY BE REPEATED ANY NUMBER OF TIMES . A BLANK RECORD
C     CAUSES THE PROGRAM TO GO BACK TO READ MORE TYPE 2 DATA . TWO
C     BLANKS TERMINATE THE JOB.
C
C OUTPUT
C ======
C     EQUI-SPACED PREDICTIONS ARE PRINTED 8 VALUES PER LINE , AND
C     MAX-MIN PREDICTIONS ARE SPECIFIED 4 PER RECORD.
C     THE EQUALLY SPACED PREDICTIONS ARE WRITTEN ON FILE REFERENCE
C     NUMBERS 10 AND 11 AS WELL AS THE LINE PRINTER.  IF VARIABLE IOUT
C     IS 'COMP', THEN NORTH/ SOUTH COMPONENTS ARE ON DEVICE 10 AND
C     EAST/WEST ON 11. OTHER VALUES OF IOUT WILL RESULT IN VECTOR
C     MAGNITUDES ON 10 AND THEIR DIRECTIONS ON 11.
C     MAX-MIN PREDICTIONS ARE WRITTEN ON FILE REFERENCE NUMBER 12 IN
C     ADDITION TO THE LINE PRINTER.
C     A LIST OF THE CONSTITUENTS USED IS PRINTED AFTER EACH SET OF
C     PREDICTIONS.
C
C METHOD OF COMPUTING MAX-MIN AND EQUI-SPACED PREDICTIONS
C =======================================================
C     THE FIRST DERIVATIVE OF THE (MAGNITUDE)**2 OF THE TIDAL CURRENT
C     VECTOR IS CALCULATED AS THE SUM OF A NUMBER OF TRIGONOMETRIC
C     TERMS DUE TO THE CONSTITUENTS. THE DERIVATIVE IS
C     FOUND AT SUCCESIVE TIMES IN STEPS OF DT UNTIL A CHANGE IN
C     SIGN IS NOTED. THE LAST TIME INTERVAL IS THEN BISECTED REPEATEDLY
C     UNTIL THE ROOT IS BRACKETED TO WITHIN 6 MINUTES AND THEN LINEAR
C     INTERPOLATION IS USED TO GET THE ROOT .  TRIGONMETRIC ITERATION
C     AND INTERPOLATION FORMULAE ARE USED TO UPDATE EACH CONSTITUENT
C     CONTRIBUTION IN EITHER THE STEPPING OR BISECTION PROCESSES.
C     FINALLY THE TIDAL CURRENT MAGNITUDE AT AN EXTREMUM IS FOUND USING
C     TABLE LOOK-UP VALUES FOR THE SINES AND COSINES NEEDED.  FOR
C     EQUALLY SPACED PREDICTIONS THE TRIGONOMETRIC ITERATION FORMULAE
C     ARE APPLIED DIRECTLY.
C     NODAL CORRECTIONS AND THESE FORMULAE ARE RENEWED AT THE START OF
C     EACH MONTH.
C
C ROUTINES NEEDED
C ===============
C     SLOPE ... CALCULATES CURRENT VECTOR REAL AND IMAGINARY PARTS ,
C               AND THE DERIVATIVE OF THE MAGNITUDE SQUARED.
C     ASTRO ... GETS FREQUENCIES,ASTRO ARGS AND NODAL CORRECTIONS
C     PUT ... BUFFERS OUT HI-LO PREDICTIONS
C     CPUT ... BUFFERS OUT EQUI-SPACE PREDICTIONS
C     GDAY ... A DAY CALENDAR PROGRAM
C
C
C
C DESCRIPTION OF IMPORTANT VARIABLES OR ARRAYS
C ============================================
C MTAB                  IS THE NUMBER OF CONSTITUENTS INCLUDED IN THE
C                       STANDARD CONSTITUENT DATA PACKAGE. AT PRESENT
C                       THIS IS 146.
C M                     IS THE NUMBER OF CONSTITUENTS TO BE INCLUDED IN
C                       THE PREDICTION.
C KONTAB(I),SIGTAB(I)   ARE ARRAYS CONTAINING THE CONSTITUENT NAMES AND
C                       FREQUENCIES AS THEY ARE READ IN AND CALCULATED
C                       FROM THE STANDARD CONSTITUENT DATA PACKAGE
C V(I),U(I),F(I)        ARE ARRAYS CONTAINING THE ASTRONOMICAL ARGUMENT,
C                       SATELLITE(NODAL MODULATION) PHASE CORRECTION AND
C                       SATELLITE AMPLITUDE CORRECTION RESPECTIVELY, FOR
C                       CONSTITUENT KONTAB(I).
C KON(I),SIG(I)         ARE ARRAYS CONTAINING THE NAMES AND FREQUENCIES
C                       OF CONSTITUENTS TO BE INCLUDED IN THE
C                       PREDICTION.
C EMAJ(I),EMIN(I),      ARE ARRAYS CONTAINING THE CURRENT ELLIPSE MAJOR
C EINC(I),G(I)          AND MINOR SEMI-AXIS LENGTHS, ANGLE OF INCLINA-
C                       TION, AND GREENWICH PHASE LAG FOR CONSTITUENT
C                       KON(I).
C INDX(I)               IS AN ARRAY WHOSE VALUE IS THE LOCATION OF
C                       CONSTITUENT KON(I) IN THE LIST KONTAB(K).
C C(I),S(I),BTWOC(I,K)  ARE ARRAYS FOR STORING THE VALUES
C                       COS(TWOPI*SIG(I)*DT), SIN(TWOPI*SIG(I)*DT), AND
C                       2*COS(TWOPI*SIG(I)*DT/2**K) RESPECTIVELY.
C CMAJ(I),CMIN(I),      ARE ARRAYS FOR RESPECTIVELY STORING THE MAJOR
C SMAJ(I),SMIN(I)       AND MINOR SEMI-AXIS LENGTHS TIMES COS AND SIN OF
C                       THE ELLIPSE ANGLE OF INCLINATION FOR CONSTITUENT
C                       KON(I).
C COSE(I),SINE(I),      ARE ARRAYS FOR STORING SIN AND COS VALUES OF
C CHA(I),CHB(I),CHM(I), NODALLY CORRECTED ARGUMENTS FOR CONSTITUENT
C SHA(I),SHB(I),SHM(I)  KON(I) USED IN THE TRIGONOMETRIC ITERATION
C                       OR BISECTION SEARCH METHOD.
C ANG0(I)               IS AN ARRAY FOR STORING THE NODALLY CORRECTED
C                       CONSTITUENT ARGUMENT AT THE BEGINNING OF THE
C                       ITERATION.
C COSINE(I)             IS AN ARRAY CONTAINING 2501 COSINE VALUES IN
C                       THE RANGE OF ZERO TO FIVE HALVES PI.
C KONTAB SHOULD HAVE MINIMUM DIMENSION MTAB+1. SIGTAB,V,U, AND F SHOULD
C HAVE MINIMUM DIMENSION MTAB. KON,EMAJ,EMIN,EINC, AND G SHOULD HAVE
C MIMIMUM DIMENSION M+1. AND SIG,INDX,ANG0,CMAJ,CMIN,SMAJ,SMIN,
C CHA,CHB,CHM,SHA,SHB,SHM,C,S,COSE, AND SINE SHOULD
C HAVE MINIMUM DIMENSION M.  BTWOC SHOULD HAVE A MINIMUM DIMENSION OF M
C BY THE MAXIMUM NUMBER OF ITERATIONS REQUIRED TO LOCATE A HIGH OR LOW
C (PRESENTLY THIS IS SET TO 10).
C
C
      CHARACTER*5 KONTAB,KBLANK,KONK,KON
      CHARACTER*6 NA(4)
      CHARACTER*4 KEQUI,KCOMP,ITYPE,IOUT
      REAL*8 HOURM,HOUR0,TM,T,TTOT
      COMMON F(150),CMAJ(150),CMIN(150),SMAJ(150),SMIN(150),SIG(150),
     1INDX(150),M
      DIMENSION CHA(150),CHB(150),CHM(150),SHA(150),SHB(150),SHM(150),CO
     1SE(150),SINE(150)
      DIMENSION KONTAB(150),SIGTAB(150),V(150),U(150)
      DIMENSION KON(150),EMAJ(150),EMIN(150),EINC(150),G(150)
      DIMENSION C(150),S(150),BTWOC(150,10),COSINE(2501),ANG0(150)
      DATA KBLANK/'     '/,KEQUI/'EQUI'/,KCOMP/'COMP'/
c	open(unit=8,file='tide11_swiftsure.dat',status='old',form='formatted')
	open(unit=8,file='tide11.dat',status='old',form='formatted')
	open(unit=10,file='file10.dat',status='unknown',form='formatted')
	open(unit=11,file='file11.dat',status='unknown',form='formatted')
	open(unit=12,file='file12.dat',status='unknown',form='formatted')
c	open(unit=8,status='old',form='formatted')
c	open(unit=10,status='new',form='formatted')
c	open(unit=11,status='new',form='formatted')
c	open(unit=12,status='new',form='formatted')
C
      PI=3.14159265358979
      TWOPI=2.*PI
      RAD=TWOPI/360.
      KR=8
      LP=6
      DO 20 I=1,2501
      ANGLE=TWOPI*(I-1.0)/2000.
20    COSINE(I)=COS(ANGLE)
C
C READ ASTRO ARG , DOODSON AND NODAL CORRECTION DATA .
C ======================================================================
C
      CALL OPNAST(KONTAB,SIGTAB,V,U,F,MTAB,HOURM,XLAT)
      IF(MTAB.EQ.0) GO TO 2100
C
C READ STATION NUMBER, NAME, AND LOCATION.
C ======================================================================
C
      DO 1900 IBB=1,100
      READ(KR,50) ISTN,(NA(K),K=1,4),ITZONE,LAD,LAM,LOD,LOM
50    FORMAT(5X,I4,1X,3A6,A4,A3,I3,1X,I2,2X,I3,1X,I2)
      IF(ISTN.EQ.0) GO TO 2100
C
C UNLESS SPECIFIED OTHERWISE, A STATION LATITUDE OF 50 DEGREES IS
C ASSUMED FOR THE PURPOSE OF CALCULATING SATELLITE TO MAIN CONSTITUENT
C AMPLITUDE RATIOS.
C=======================================================================
C
      XLAT=LAD+ISIGN(LAM,LAD)/60.
      IF(ABS(XLAT).LT.5.) XLAT=SIGN(5.,XLAT)
C
C READ THE NAME, AMPLITUDE, AND GREENWICH PHASE LAG OF THE CONSTITUENTS
C TO BE USED IN THE PREDICTION.  THE CORRESPONDING FREQUENCIES ARE
C FOUND BY SCANNING THE LIST SIGTAB.  THE SEARCH METHOD WILL BE MOST
C EFFICIENT IF ON INPUT, THESE CONSTITUENTS ARE LISTED IN ORDER OF
C INCREASING FREQUENCY.
C=======================================================================
C
      KT1=1
      DO 110 K=1,1000
      READ(KR,70) KON(K),EMAJ(K),EMIN(K),EINC(K),G(K)
70    FORMAT(4X,A5,13X,2F8.3,2F7.1)
      IF(KON(K).EQ.KBLANK) GO TO 120
      G(K)=G(K)/360.
      KONK=KON(K)
      KTE=KT1-1+MTAB
      DO 80 KKT=KT1,KTE
      KT=KKT
      IF(KT.GT.MTAB) KT=KT-MTAB
      IF(KONTAB(KT).EQ.KONK) GO TO 100
80    CONTINUE
      WRITE(LP,90) KONK
90    FORMAT(/' ROUTINE ASTRO CANNOT FIND CONSTITUENT ',A5 /)
      STOP
100   INDX(K)=KT
      SIG(K)=SIGTAB(KT)
      KT1=KT+1
110   CONTINUE
120   M=K-1
C
C READ START AND END DATES , TYPE OF PREDICTIONS AND TIME INCREMENT .
C ======================================================================
C
      DO 1800 ICC=1,100
      READ(KR,130) IDY0,IMO0,IYR0,IDYE,IMOE,IYRE,ITYPE,IOUT,DT
     1,ICE0,ICEE
	IF(ICE0.EQ.0) ICE0=19
	IF(ICEE.EQ.0) ICEE=19
130   FORMAT(3I3,1X,3I3,1X,A4,2X,A4,F9.5,2X,2I3)
      IF(IDY0.EQ.0) GO TO 1900
      DT=AMIN1(6.0,DT)
C
      IMOP=0
      IMO=IMO0
      IYR=IYR0
      ICE=ICE0
      T=0.D0
      CALL GDAY(IDY0,IMO0,IYR0,ICE0,KD0)
      CALL GDAY(IDYE,IMOE,IYRE,ICEE,KDE)
      HOUR0=KD0*24.D0
	hourm=kde*24d0
	hourm=0.5d0*(hour0+hourm)
c
c	re-evaluate the frequencies for the middle of the
c	prediction period
      CALL ASTRO(KONTAB,SIGTAB,V,U,F,MTAB,HOURM,XLAT)
	do 666 k=1,m
666	sig(k)=sigtab(indx(k))
C
C SET UP COEFFICIENTS FOR TRIGONOMETRIC ITERATION AND INITIALIZE .
C ======================================================================
C
135   CONTINUE
      LMAX=0.99+ALOG(DT/0.1)*1.442695
      DO 150 K=1,M
      DRAD=TWOPI*SIG(K)*DT
      C(K)=COS(DRAD)
      S(K)=SIN(DRAD)
      ARG=EINC(K)*RAD
      CMAJ(K)=EMAJ(K)*COS(ARG)
      SMAJ(K)=EMAJ(K)*SIN(ARG)
      CMIN(K)=EMIN(K)*COS(ARG)
      SMIN(K)=EMIN(K)*SIN(ARG)
      IF(ITYPE.EQ.KEQUI)  GO TO 150
      DO 140 L=1,LMAX
      DRAD=DRAD/2.0
      TPY=2.0*COS(DRAD)
      BTWOC(K,L)=TPY
      IF(ABS(TPY).GT. 0.01) GO TO 140
      DT=DT*.99
      GO TO 135
140   CONTINUE
150   CONTINUE
C
C THIS SECTION FOR HI-LO PREDICTIONS.
C THE NODAL CORRECTION AND ITERATION FORMULA VALUES ARE RESET AT THE
C START OF EACH MONTH.
C ======================================================================
C
      IF(ITYPE.EQ.KEQUI)  GO TO 800
      CALL OPNPUT(ID,ID,ID,ID,ID,ID,D,D)
      WRITE(LP,170) ISTN,(NA(K),K=1,4)
170   FORMAT('1',7X,'MAX MIN PREDICTIONS FOR STATION',I5,' , ',3A6,A4)
      WRITE(LP,171) LAD,LAM,LOD,LOM,ITZONE,DT
171   FORMAT(' ', 2X,'LATITUDE=',2I3,3X,'LONGITUDE= ',2I3,3X,'TIME ZONE=
     1 ',A3,3X,'DT=',F7.4,' HOURS',/)
      DO 700 IDD=1,10000
      IF(IMOP.EQ.IMO) GO TO 260
      CALL GDAY(16,IMO,IYR,ICE,KDM)
      HOURM=KDM*24.D0
      CALL ASTRO(KONTAB,SIGTAB,V,U,F,MTAB,HOURM,XLAT)
      TM=HOURM-HOUR0
      DO 240 K=1,M
      INDK=INDX(K)
      ANG=V(INDK)-(TM-T)*SIG(K)+U(INDK)-G(K)
      TPY=ANG-T*SIG(K)
      ANG0(K)=TPY-AINT(TPY)+1.0
      ANG=TWOPI*(ANG-AINT(ANG))
      COSE(K)=COS(ANG)
  240 SINE(K)=SIN(ANG)
      CALL SLOPE(COSE,SINE,X,Y,DER)
260   CONTINUE
C
C SEARCH FOR SIGN CHANGE IN THE DERIVATIVE OF THE CURRENT
C MAGNITUDE SQUARED.  BRACKET THE VALUE TO WITHIN 6 MINUTES
C BY BISECTION, AND FINALLY USE LINEAR INTERPOLATION TO GET
C THE MAX OR MIN VALUE AND ITS TIME.
C ======================================================================
C
      DO 460 I=1,100
      T=T+DT
      DO 450 L=1,M
      CHA(L)=COSE(L)
      SHA(L)=SINE(L)
      TEMP=C(L)*COSE(L)-S(L)*SINE(L)
      SINE(L)=S(L)*COSE(L)+C(L)*SINE(L)
  450 COSE(L)=TEMP
      SDER=DER
      CALL SLOPE(COSE,SINE,X,Y,DER)
      IF(ABS(DER).LT.1.E-16) DER=1.E-16
      IF(DER*SDER.LT.0.) GO TO 465
460   CONTINUE
465   CONTINUE
C
      DO 470 K=1,M
      CHB(K)=COSE(K)
  470 SHB(K)=SINE(K)
      TA=T-DT
      TB=T
      DERA=SDER
      DERB=DER
      DO 500 L=1,LMAX
      TM=(TA+TB)*0.5
      DO 480 K=1,M
      CHM(K)=(CHA(K)+CHB(K))/BTWOC(K,L)
  480 SHM(K)=(SHA(K)+SHB(K))/BTWOC(K,L)
      CALL SLOPE(CHM,SHM,X,Y,DERM)
      IF(ABS(DERM) .LT. 1.E-16) DERM=1.E-16
      IF(DERM*DERA.LE. 0.0) GO TO 490
      TA=TM
      DERA=DERM
      DO 485 K=1,M
      SHA(K)=SHM(K)
485   CHA(K)=CHM(K)
      GO TO 497
490   TB=TM
      DERB=DERM
      DO 495 K=1,M
      SHB(K)=SHM(K)
495   CHB(K)=CHM(K)
497   CONTINUE
500   CONTINUE
      TR=TA+(TB-TA)*DERA/(DERA-DERB)
C
C CALCULATE AND OUTPUT THE HGT AND TIME OF HIGH OR LOW .
C ======================================================================
C
      TR=TR+.5/60.
      IDR=INT(TR/24.)
      KDR=KD0+IDR
      HR=TR-IDR*24.
      IHR=HR
      IMIN=(HR-IHR)*60.
      IMOP=IMO
      CALL DMY(IDY,IMO,IYR,ICE,KDR)
      X=0.
      Y=0.
      DO 520 K=1,M
      INDK=INDX(K)
      ANG=ANG0(K)+TR*SIG(K)
      ANG=ANG-AINT(ANG)
      IND=INT(ANG*2000.+1.5)
      IND2=IND-500
      IF(IND2.Le.0) IND2=IND2+2000
c	write(6,521) ind,indk,ind2,k
c521	format(' ind,indk,ind2,k=',4i5)
      X=X+F(INDK)*(CMAJ(K)*COSINE(IND)-SMIN(K)*COSINE(IND2))
  520 Y=Y+F(INDK)*(SMAJ(K)*COSINE(IND)+CMIN(K)*COSINE(IND2))
      X1=X
      Y1=Y
      R=SQRT(X1*X1+Y1*Y1)
      DIR=ATAN2(Y1,X1)/RAD
      IF(DIR.LT.0.) DIR=DIR+360.
      CALL PUT(ISTN,IDY,IMO,IYR,IHR,IMIN,R,DIR)
      IF(KDR.GT.KDE) GO TO 710
700   CONTINUE
710   CALL CLSPUT(ID,ID,ID,ID,ID,ID,D,D)
      GO TO 1000
C
C HERE CALCULATIONS AND OUTPUT OF EQUI-SPACED PREDICTIONS ARE
C PERFORMED. THEY BEGIN AT DT HOURS INTO THE FIRST DAY AND ARE
C SPECIFIED EVERY DT HOURS THEREAFTER UP TO AND INCLUDING THE LAST
C DAY.  THE ASTRONOMICAL ARGUMENT V, AND NODAL MODULATION FACTORS,
C F AND U, AND RECALCULATED AT THE 16-TH OF EVERY MONTH ARE ASSUMED
C TO BE CONSTANT THROUGHOUT THE MONTH.
C IF VARIABLE IOUT = 'COMP' THEN THE PREDICTIONS ARE GIVEN IN THE FORM
C OF NORTH/SOUTH AND EAST/WEST COMPONENTS. OTHERWISE A VECTOR MAGNITUDE
C AND DIRECTION ARE SPECIFIED.
C=======================================================================
C
800   WRITE(LP,805) ISTN,(NA(K),K=1,4)
805   FORMAT('1', 8X,'EQUALLY SPACED PREDICTIONS FOR STATION',I5,' , ',3
     1A6,A4)
      WRITE(LP,171) LAD,LAM,LOD,LOM,ITZONE,DT
      IF(IOUT.EQ.KCOMP) GO TO 806
      WRITE(LP,807)
  807 FORMAT(' ',6X,'PREDICTIONS ARE IN VECTOR FORM WITH ONE RECORD OF M
     1AGNITUDES'/16X,'FOLLOWED BY THEIR CORRESPONDING DIRECTIONS')
      GO TO 808
  806 WRITE(LP,809)
  809 FORMAT(' ',2X,'PREDICTIONS ARE IN COMPONENT FORM WITH ONE RECORD O
     1F NORTH/SOUTH VALUES'/14X,'FOLLOWED BY THEIR CORRESPONDING EAST/WE
     2ST VALUES')
  808 CONTINUE
      CALL OPNCP(ISTN,D,ID,ID,ID,D,D,D)
      DO 900 IDD=1,30000
      IF(IMO.EQ.IMOP) GO TO 830
      CALL GDAY(16,IMO,IYR,ICE,KDM)
      HOURM=KDM*24.D0
      CALL ASTRO(KONTAB,SIGTAB,V,U,F,MTAB,HOURM,XLAT)
      TM=HOURM-HOUR0
      DO 810 K=1,M
      INDK=INDX(K)
      ANG=V(INDK)-(TM-T)*SIG(K)+U(INDK)-G(K)
      ANG=TWOPI*(ANG-AINT(ANG))
      COSE(K)=COS(ANG)
  810 SINE(K)=SIN(ANG)
830   T=T+DT
      X=0.
      Y=0.
      DO 840 K=1,M
      INDK=INDX(K)
      TEMP=C(K)*COSE(K)-S(K)*SINE(K)
      SINE(K)=S(K)*COSE(K)+C(K)*SINE(K)
      COSE(K)=TEMP
      X=X+F(INDK)*(CMAJ(K)*COSE(K)-SMIN(K)*SINE(K))
  840 Y=Y+F(INDK)*(SMAJ(K)*COSE(K)+CMIN(K)*SINE(K))
      X1=X
      Y1=Y
      TTOT=HOUR0+T
      KD=TTOT/24.0
      HR=TTOT-KD*24.0
      IMOP=IMO
      CALL DMY(IDY,IMO,IYR,ICE,KD)
      IF(IOUT.EQ.KCOMP) GO TO 850
      VMAG=SQRT(X1*X1+Y1*Y1)
      VDIR=ATAN2(Y1,X1)/RAD
      IF(VDIR.LT.0.) VDIR=VDIR+360.
      X1=VDIR
      Y1=VMAG
  850 CONTINUE
      CALL CPUT(ISTN,HR,IDY,IMO,IYR,X1,Y1,DT)
      IF(KD.GT.KDE) GO TO 910
900   CONTINUE
910   CALL CLSCP(ID,D,ID,ID,ID,D,D,D)
C
C WRITE OUT THE LIST OF CONSTITUENTS USED.
C ======================================================================
C
1000  CONTINUE
      DO 1010 K=1,M
1010  G(K)=G(K)*360.
      WRITE(LP,1020)
 1020 FORMAT(///,' NAME, MAJOR &amp; MINOR SEMI-AXIS LENGTHS, ELLIPSE ANGLE
     1OF INCLINATION, AND GREENWICH PHASE OF CONSTITUENTS'/30X,'USED TO
     2GET THE ABOVE PREDICTIONS'/)
      WRITE(LP,1030) (K,KON(K),EMAJ(K),EMIN(K),EINC(K),G(K),K=1,M)
 1030 FORMAT(3(I5,1X,A4,2F8.3,2F7.1,3X))
      DO 1040 K=1,M
1040  G(K)=G(K)/360.
C
C
1800  CONTINUE
1900  CONTINUE
2100  CONTINUE
      STOP
      END
      SUBROUTINE SLOPE(COSE,SINE,X,Y,DER)
C
C THIS SUBROUTINE CALCULATES THE REAL AND IMAGINARY PARTS OF THE COMPLEX
C VALUED CURRENT VECTOR AT THE DESIRED TIME AS WELL AS THE
C DERIVATIVE OF THE MAGNITUDE SQUARED.
C ======================================================================
C
      DIMENSION COSE(150),SINE(150)
      COMMON F(150),CMAJ(150),CMIN(150),SMAJ(150),SMIN(150),SIG(150),
     1INDX(150),M
      TWOPI=2.*3.1415926535898
      X=0.0
      Y=0.0
      PDX=0.0
      PDY=0.0
C
C PHASE ANGLES ARE CALCULATED BY THE IDENTITIES FOR COS &amp; SIN (THETA +
C DELTA)
C ======================================================================
C
      DO 10 L=1,M
      INDL=INDX(L)
      X=X+F(INDL)*(CMAJ(L)*COSE(L)-SMIN(L)*SINE(L))
      Y=Y+F(INDL)*(SMAJ(L)*COSE(L)+CMIN(L)*SINE(L))
      FAC=F(INDL)*TWOPI*SIG(L)
      PDX=PDX-FAC*(CMAJ(L)*SINE(L)+SMIN(L)*COSE(L))
   10 PDY=PDY+FAC*(-SMAJ(L)*SINE(L)+CMIN(L)*COSE(L))
      DER=X*PDX+Y*PDY
      RETURN
      END
      SUBROUTINE ASTRO(KON,FREQ,V,U,F,NTOTAL,HOUR,XLAT)
C     THIS ROUTINE CALCULATES THE FREQUENCY FREQ IN CPH , THE ASTRO ARG
C     V IN CYCLES , THE NODAL CORRECTION PHASE U AND AMP F FOR THE
C     CONSTITUENTS KON(1 ... NTOTAL).
C     THE INPUT PARAMETER HOUR GIVES THE TIME AT WHICH THE RESULTS ARE
C     TO BE CALCULATED. HOUR IS OBTAINED
C     USING ROUTINE GDAY.
C
C DATA INPUT
C ==========
C     THIS ROUTINE MUST BE INITIALIZED BY A CALL TO OPNAST WHICH READS
C     THE FOLLOWING FROM LOGICAL UNIT KR ...
C
C  1) TWO RECORDS CONTAINING ASTRONOMICAL ARGUMENTS AND THEIR RATES OF
C     CHANGE, S0,H0,P0,ENP0,PP0,DS,DH,DP,DNP,DPP, IN THE FORMAT
C     (5F13.10).
C      S0  = MEAN LONGITUDE OF THE MOON (CYCLES) AT 000 ET 1/1/1976.
C      H0  = MEAN LONGITUDE OF THE SUN.
C      P0  = MEAN LONGITUDE OF THE LUNAR PERIGEE.
C      ENP0= NEGATIVE OF THE MEAN LONGITUDE OF THE ASCENDING NODE.
C      PP0 = MEAN LONGITUDE OF THE SOLAR PERIGEE (PERIHELION).
C      DS,DH,DP,DNP,DPP ARE THEIR RESPECTIVE RATES OF CHANGE OVER A 365
C      DAY PERIOD AS OF 000 ET 1/1/1976.
C
C  2) ONE OR MORE RECORDS FOR EACH MAIN CONSTITUENT CONTAINING THE
C     FOLLOWING INFORMATION IN FORMAT (6X,A5,1X,6I3,F5.2,I4)
C      KON    = CONSTITUENT NAME
C   II,JJ,KK,LL,MM,NN = THE SIX DOODSON NUMBERS
C      SEMI   = PHASE CORRECTION
C      NJ     = THE NUMBER OF SATELLITES FOR THIS CONSTITUENT.
C   IF NJ&gt;0, INFORMATION ON THE SATELLITE CONSTITUENTS IS READ , THREE
C   SATELLITES PER CARD, IN THE FORMAT (11X,3(3I3,F4.2,F7.4,1X,I1,1X)).
C   FOR EACH SATELLITE THE VALUES READ ARE
C      LDEL,MDEL,NDEL = THE CHANGES IN THE LAST THREE DOODSON NUMBERS
C                       FROM THOSE OF THE MAIN CONSTITUENT.
C      PH     = THE PHASE CORRECTION
C      EE     = THE AMPLITUDE RATIO OF THE SATELLITE TIDAL POTENTIAL TO
C               THAT OF THE MAIN CONSTITUENT.
C      IR     = 1 IF THE AMPLITUDE RATIO HAS TO BE MULTIPLIED BY THE
C                 LATITUDE CORRECTION FACTOR FOR DIURNAL CONSTITUENTS
C               2 IF THE AMPLITUDE RATIO HAS TO BE MULTIPLIED BY THE
C                 LATITUDE CORRECTION FACTOR FOR SEMI-DIURNAL CONSTI-
C                 TUENTS.
C               OTHERWISE IF NO CORRECTION IS REQUIRED TO THE AMPLITUDE
C                 RATIO.
C
C  3) ONE BLANK RECORD
C
C  4) ONE RECORD FOR EACH SHALLOW WATER CONSTITUENT SPECIFYING IN FORMAT
C     (11X,3(3I3,F4.2,F7.4,1X,I1,1X)), THE FOLLOWING INFORMATION
C      KON    = NAME  OF THE SHALLOW WATER CONSTITUENT
C      NJ     = NUMBER OF MAIN CONSTITUENTS FROM WHICH IT IS DERIVED.
C      COEF,KONCO = COMBINATION NUMBER AND NAME OF THESE MAIN
C                   CONSTITUENTS.
C
C  5) ONE BLANK RECORD
C
C MINIMAL DIMENSION REQUIREMENTS
C ==============================
C   THE DIMENSION OF KON, V,U, F, AND NJ SHOULD BE AT LEAST EQUAL TO THE
C   TOTAL NUMBER OF POSSIBLE CONSTITUENTS (PRESENTLY 146), THE DIMENSION
C   OF II, JJ, KK, LL, MM, NN AND SEMI SHOULD BE AT LEAST EQUAL TO THE
C   NUMBER OF MAIN CONSTITUENTS (PRESENTLY 45), THE DIMENSION OF EE,
C   LDEL, MDEL, NDEL, IR, AND PH SHOULD BE AT LEAST EQUAL TO THE TOTAL
C   NUMBER OF SATELLITES TO ALL THE MAIN CONSTITUENTS PLUS THE NUMBER
C   OF CONSTITUENTS WITH NO SATELLITES (PRESENTLY 162+8),
C   AND THE DIMENSION OF KONCO, AND COEFF SHOULD BE AT LEAST EQUAL TO
C   THE SUM FOR ALL SHALLOW WATER CONSTITUENTS OF THE NUMBER OF MAIN
C   CONSTITUENTS FROM WHICH EACH IS DERIVED (PRESENTLY 251).
C=======================================================================
C
      CHARACTER*5 KON,KBLANK,KONCO
      REAL*8 HOUR
	real*8 d1,h,pp,s,p,enp,dh,dpp,ds,dp,dnp,hh,tau,dtau
      DIMENSION KON(160),FREQ(160),V(160),U(160),F(160),NJ(160)
      DIMENSION II(50),JJ(50),KK(50),LL(50),MM(50),NN(50),SEMI(50)
      DIMENSION EE(180),LDEL(180),MDEL(180),NDEL(180),PH(180),IR(180)
      DIMENSION KONCO(270),COEF(270)
      DATA KBLANK/'     '/
      GO TO 180
C
C CALL TO OPNAST READS REQUIRED DATA
C=======================================================================
C
      ENTRY OPNAST(KON,FREQ,V,U,F,NTOTAL,HOUR,XLAT)
      KR=8
      LP=6
      PI=3.1415926536
      TWOPI=2.*PI
C
C HERE INPUT DATA TYPE 1), THE ASTRONOMICAL VARIABLES AND THEIR
C RATES OF CHANGE ARE READ
C=======================================================================
C
c	These values are no longer used though they are still
c	read in. More accurate polynomial approximations are 
c	now employed.
c
      READ(KR,50)S0,H0,P0,ENP0,PP0,DS,DH,DP,DNP,DPP
 50   FORMAT(5F13.10)
C
C HERE INPUT DATA TYPE 2), MAIN AND SATELLITE CONSTITUENT
C INFORMATION IS READ
C=======================================================================
C
      JBASE=0
      DO 90 K=1,1000
      READ(KR,60)KON(K),II(K),JJ(K),KK(K),LL(K),MM(K),NN(K),SEMI(K),
     2 NJ(K)
60    FORMAT(6X,A5,1X,6I3,F5.2,I4)
      IF(KON(K).EQ.KBLANK) GO TO 100
	freq(k)=0.
      J1=JBASE+1
      IF(NJ(K).GE.1) GO TO 75
      NJ(K)=1
      JL=J1
      PH(J1)=0.
      EE(J1)=0.
      LDEL(J1)=0
      MDEL(J1)=0
      NDEL(J1)=0
      IR(J1)=0
      GO TO 90
75    JL=JBASE+NJ(K)
      READ(KR,80)(LDEL(J),MDEL(J),NDEL(J),PH(J),EE(J),IR(J),J=J1,JL)
80    FORMAT((11X,3(3I3,F4.2,F7.4,1X,I1,1X)))
90    JBASE=JL
100   NTIDAL=K-1
C
C HERE INPUT DATA TYPE 4), SHALLOW WATER CONSTITUENT INFORMATION IS
C READ
C=======================================================================
C
      JBASE=0
      K1=NTIDAL+1
      DO 160 K=K1,1000
      J1=JBASE+1
      J4=J1+3
      READ(KR,130)KON(K),NJ(K),(COEF(J),KONCO(J),J=J1,J4)
130   FORMAT(6X,A5,I1,2X,4(F5.2,A5,5X))
      IF(KON(K).EQ.KBLANK) GO TO 170
	freq(k)=0.
      JBASE=JBASE+NJ(K)
      DO 160 J=J1,JBASE
      DO 162 L=1,NTIDAL
      IF(KON(L).EQ.KONCO(J)) GO TO 163
162   CONTINUE
      WRITE(LP,241) KONCO(J)
      STOP
163   continue
160   CONTINUE
170   NTOTAL=K-1
      RETURN
C
C GIVEN THE PARAM HOUR , THE TABLES FREQ(K),V(K),U(K),F(K) ,
C K=1,NTOTAL ARE SET UP .
C=======================================================================
C
180   SLAT=SIN(PI*XLAT/180.)
c      CALL GDAY(1,1,76,19,KD)
c      YEARS=(KH/24.D0-KD)/365.00D0
C
C***********************************************************************
C*  THE ASTRONOMICAL ARGUMENTS ARE CALCULATED BY LINEAR APPROXIMATION
C*  AT THE MID POINT OF THE ANALYSIS PERIOD.
C
c      S=S0+YEARS*DS
c      H=H0+YEARS*DH
c      P=P0+YEARS*DP
c      ENP=ENP0+YEARS*DNP
c      PP=PP0+YEARS*DPP
c
c	day number measured from January 0.5 1900 (i.e.,
c	1200 UT December 31, 1899
	d1=hour/24.d0
	call gday(31,12,99,18,kd0)
	d1=d1-dfloat(kd0)-0.5d0
	call astr(d1,h,pp,s,p,enp,dh,dpp,ds,dp,dnp)
      INT24=24
      INTDYS=idint(hour/24.d0)
      HH=hour-dfloat(INTDYS*INT24)
      TAU=HH/24.D0+H-S
	dtau=365.d0+dh-ds
c
      JBASE=0
      DO 210 K=1,NTIDAL
      FREQ(K)=(II(K)*DTAU+JJ(K)*DS+KK(K)*DH+LL(K)*DP+MM(K)*DNP+
     1NN(K)*DPP)/(365.*24.)
      VDBL=II(K)*TAU+JJ(K)*S+KK(K)*H+LL(K)*P+MM(K)*ENP+NN(K)*PP+SEMI(K)
      IV=VDBL
      IV=(IV/2)*2
      V(K)=VDBL-IV
      J1=JBASE+1
      JL=JBASE+NJ(K)
      SUMC=1.
      SUMS=0.
      DO 200 J=J1,JL
C
C HERE THE SATELLITE AMPLITUDE RATIO ADJUSTMENT FOR LATITUDE IS MADE
C=======================================================================
C
      RR=EE(J)
      L=IR(J)+1
      GO TO (901,902,903),L
902   RR=EE(J)*0.36309*(1.-5.*SLAT*SLAT)/SLAT
      GO TO 901
903   RR=EE(J)*2.59808*SLAT
901   CONTINUE
      UUDBL=LDEL(J)*P+MDEL(J)*ENP+NDEL(J)*PP+PH(J)
      IUU=UUDBL
      UU=UUDBL-IUU
      SUMC=SUMC+RR*COS(UU*TWOPI)
200   SUMS=SUMS+RR*SIN(UU*TWOPI)
      F(K)=SQRT(SUMC*SUMC+SUMS*SUMS)
      U(K)=ATAN2(SUMS,SUMC)/TWOPI
210   JBASE=JL
C
      JBASE=0
      K1=NTIDAL+1
      IF(K1.GT.NTOTAL) RETURN
      DO 270 K=K1,NTOTAL
      F(K)=1.0
      V(K)=0.
      U(K)=0.
      J1=JBASE+1
      JL=JBASE+NJ(K)
      FREQ(K)=0.
      DO 260 J=J1,JL
      DO 240 L=1,NTIDAL
      IF(KON(L).EQ.KONCO(J)) GO TO 250
240   CONTINUE
      WRITE(LP,241)KONCO(J)
241   FORMAT(/,' ROUTINE ASTRO UNABLE TO FIND CONSTIT ' ,A5 /)
      STOP
250   F(K)=F(K)*F(L)**ABS(COEF(J))
      V(K)=V(K)+COEF(J)*V(L)
      U(K)=U(K)+COEF(J)*U(L)
      FREQ(K)=FREQ(K)+COEF(J)*FREQ(L)
260   CONTINUE
270   JBASE=JL
      RETURN
      END
      SUBROUTINE PUT(ISTN,IDY, MO,IYR,IHR,MIN,R,DIR)
C
C THIS SUBROUTINE RECEIVES SUCCESSIVE MAX MIN CURRENTS, ONE AT A TIME,
C AND PUTS THEM OUT DAILY ON THE LINE PRINTER AND FILE REFERENCE
C NUMBER LU.
C THE BUFFER IS EMPTIED BY A CALL TO CLSPUT.  IF THE LAST CARD CON-
C TAINS ONE VALUE ONLY IT IS NOT PUT OUT. A BLANK CARD IMAGE IS PUT
C ON UNIT LU UPON CLOSING .
C ======================================================================
C
C
      DIMENSION RK(18),DIRK(18),ITIME(18)
      IF(ISTART.NE.1) GO TO 21
      WRITE(LP,20)
      WRITE(LU,20)
21    CONTINUE
20    FORMAT(/ '  STN  DATE ',4(' TIME  MAG   DIR ') / )
      ISTART=0
      IF(K.EQ.0 .OR. IDY.EQ.IDYK) GO TO 100
   30 NC=K/4
      IF(K-4*NC.NE.0) NC=NC+1
      DO 40 KK=1,NC
      L1=4*(KK-1)+1
      L2=4*KK
      IF(L2.GT.K) L2=K
      WRITE(LU,50) ISTNK,IDYK,MOK,IYRK,(ITIME(L),RK(L),DIRK(L),L=L1,L2)
   40 WRITE(LP,50) ISTNK,IDYK,MOK,IYRK,(ITIME(L),RK(L),DIRK(L),L=L1,L2)
   50 FORMAT(1X,I4,I3,2I2,4(I5,F6.2,F6.1))
      K=0
      IF(KLOSE.EQ.1) GO TO 140
100   K=K+1
      ITIME(K)=100*IHR+MIN
      RK(K)=R
      DIRK(K)=DIR
      ISTNK=ISTN
      IDYK=IDY
      MOK=MO
      IYRK=IYR
      RETURN
C
C
      ENTRY OPNPUT(ISTN,IDY,MO,IYR,IHR,MIN,R,DIR)
      K=0
      ISTART=1
      KLOSE=0
      LP=6
      LU=12
      RETURN
C
C
      ENTRY CLSPUT
      KLOSE=1
      IF(K.GE.2) GO TO 30
140   K=0
      WRITE(LU,150)
150   FORMAT(80X)
      RETURN
      END
      SUBROUTINE CPUT(ISTAT,HOUR,IDY,MO,IYR,X1,Y1,TSPC)
C
C PUTS OUT THE TIDAL CURRENT VECTOR VALUES AT A SPACING OF TSPC HOURS
C IN CARD IMAGE FORM ON THE PRINTER AND ON FILE REFERENCE NUMBERS LU1
C AND LU2, 8 VALUES PER CARD IMAGE. OPEN WITH A CALL TO OPNCP AND
C CLOSE WITH A CALL TO CLSCP.
C ======================================================================
C
      DIMENSION X(8),Y(8)
      IF(ISTART.NE.1) GO TO 30
      WRITE(LU1,20) (I,I=1,8)
      WRITE(LU2,20) (I,I=1,8)
      WRITE(LP,20) (I,I=1,8)
20    FORMAT(/ ' STN 1ST HR  DATE',I6,7I7,2X,'DT HRS' /)
30    ISTART=0
      K=K+1
      IF(K.GT.1) GO TO 50
      IST1=ISTAT
      HR1=HOUR
      ID1=IDY
      M1=MO
      IY1=IYR
   50 X(K)=X1
      Y(K)=Y1
      IF(K.LT.8) RETURN
      WRITE(LU1,60) IST1,HR1,ID1,M1,IY1,(Y(KK),KK=1,8),TSPC
      WRITE(LP,60) IST1,HR1,ID1,M1,IY1,(Y(KK),KK=1,8),TSPC
      WRITE(LU2,60) IST1,HR1,ID1,M1,IY1,(X(KK),KK=1,8),TSPC
      WRITE(LP,60) IST1,HR1,ID1,M1,IY1,(X(KK),KK=1,8),TSPC
60    FORMAT(1X,I4,F6.2,I3,2I2,8F7.2,F6.2)
      K=0
      RETURN
C
C
      ENTRY OPNCP(ISTAT,HOUR,IDY,MO,IYR,X1,Y1,TSPC)
      LP=6
      LU1=10
      LU2=11
      K=0
      ISTART=1
      RETURN
C
C
      ENTRY CLSCP
      WRITE(LU1,80)
      WRITE(LU2,80)
80    FORMAT(80X)
      RETURN
      END
	subroutine astr(d1,h,pp,s,p,np,dh,dpp,ds,dp,dnp)
c	this subroutine calculates the following five ephermides
c	of the sun and moon
c	h = mean longitude of the sum
c	pp = mean longitude of the solar perigee
c	s = mean longitude of the moon
c	p = mean longitude of the lunar perigee
c	np = negative of the longitude of the mean ascending node
c	and their rates of change.
c	Units for the ephermides are cycles and for their derivatives
c	are cycles/365 days
c	The formulae for calculating this ephermides were taken from
c	pages 98 and 107 of the Explanatory Supplement to the
c	Astronomical Ephermeris and the American Ephermis and
c	Nautical Almanac (1961)
c
	implicit real*8(a-h,o-z)
	real*8 np
	d2=d1*1.d-4
	f=360.d0
	f2=f/365.d0
	h=279.696678d0+.9856473354d0*d1+.00002267d0*d2*d2
	pp=281.220833d0+.0000470684d0*d1+.0000339d0*d2*d2+
     1  .00000007d0*d2**3
	s=270.434164d0+13.1763965268d0*d1-.000085d0*d2*d2+
     1  .000000039d0*d2**3
	p=334.329556d0+.1114040803d0*d1-.0007739d0*d2*d2-
     1  .00000026d0*d2**3
	np=-259.183275d0+.0529539222d0*d1-.0001557d0*d2*d2-
     1  .00000005d0*d2**3
	h=h/f
	pp=pp/f
	s=s/f
	p=p/f
	np=np/f
	h=h-dint(h)
	pp=pp-dint(pp)
	s=s-dint(s)
	p=p-dint(p)
	np=np-dint(np)
	dh=.9856473354d0+2.d-8*.00002267d0*d1
	dpp=.0000470684d0+2.d-8*.0000339d0*d1
     1  +3.d-12*.00000007d0*d1**2
	ds=13.1763965268d0-2.d-8*.000085d0*d1+
     1  3.d-12*.000000039d0*d1**2
	dp=.1114040803d0-2.d-8*.0007739d0*d1-
     1  3.d-12*.00000026d0*d1**2
	dnp=+.0529539222d0-2.d-8*.0001557d0*d1-
     1  3.d-12*.00000005d0*d1**2
	dh=dh/f2
	dpp=dpp/f2
	ds=ds/f2
	dp=dp/f2
	dnp=dnp/f2
	return
	end
      SUBROUTINE GDAY(IDD,IMM,IYY,ICC,KD)
C!
C!  GIVEN DAY,MONTH,YEAR AND CENTURY(EACH 2 DIGITS), GDAY RETURNS
C!  THE DAY#, KD BASED ON THE GREGORIAN CALENDAR.
C!  THE GREGORIAN CALENDAR, CURRENTLY 'UNIVERSALLY' IN USE WAS
C!  INITIATED IN EUROPE IN THE SIXTEENTH CENTURY. NOTE THAT GDAY
C!  IS VALID ONLY FOR GREGORIAN CALENDAR DATES.
C
C   KD=1 CORRESPONDS TO JANUARY 1, 0000
C	
c 	Note that the Gregorian reform of the Julian calendar 
c	omitted 10 days in 1582 in order to restore the date
c	of the vernal equinox to March 21 (the day after
c	Oct 4, 1582 became Oct 15, 1582), and revised the leap 
c	year rule so that centurial years not divisible by 400
c	were not leap years.
c
C   THIS ROUTINE WAS WRITTEN BY EUGENE NEUFELD, AT IOS, IN JUNE 1990.
C
      INTEGER NDP(13)
      INTEGER NDM(12)
      DATA NDP/0,31,59,90,120,151,181,212,243,273,304,334,365/
      DATA NDM/31,28,31,30,31,30,31,31,30,31,30,31/
C!
      LP = 6
C!  TEST FOR INVALID INPUT:
      IF(ICC.LT.0)THEN
	 WRITE(LP,5000)ICC
	 STOP
      ENDIF
      IF(IYY.LT.0.OR.IYY.GT.99)THEN
	 WRITE(LP,5010)IYY
	 STOP
      ENDIF
      IF(IMM.LE.0.OR.IMM.GT.12)THEN
	 WRITE(LP,5020)IMM
	 STOP
      ENDIF
      IF(IDD.LE.0)THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
      IF(IMM.NE.2.AND.IDD.GT.NDM(IMM))THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
      IF(IMM.EQ.2.AND.IDD.GT.29)THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
      IF(IMM.EQ.2.AND.IDD.GT.28.AND.((IYY/4)*4-IYY.NE.0.OR.(IYY.EQ.0.AND
     .    .(ICC/4)*4-ICC.NE.0)))THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
5000  FORMAT(' INPUT ERROR. ICC = ',I7)
5010  FORMAT(' INPUT ERROR. IYY = ',I7)
5020  FORMAT(' INPUT ERROR. IMM = ',I7)
5030  FORMAT(' INPUT ERROR. IDD = ',I7)
C!
C!  CALCULATE DAY# OF LAST DAY OF LAST CENTURY:
      KD = ICC*36524 + (ICC+3)/4
C!
C!  CALCULATE DAY# OF LAST DAY OF LAST YEAR:
      KD = KD + IYY*365 + (IYY+3)/4
C!
C!  ADJUST FOR CENTURY RULE:
C!  (VIZ. NO LEAP-YEARS ON CENTURYS EXCEPT WHEN THE 2-DIGIT
C!  CENTURY IS DIVISIBLE BY 4.)
      IF(IYY.GT.0.AND.(ICC-(ICC/4)*4).NE.0) KD=KD-1
C!  KD NOW TRULY REPRESENTS THE DAY# OF THE LAST DAY OF LAST YEAR.
C!
C!  CALCULATE DAY# OF LAST DAY OF LAST MONTH:
      KD = KD + NDP(IMM)
C!
C!  ADJUST FOR LEAP YEARS:
      IF(IMM.GT.2.AND.((IYY/4)*4-IYY).EQ.0.AND.((IYY.NE.0).OR.
     .   (((ICC/4)*4-ICC).EQ.0)))   KD=KD+1
C!  KD NOW TRULY REPRESENTS THE DAY# OF THE LAST DAY OF THE LAST
C!  MONTH.
C!
C!  CALCULATE THE CURRENT DAY#:
      KD = KD + IDD
      RETURN
C!
C!
      ENTRY DMY(IDD,IMM,IYY,ICC,KD)
C!
C!  GIVEN THE (GREGORIAN) DAY#, KD, AS CALCULATED ABOVE IN THIS ROUTINE,
C!  ENTRY DMY RETURNS THE (GREGORIAN) DAY, MONTH, YEAR AND CENTURY.
C!
C!  TEST FOR VALID INPUT:
      IF(KD.LE.0) WRITE(LP,5040)KD
5040  FORMAT(' KD = ',I7,'  INVALID INPUT. DMY STOP.')
C!
C!  SAVE KD
      KKD=KD
C!  CALCULATE ICC AND SUBTRACT THE NUMBER OF DAYS REPRESENTED BY ICC
C!  FROM KKD
C!  JFH IS THE NUMBER OF 400 YEAR INTERVALS UP TO KKD
C!  JCC IS THE NUMBER OF ADDITIONAL CENTURIES UP TO KKD
      JFH = KKD/146097
      KKD = KKD - JFH*146097
      IF(KKD.LT.36525)THEN
	 JCC = 0
      ELSE
	 KKD = KKD - 36525
	 JCC = 1 + KKD/36524
	 KKD = KKD - (JCC-1)*36524
      END IF
      ICC = 4*JFH + JCC
      IF(KKD.EQ.0)THEN
	 ICC = ICC-1
	 IYY = 99
	 IMM = 12
	 IDD = 31
	 RETURN
      ENDIF
C!
C!  CALCULATE IYY. JFY IS THE NUMBER OF FOUR YEAR INTERVALS IN THE
C!  CURRENT CENTURY. THE FIRST FOUR YEAR INTERVAL IS SHORT (1460 DAYS
C!  RATHER THAN 1461)IF THE CURRENT CENTURY IS NOT DIVISIBLE BY 4, AND
C!  IN THIS CASE JCC.NE.0 AS CALCULATED ABOVE.
C!
C!  CALCULATE JFY:
      JFY = 0
      IF(JCC.EQ.0)GOTO 10
      IF(KKD.LT.1460)GOTO 10
      JFY = 1
      KKD = KKD - 1460
10    KK = KKD/1461
      JFY = JFY + KK
      KKD = KKD - KK*1461
C!
C!  CALCULATE JYY, THE REMAINING YEARS OF THE CURRENT CENTURY UP TO THE
C!  CURRENT DAY:
      JYY = 0
C!  THE NEXT YEAR IS NOT A LEAP YEAR IF JFY=0 AND JCC.NE.0.
      IF(JFY.EQ.0.AND.JCC.NE.0)GOTO 20
      IF(KKD.LT.366)GOTO 30
      JYY = 1
      KKD = KKD - 366
20    JYYY = KKD/365
      JYY = JYY + JYYY
      KKD = KKD - JYYY*365
30    IYY = 4*JFY + JYY
      IF(KKD.EQ.0) THEN
	 IYY=IYY-1
	 IMM=12
	 IDD=31
	 RETURN
      END IF
C!
C!  SET L=1 IF WE HAVE A LEAP YEAR.
      L=0
      IF(IYY-(IYY/4)*4.NE.0)GOTO 40
      IF(IYY.EQ.0.AND.(ICC-(ICC/4)*4).NE.0)GOTO 40
      L=1
C!
C!  CALCULATE IMM AND IDD
40    IF(KKD.GT.31) GOTO 50
      IMM=1
      IDD=KKD
      RETURN
C!
50    IF(KKD.GT.59)GOTO 60
      IMM = 2
      IDD = KKD-31
      RETURN
C!
60    IF(KKD.GT.60)GOTO 70
      IF(L.EQ.0)GOTO 70
      IMM = 2
      IDD = 29
      RETURN
C!
70    IF(L.EQ.1) KKD=KKD-1
      DO 80 I=4,13
	 IF(KKD.GT.NDP(I))GOTO 80
	 IMM = I-1
	 IDD = KKD - NDP(I-1)
	 RETURN
C!
80    CONTINUE
90    WRITE(LP,5050)
5050  FORMAT(' ERROR IN DMY.')
      STOP
      END
