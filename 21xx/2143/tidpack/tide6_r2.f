c	This program version was modified in October 1992 to
c	incorporate a new calendar and a higher order approximation
c	for the astronomical arguments, their
c	derivatives, and the constituent frequencies.
c						M. Foreman
C
	program tide6
      character*5 NAME,NAMEU,NAMIN,DDUM,KMPR,NKMPR,KBLANK,NNKON
      character*6 NA
      character*1 icn
      DIMENSION X(9000),Y(9000),XP(9000),YP(9000)
      DIMENSION CX(100),CY(100),SX(100),SY(100),ERCX(100),ERCY(100),ERSX
     *(100),ERSY(100),NAME(150),FREQ(150),KMPR(150),NAMEU(100),FU(100)
     *,AP(100),AM(100),EPSP(100),EPSM(100),LSTRP(10),NA(4)
      COMMON IHHA,IDDA,IMMA,IYYA,ICCA,IHHB,IDDB,IMMB,IYYB,ICCB,KHA
	common /const/name,freq,m
      DATA KBLANK/'     '/
      DEGREE(CYC)=(CYC-IFIX(CYC)-SIGN(0.5,CYC)+.5)*360.
c	open(unit=4,file='tide7t.dat',status='old',form='formatted')
	open(unit=4,file='tide7.dat',status='old',form='formatted')
	open(unit=8,file='tide3.dat',status='old',form='formatted')
c	open(unit=10,file='curr_test8.dat',status='old',form='formatted')
c	open(unit=11,file='curr_test9.dat',status='old',form='formatted')
	open(unit=10,file='tide8.dat',status='old',form='formatted')
	open(unit=11,file='tide9.dat',status='old',form='formatted')
	open(unit=2,file='file2.dat',status='unknown',form='formatted')
	open(unit=12,file='file12.dat',status='unknown',form='formatted')
	open(unit=13,file='file13.dat',status='unknown',form='formatted')
c	open(unit=4,status='old',form='formatted')
c	open(unit=8,status='old',form='formatted')
c	open(unit=10,status='old',form='formatted')
c	open(unit=11,status='old',form='formatted')
c	open(unit=2,status='new',form='formatted')
c	open(unit=12,status='new',form='formatted')
c	open(unit=13,status='new',form='formatted')
C
C***********************************************************************
C*  THIS VERSION OF THE TIDAL STREAMS ANALYSIS PROGRAM WAS REVISED IN
C*  NOVEMBER 1977 BY M FOREMAN. SEE THE USER MANUAL FOR DETAILS.
c*  It was further updated in November 1987 so that it would run
c*  on a PC with IBM Professional FORTRAN.
C*
C***********************************************************************
C*  FILE REFERENCE NUMBERS OR DEVICES REQUIRED BY THIS PROGRAM.
C*     KR    - INPUT FILE  - CONTAINS THE TIDAL CONSTITUENT INFORMATION.
C*     MTD   - INPUT FILE  - GIVES TIDAL STATION AND ANALYSIS TYPE
C*                           DETAILS.
C*     IPUNS - INPUT FILE  - CONTAINS THE HOURLY NORTH/SOUTH CURRENT
C*                           COMPONENTS.
C*     IPUEW - INPUT FILE  - CONTAINS THE HOURLY EAST/WEST CURRENT
C*                           COMPONENTS.
C*     LP    - OUTPUT FILE - LINE PRINTER.
C*     KP    - OUTPUT FILE - CONTAINS THE ANALYSIS RESULTS.
C*     KPNS  - OUTPUT FILE - CONTAINS THE HOURLY PREDICTED NORTH/SOUTH
C*                           CURRENT COMPONENTS, IF SO REQUESTED.
C*     KPEW  - OUTPUT FILE - CONTAINS THE HOURLY PREDICTED EAST/WEST
C*                           CURRENT COMPONENTS, IF SO REQUESTED.
C*  PRESENTLY THESE FILES ARE ASSIGNED THE RESPECTIVE NUMBERS
C*  8,4,10,11,6,2,12 AND 13.  SEE THE MANUAL, OR COMMENT STATEMENTS
C*  WITHIN THIS PROGRAM FOR FURTHER DETAILS ON THEIR USE.
C*
C***********************************************************************
C*  IF THE SAMPLING INTERVAL OF THE ORIGINAL CURRENT DATA IS OTHER THAN
C*  ONE HOUR, THEN THE DATA SHOULD BE FILTERED AND DECIMATED TO HOURLY
C*  INTERVALS, PRIOR TO SUBMISSION TO THIS PROGRAM. G GODIN SUGGESTS THE
C*  SEQUENCE OF MOVING AVERAGE FILTERS A12*A12*A13 FOR 5 MINUTE DATA,
C*  AND A6*A6*A7 FOR 10 MINUTE DATA.
C*
C***********************************************************************
C*  ARRAY DEFINITIONS AND DIMENSION GUIDELINES
C*
C*  M                IS THE NUMBER OF CONSTITUENTS INCLUDED IN THE DATA
C*                   FILE. AT PRESENT THIS IS 146.
C*  MU               IS THE NUMBER OF CONSTITUENTS INCLUDED IN THE LEAST
C*                   SQUARES ANALYSIS. AT PRESENT IT WILL HAVE A MAXIMUM
C*                   OF 69+ THE NUMBER OF SHALLOW WATER CONSTITUENTS
C*                   SPECIFICALLY DESIGNATED FOR INCLUSION (AND NOT IN
C*                   THE STANDARD 69 CONSTITUENT PACKAGE) IN THE
C*                   ANALYSIS.
C*  MUIN             IS THE NUMBER OF CONSTITUENTS INCLUDED IN THE
C*                   FINAL ANALYSIS:IE MU + THE NUMBER OF INFERENCE
C*                   CONSTITUENTS.  PRESENTLY, IT TOO WILL HAVE A
C*                   MAXIMUM OF 69 + THE NUMBER OF SHALLOW WATER
C*                   CONSTITUENTS SPECIFICALLY DESIGNATED FOR INCLUSION
C*                   IN THE ANALYSIS.
C*  NAME(I)          IS THE ARRAY CONTAINING ALL THE CONSTITUENT NAMES
C*                   AS THEY ARE READ IN FROM THE DATA FILE. IT SHOULD
C*                   HAVE THE MINIMUM DIMENSION OF M+1.
C*  FREQ(I)          IS THE ARRAY OF FREQUENCIES (CYCLES/HR) CORRESPOND-
C*                   ING TO THE CONSTITUENTS CONTAINED IN ARRAY NAME.
C*                   IT SHOULD HAVE MINIMUM DIMENSION M+1.
C*  KMPR(I)          IS THE ARRAY OF CONSTITUENTS TO WHICH THOSE IN
C*                   ARRAY NAME SHOULD BE COMPARED UNDER THE RAYLEIGH
C*                   CRITERION. IT SHOULD HAVE MINIMUM DIMENSION OF M+1.
C*  NAMEU(I)         IS THE ARRAY CONTAINING THE NAMES OF ALL THE CON-
C*                   STITUENTS THAT ARE TO BE INCLUDED IN THE LEAST
C*                   SQUARES ANALYSIS OF THE TIDAL RECORD. THEY ARE
C*                   CHOSEN FROM THE LIST IN ARRAY NAME VIA THE RAYLEIGH
C*                   CRITERION. IT SHOULD HAVE MINIMUM DIMENSION MU.
C*  FU(I)            IS THE ARRAY OF FREQUENCIES CORRESPONDING TO THE
C*                   CONSTITUENTS CONTAINED IN ARRAY NAMEU AND THOSE
C*                   TO BE INFERRED. IT SHOULD HAVE MINIMUM DIMENSION
C*                   MUIN.
C*  X(I),Y(I)        ARE THE RESPECTIVE ARRAYS CONTAINING ALL THE HOURLY
C*                   EAST/WEST AND NORTH/SOUTH CURRENT COMPONENTS OF THE
C*                   RECORD TO BE ANALYSED. THEY HAVE BEEN GIVEN THE
C*                   DIMENSION SIZE OF 9000, WHICH IS SUFFICIENT FOR
C*                   RECORDS OF LENGTH UP TO 375 DAYS.
C*  XP(I),YP(I)      ARE THE ARRAYS CONTAINING THE PREDICTED HOURLY
C*                   EAST/WEST AND NORTH/SOUTH CURRENT COMPONENTS
C*                   RESPECTIVELY, AS FOUND VIA ANALYSIS. PREDICTIONS
C*                   ARE SPECIFIED FOR THE ANALYSIS PERIOD, INCLUDING
C*                   THOSE INTERVALS WHERE THERE WERE GAPS IN THE
C*                   ORIGINAL RECORD. AS WITH X AND Y, BOTH ARRAYS HAVE
C*                   BEEN GIVEN THE DIMENSION SIZE OF 9000.
C*  CX(I),SX(I)      ARE THE ARRAYS CONTAINING THE COS AND SIN COEFFI-
C*  CY(I),SY(I)      CIENTS OF THE I-TH TIDAL CONSTITUENT AS FOUND VIA
C*                   LEAST SQUARES ANALYSES AND INFERENCE FOR THE X
C*                   AND Y CURRENT COMPONENTS RESPECTIVELY. THEIR
C*                   MINIMUM DIMENSION SHOULD BE MUIN.
C*  ERCX(I),ERSX(I)  ARE THE ARRAYS CONTAINING ERROR ESTIMATES (STANDARD
C*  ERCY(I),ERSY(I)  DEVIATIONS) FOR THE VALUES OF CX(I),SX(I),CY(I),
C*                   AND SY(I) OBTAINED VIA LEAST SQUARES. THEIR
C*                   MINIMUM DIMENSION SHOULD BE MU.
C*  AP(I),AM(I)      ARE THE ARRAYS CONTAINING THE AMPLITUDES OF THE
C*                   POSITIVELY AND NEGATIVELY ROTATING VECTORS THAT
C*                   COMPRISE THE CURRENT ELLIPSE FOR CONSTITUENT I.
C*                   THEIR MINIMUM DIMENSION SHOULD BE MU.
C*  EPSP(I),EPSM(I)  ARE THE ARRAYS CONTAINING THE TIME INDEPENDENT
C*                   PHASES OF THE POSITIVELY AND NEGATIVELY ROTATING
C*                   VECTORS THAT COMPRISE THE CURRENT ELLIPSE FOR CON-
C*                   STITUENT I. THEIR MINIMUM DIMENSION SHOULD BE MU.
C*  LSTRP(I)         IS THE ARRAY CONTAINING THE NUMBER OF TERMS USED IN
C*                   SUCCESSIVE MOVING AVERAGE FILTERS THAT WERE APPLIED
C*                   TO THE ORIGINAL DATA RECORD (THE RECORD AS IT STOOD
C*                   PRIOR TO THAT CONTAINED IN THE ARRAYS X(I) AND
C*                   Y(I)).
C*  NA(I)            IS THE ARRAY CONTAINING THE NAME OF THE TIDAL
C*                   STATION FOR WHICH THE ANALYSIS IS TO BE PERFORMED.
C*                   AT PRESENT IT IS DIMENSIONED 4 AND ALLOWS A MAXIMUM
C*                   OF 22 CHARACTERS.
C*
C***********************************************************************
C*
C*  JOB INITIALIZATION
C
      MTD=4
      IPUNS=10
      IPUEW=11
      KP=2
      KPNS=12
      KPEW=13
      KR=8
      LP=6
      PI = 3.1415926
      TWOPI=2.*PI
      RAY=1.0
C
C***********************************************************************
C*  READ FROM DEVICE MTD, THE PARAMETERS RAYOPT,OBSFAC,ICHK,INDPR, AND
C*  NSTRP,IN THE FORMAT (F5.2,F10.7,3I5).
C*      RAYOPT = RAYLEIGH CRITERION VALUE IF DIFFERENT FROM 1.0.
C*      OBSFAC = THE FACTOR THAT WILL MULTIPLY THE INTEGER HOURLY
C*               CURRENT OBSERVATIONS IN ORDER TO PRODUCE THE DESIRED
C*               UNITS FOR THE FINAL CURRENT ELLIPSE MAJOR AND MINOR
C*               SEMI-AXIS LENGTHS.
C*      ICHK   = 0 IF THE HOURLY CURRENT INPUT DATA IS TO BE CHECKED
C*                 FOR ERRORS,
C*               1 IF NO ERROR CHECKING IS DESIRED.
C*      INDPR  = 1 IF HOURLY CURRENT COMPONENT PREDICTIONS BASED ON THE
C*                 ANALYSIS RESULTS, ARE TO BE CALCULATED AND WRITTEN
C*                 ONTO DEVICES KPNS AND KPEW RESPECTIVELY.
C*                 IF THERE IS INFERENCE, THIS PARAMETER VALUE WILL
C*                 ALSO GIVE THE ROOT MEAN SQUARE RESIDUAL ERRORS AFTER
C*                 INFERENCE ADJUSTMENTS HAVE BEEN MADE.
C*             = 0 IF NO SUCH PREDICTIONS ARE DESIRED.
C*      NSTRP  = THE NUMBER OF SUCCESSIVE MOVING AVERAGE FILTERS THAT
C*               HAVE BEEN APPLIED TO THE ORIGINAL CURRENT DATA. IF
C*               NSTRP IS NONZERO, THEN SUITABLE AMPLITUDE CORRECTIONS
C*               WILL BE MADE TO COMPENSATE FOR THE SMOOTHING EFFECT
C*               OF THE FILTERS.
C*
C*  IF NSTRP IS GREATER THAN ZERO, THEN READ FROM DEVICE MTD, THE
C*  PARAMETER, TIMINT AND THE ARRAY (LSTRP(I),I=1,NSTRP), IN THE FORMAT
C*  (F10.5,10I5).
C*      TIMINT = THE SAMPLING INTERVAL, IN MINUTES, OF THE ORIGINAL
C*               UNFILTERED RECORD.
C*      LSTRP  = THE ARRAY CONTAINING THE NUMBER OF TERMS USED IN EACH
C*               OF THE NSTRP SUCCESSIVE MOVING AVERAGE FILTERS.
C
      READ(MTD,10) RAYOPT,OBSFAC,ICHK,INDPR,NSTRP
   10 FORMAT(F5.2,F10.7,3I5)
      IF(NSTRP.LE.0) GO TO 11
      READ(MTD,12) TIMINT,(LSTRP(I),I=1,NSTRP)
      DELT=TIMINT/60.
   12 FORMAT(F10.5,10I5)
   11 CONTINUE
      IF(RAYOPT.GE.0.32) RAY=RAYOPT
C
C***********************************************************************
C*  CONSTITUENTS, FREQUENCIES AND RAYLEIGH COMPARISON PAIRS ARE READ
C*  FROM DEVICE KR IN THE FORMAT (4X,A5,3X,F13.10,4X,A5). A BLANK CARD
C*  DENOTES THE END OF THIS SET OF DATA.
C
      DO 30 K=1,150
      READ(KR,20) NAME(K),FREQ(K),KMPR(K)
20    FORMAT(4X,A5,3X,F13.10,4X,A5)
      IF(NAME(K).EQ. KBLANK) GO TO 40
30    M=K
40    CONTINUE
C
C***********************************************************************
C*  ASTRONOMICAL ARGUMENTS, SATELLITES TO THE MAIN CONSTITUENTS, AND
C*  SHALLOW WATER CONSTITUENTS ARE READ ON DEVICE KR.
C
      CALL OPNVUF(NDUM,DDUM,DUM,DUM,DUM)
C
C***********************************************************************
C*  INFERENCE PAIRS OF CONSTITUENTS AND PARAMETERS ARE READ ON DEVICE
C*  MTD.
C
      CALL OPNINF(DDUM,NDUM,NDUM,DDUM,DUM,DUM,DUM,DUM,DDUM,DUM,DUM,DUM,D
     1UM,DUM,NIN)
C
C***********************************************************************
C*  CONSTITUENTS OTHER THAN THOSE IN THE STANDARD 69 MEMBER PACKAGE CAN
C*  BE SPECIFIED NOW ON DEVICE MTD ALONG WITH THEIR RAYLEIGH COMPARISON
C*  CONSTITUENT (WHICH SHOULD BE IN THE STANDARD OR NOW AUGMENTED DATA
C*  PACKAGE). IF THE RAYLEIGH COMPARISON CONSTITUENT IS MISSING, THE
C*  ADDITIONAL CONSTITUENT WILL NOT BE INCLUDED IN THE LEAST SQUARES
C*  FIT. THE FORMAT IS (6X,A5,4X,A5) AND A BLANK CARD DENOTES THE END OF
C*  THESE ADDITIONAL CONSTITUENTS.
C
994   READ(MTD,999) NNKON,NKMPR
999   FORMAT(6X,A5,4X,A5)
      IF(NNKON.EQ.KBLANK) GO TO 995
      DO 998 K=1,M
      IF(NAME(K).EQ.NNKON) GO TO 997
998   CONTINUE
      WRITE(LP,996) NNKON
996   FORMAT(5X,'CONSTITUENT',2X,A5,2X,'IS NOT INCLUDED IN THE LIST OF P
     COSSIBLE ADDITIONAL CONSTITUENTS')
      STOP
997   KMPR(K)=NKMPR
      GO TO 994
995   CONTINUE
C
C***********************************************************************
C*  CASE INITIALIZATION
C*
C*  READ ON DEVICE MTD, THE FOLLOWING INFORMATION ON THE PERIOD OF THE
C*  DESIRED ANALYSIS : IHHA,IDDA,IMMA,IYYA,ICCA,IHHB,IDDB,IMMB,IYYB,ICCB
C*  IN THE FORMAT (2X,10I2)
C*     IHHA,IDDA,IMMA,IYYA,ICCA = HOUR, DAY, MONTH, YEAR, CENTURY OF THE 
C*                                BEGINNING OF THE ANALYSIS.
C*     IHHB,IDDB,IMMB,IYYB,ICCB = HOUR, DAY, MONTH, YEAR, CENTURY OF THE 
C*                                END OF THE ANALYSIS PERIOD.
C*
C*     ZERO VALUES FOR ICCA OR ICCB ARE RESET TO 19
C*
C*  FOLLOWED BY INFORMATION ON THE TIDAL STATION,
C*
C*     KSTN,(NA(J),J=1,4),ITZONE,LAD,LAM,LOD,LOM,
C*     IN THE FORMAT (5X,I4,1X,3A6,A4,A3,1X,2I2,I3,I2).
C*     KSTN   = STATION NUMBER.
C*     NA     = STATION NAME.
C*     ITZONE = TIME ZONE OF HOURLY OBSERVATIONS.
C*     LAD,LAM= LATITUDE IN DEGREES + MINUTES OF THE TIDAL STATION.
C*     LOD,LOM= LONGITUDE IN DEGREES + MINUTES OF THE TIDAL STATION.
C*
C
      READ(MTD,1060) IHHA,IDDA,IMMA,IYYA,ICCA,IHHB,IDDB,IMMB,IYYB
     1,ICCB
1060  FORMAT(2X,10I2)
	IF(ICCA.EQ.0) ICCA=19
	IF(ICCB.EQ.0) ICCB=19
      READ(MTD,1111)KSTN,(NA(J),J=1,4),ITZONE,LAD,LAM,LOD,LOM
1111  FORMAT(5X,I4,1X,3A6,A4,A3,I3,I2,I3,I2)
C
C***********************************************************************
C*  UNLESS SPECIFIED OTHERWISE, A STATION LATITUDE OF 50 DEGREES IS
C*  ASSUMED FOR THE PURPOSE OF CALCULATING SATELLITE TO MAIN
C*  CONSTITUENT AMPLITUDE RATIOS.
C
      XLAT=LAD+ISIGN(LAM,LAD)/60.
      IF(ABS(XLAT).LT.5.) XLAT=SIGN(5.,XLAT)
      IF(IDDA)1080,1070,1080
1070  STOP
C
C***********************************************************************
C*  HERE THE NUMBER OF USEABLE OBSERVATIONS (NOBSU) + THE TIME OF THE
C*  MIDDLE OBSERVATION ARE FOUND.
C
1080  CALL GDAY(IDDA,IMMA,IYYA,ICCA,KD)
      KHA=KD*24+IHHA
      CALL GDAY(IDDB,IMMB,IYYB,ICCB,KD)
      KHB=KD*24+IHHB
      NOBS=KHB-KHA+1
      NOBSU=((NOBS-1)/2)*2+1
      KHM=KHA+NOBSU/2
      KD=KHM/24
      IHHM=KHM-24*KD
      CALL DMY(IDDM,IMMM,IYYM,ICCM,KD)
C
C***********************************************************************
C*  READ IN THE HOURLY CURRENT DATA TO BE ANALYSED. THE EAST/WEST
C*  COMPONENTS ARE READ FROM DEVICE IPUEW AND THE NORTH/SOUTH COMPONENTS
C*  FROM DEVICE IPUNS.
C
      CALL INPUT(IPUEW,X,ISTN,N,ICN,ICHK,OBSFAC)
      CALL INPUT(IPUNS,Y,ISTN,N,ICN,ICHK,OBSFAC)
C
C***********************************************************************
C*  CALCULATE V+U &amp; NODAL FACTORS FOR ALL CONSTITUENTS
C
      CALL SETVUF(KHM,DDUM,DUM,DUM,XLAT)
C
C***********************************************************************
C*  FIND USEABLE CONSTITUENT FREQS FU
C
      CALL UCON(NAME,FREQ,KMPR,M,NOBSU,NAMEU,FU,MU,RAY)
C
C***********************************************************************
C*  SOLVE FOR THE LEAST SQUARES COEFFICIENTS CX AND SX.
C
      IND=INDPR
      IF(IND.EQ.1.AND.NIN.GT.0) IND=0
      CALL SCFIT2(X,N,FU,MU,IND,CX,SX,ERCX,ERSX,GX,NX,AVX,SDX,RTX
     1,RAX,XP)
C
C***********************************************************************
C*  SOLVE FOR THE LEAST SQUARES FIT COEFFICIENTS CY AND SY.
C
      CALL SCFIT2(Y,N,FU,MU,IND,CY,SY,ERCY,ERSY,GY,NY,AVY,SDY,RTY
     1,RACY,YP)
C
C***********************************************************************
C*  PRINT PRELIMINARY RESULTS
C
      WRITE(LP,405)
405   FORMAT('1PRELIMINARY RESULTS' / ' -------------------' ,/)
      WRITE(LP,484) KSTN,(NA(L),L=1,4),LAD,LAM,LOD,LOM
      WRITE(LP,410) N,NX,NY
410   FORMAT('  NO. PTS=',I5,'   NO. VALID X,Y PTS=',2I6/)
      WRITE(LP,415) IHHA,IDDA,IMMA,IYYA,IHHM,IDDM,IMMM,IYYM,
     *              IHHB,IDDB,IMMB,IYYB
415   FORMAT(9H  START =,I6, 4H HRS, I3,1H/ ,I2,1H/ ,I2,
     *       9H    MID =,I6, 4H HRS, I3,1H/ ,I2,1H/ ,I2,
     *       9H    END =,I6, 4H HRS, I3,1H/ ,I2,1H/ ,I2, / )
      IF(NSTRP.GT.0) WRITE(LP,420) DELT,(LSTRP(L),L=1,NSTRP)
  420 FORMAT(' ORIGINAL DT =',F8.6,' HOURS',10X,'DATA FILTER =',5I3,/)
      IF(NSTRP.EQ.0) WRITE(LP,421)
  421 FORMAT(' DATA ASSUMED TO BE UNFILTERED',/)
      WRITE(LP,422) RAY
  422 FORMAT(' RAYLEIGH CRITERION PARAMETER =',F5.2,/)
      WRITE(LP,430)
430   FORMAT(5X,'CON',6X,'CYC/HR',9X,'CX   ERR',6X,'SX   ERR',6X,
     * 'CY   ERR',6X,'SY   ERR', /)
      WRITE(LP,450) (K,NAMEU(K),FU(K),CX(K),ERCX(K),SX(K),ERSX(K),
     *               CY(K),ERCY(K),SY(K),ERSY(K),K=1,MU)
450   FORMAT((1X,I2,2X,A5,F11.8,2X,4(F8.3,F6.3)))
      WRITE(LP,460) AVX,SDX,RTX,GX
460   FORMAT(/' AVX=',F7.3,'   SDX=',F6.3,'   RMS(RESID ER)=',F8.5,
     *'   MTX COND=',F6.4)
      WRITE(LP,470) AVY,SDY,RTY,GY
470   FORMAT(   ' AVY=',F7.3,'   SDY=',F6.3,'   RMS(RESID ER)=',F8.5,
     * '   MTX COND=',F6.4)
C
C***********************************************************************
C*  TITLE LINES FOR THE FINAL RESULTS
C
  480 FORMAT('1FINAL ANALYSIS RESULTS IN CURRENT ELLIPSE FORM')
  481 FORMAT(' ----------------------------------------------'/)
  482 FORMAT(/' NODAL MODULATION, BUT NO INFERENCE, CORRECTIONS HAVE BEE
     1N MADE')
  483 FORMAT(/' NODAL MODULATION AND INFERENCE CORRECTIONS HAVE BEEN MAD
     1E')
  484 FORMAT(' FOR STATION ',I4,', ',3A6,A4,',AT THE LOCATION ',I2,1X,I2
     1,', ',I3,1X,I2)
  485 FORMAT(' OVER THE PERIOD OF ',I2,'HR ',2(I2,'/'),I2,'  TO  ',I2,'H
     1R ',2(I2,'/'),I2)
  486 FORMAT(' GREENWICH PHASES ARE FOR TIME ZONE',2X,A3//)
  487 FORMAT('1ANALYSIS RESULTS IN CURRENT ELLIPSE FORM')
  488 FORMAT(' AMPLITUDES HAVE BEEN SCALED TO COMPENSATE FOR THE PRIOR A
     1PPLICATION OF MOVING AVERAGE FILTERS')
  489 FORMAT(' ----------------------------------------',/)
  490 FORMAT(' AMPLITUDES HAVE BEEN SCALED: ORIGINAL DT=',F7.5,' HR',4X,
     1'FILTERS =',5I3)
  495 FORMAT(/' AFTER INFERENCE, X RMS(RESID ER)=',F8.5,',  AND  Y RMS(R
     1ESID ER)=',F8.5)
  103 FORMAT(4X,'NAME',6X,'SPEED',7X,'MAJOR',3X,'MINOR',3X,'INC',
     14X,'G',6X,'G+',5X,'G-')
C
C***********************************************************************
C*  SCALE UP THE LEAST SQUARES FIT RESULTS TO COMPENSATE FOR PRE-
C*  FILTERING.
C
      CALL SCLUP(LSTRP,NSTRP,DELT,FU,CX,SX,CY,SY,MU,1)
C
C***********************************************************************
C*  CHANGE TO POLAR CO-ORDINATES
C
      DO 360 KU=1,MU
      T1=CX(KU)+SY(KU)
      T2=CY(KU)-SX(KU)
      AP(KU)=SQRT(T1*T1+T2*T2)/2.
      EPSP(KU)=ATAN2(T2,T1)/TWOPI
      T1=CX(KU)-SY(KU)
      T2=CY(KU)+SX(KU)
      AM(KU)=SQRT(T1*T1+T2*T2)/2.
      EPSM(KU)=ATAN2(T2,T1)/TWOPI
360   CONTINUE
C
C***********************************************************************
C*  PERFORM INFERENCE IF REQUIRED, CHANGE INTO ELLIPSE FORMAT, AND
C*  OUTPUT THESE RESULTS.
C
      NMAX=2
      IF(NIN.EQ.0) NMAX=1
      DO 5350 NOYES=1,NMAX
      ISQ=1
      IF(NOYES.EQ.NMAX) GO TO 491
      WRITE(LP,487)
c      WRITE(KP,487)
      WRITE(LP,489)
      GO TO 492
  491 WRITE(LP,480)
c      WRITE(KP,480)
      WRITE(LP,481)
  492 CONTINUE
      WRITE(LP,484) KSTN,(NA(L),L=1,4),LAD,LAM,LOD,LOM
      WRITE(LP,485) IHHA,IDDA,IMMA,IYYA,IHHB,IDDB,IMMB,IYYB
      IF(NOYES.EQ.1) GO TO 493
      WRITE(LP,483)
      GO TO 494
  493 WRITE(LP,482)
      WRITE(KP,484) KSTN,(NA(L),L=1,4),LAD,LAM,LOD,LOM
      WRITE(KP,485) IHHA,IDDA,IMMA,IYYA,IHHB,IDDB,IMMB,IYYB
      IF(NSTRP.GT.0) WRITE(KP,490) DELT,(LSTRP(L),L=1,NSTRP)
      WRITE(KP,486) ITZONE
      WRITE(KP,103)
  494 CONTINUE
      IF(NSTRP.GT.0) WRITE(LP,488)
      WRITE(LP,486) ITZONE
      WRITE(LP,103)
      MUIN=MU
      DO 5300 K=1,MU
      IF(NOYES.EQ.1) GO TO 5270
      CALL INFER(NAMEU,MU,NOBSU,NAMEU(K),AP(K),AM(K),EPSP(K),EPSM(K),NAM
     1IN,APIN,AMIN,EPSPIN,EPSMIN,FQIN,NIN)
      IF(NAMIN.EQ.KBLANK) GO TO 5270
      IF(INDPR.EQ.0) GO TO 500
      MUIN=MUIN+1
      ARGP=TWOPI*EPSPIN
      ARGM=TWOPI*EPSMIN
      CARGP=APIN*COS(ARGP)
      CARGM=AMIN*COS(ARGM)
      SARGP=APIN*SIN(ARGP)
      SARGM=AMIN*SIN(ARGM)
      CX(MUIN)=CARGP+CARGM
      SX(MUIN)=SARGM-SARGP
      CY(MUIN)=SARGP+SARGM
      SY(MUIN)=CARGP-CARGM
      FU(MUIN)=FQIN
      ARGP=TWOPI*EPSP(K)
      ARGM=TWOPI*EPSM(K)
      CARGP=AP(K)*COS(ARGP)
      SARGP=AP(K)*SIN(ARGP)
      CARGM=AM(K)*COS(ARGM)
      SARGM=AM(K)*SIN(ARGM)
      CX(K)=CARGP+CARGM
      SX(K)=SARGM-SARGP
      CY(K)=SARGP+SARGM
      SY(K)=CARGP-CARGM
  500 CONTINUE
      CALL VUF(KHM,NAMEU(K),VPUAN,FAN,XLAT)
      CALL VUF(KHM,NAMIN,VPUIN,FIN,XLAT)
      GPAN=DEGREE(-EPSP(K)+VPUAN)
      GMAN=DEGREE(EPSM(K)+VPUAN)
      GPIN=DEGREE(-EPSPIN+VPUIN)
      GMIN=DEGREE(EPSMIN+VPUIN)
      FINCA=DEGREE(EPSP(K)+EPSM(K))/2.
      FINCI=DEGREE(EPSPIN+EPSMIN)/2.
      GAN=GPAN+FINCA
      IF(GAN.GT.360.) GAN=GAN-360.
      GIN=GPIN+FINCI
      IF(GIN.GT.360.) GIN=GIN-360.
      AAM=AM(K)/FAN
      AAP=AP(K)/FAN
      AMIN=AMIN/FIN
      APIN=APIN/FIN
      FMAJA=AAP+AAM
      FMINA=AAP-AAM
      FMAJI=APIN+AMIN
      FMINI=APIN-AMIN
      NOUT=0
      IF(FU(K).GT.FQIN) GO TO 5260
5250  WRITE(LP,341) ISQ,NAMEU(K),FU(K),FMAJA,FMINA,FINCA,GAN,GPAN,GMAN
      if(noyes.eq.nmax)
     1WRITE(KP,341) ISQ,NAMEU(K),FU(K),FMAJA,FMINA,FINCA,GAN,GPAN,GMAN
341   FORMAT(I3,1X,A5,F11.8,2X,2F8.3,4F7.1)
      NOUT=NOUT+1
      ISQ=ISQ+1
      IF(NOUT.EQ.2) GO TO 5300
5260  WRITE(LP,342) ISQ,NAMIN,FQIN,FMAJI,FMINI,FINCI,GIN,GPIN,GMIN,NAMEU
     *(K)
      if(noyes.eq.nmax)
     1WRITE(KP,342) ISQ,NAMIN,FQIN,FMAJI,FMINI,FINCI,GIN,GPIN,GMIN,NAMEU
     *(K)
342   FORMAT(I3,1X,A5,F11.8,2X,2F8.3,4F7.1,' INF FR ',A5)
      NOUT=NOUT+1
      ISQ=ISQ+1
      IF(NOUT.EQ.2) GO TO 5300
      GO TO 5250
C
C***********************************************************************
C*  WHEN NO INFERENCE IS REQUIRED, POLAR COORDINATE RESULTS ARE CHANGED
C*  INTO ELLIPSE FORMAT AND OUTPUT HERE.
C
5270  CALL VUF(KHM,NAMEU(K),VPU,F,XLAT)
      AAP=AP(K)/F
      AAM=AM(K)/F
      FMAJ=AAP+AAM
      FMIN=AAP-AAM
      GP=DEGREE(-EPSP(K)+VPU)
      GM=DEGREE(EPSM(K)+VPU)
      FINC=DEGREE(EPSP(K)+EPSM(K))/2.
      G=GP+FINC
      IF(G.GT.360.) G=G-360.
      WRITE(LP,341) ISQ,NAMEU(K),FU(K),FMAJ,FMIN,FINC,G,GP,GM
      if(noyes.eq.nmax)
     1WRITE(KP,341) ISQ,NAMEU(K),FU(K),FMAJ,FMIN,FINC,G,GP,GM
      ISQ=ISQ+1
5300  CONTINUE
C
C***********************************************************************
C*  IF SO DESIRED, HOURLY NORTH/SOUTH AND EAST/WEST CURRENT COMPONENTS
C*  AS PREDICTED FROM THE POST-INFERENCE ANALYSIS RESULTS ARE
C*  CALCULATED HERE.
C
      IF(NOYES.EQ.1.OR.INDPR.EQ.0) GO TO 5350
      CALL SCLUP(LSTRP,NSTRP,DELT,FU,CX,SX,CY,SY,MUIN,-1)
      CALL SCFIT2(X,N,FU,MUIN,2,CX,SX,ERCX,ERSX,GX,NX,AVX,SDX,RTX,RAX,XP
     1)
      CALL SCFIT2(Y,N,FU,MUIN,2,CY,SY,ERCY,ERSY,GY,NY,AVY,SDY,RTY,RACY,Y
     1P)
      WRITE(LP,495) RAX,RACY
5350  CONTINUE
C
C***********************************************************************
C*  AND OUTPUT ON DEVICES KPNS AND KPEW RESPECTIVELY,
C*  IN THE SAME UNITS AND FORMAT AS THE ORIGINAL INPUT.
C
      IF(INDPR.EQ.0) GO TO 510
      CALL OUTPUT(XP,YP,N,KPNS,KPEW,OBSFAC,KSTN)
  510 CONTINUE
      STOP
      END
      SUBROUTINE SCLUP(LSTRP,NSTRP,DELT,SIG,CX,SX,CY,SY,M,IND)
C
C***********************************************************************
C*  SCALES UP RESULTS OF TIDAL STREAMS ANALYSIS WHEN DATA HAS BEEN
C*  PRE-FILTERED  AND RESPONSE OF THE HIGHER FREQUENCIES IS SOMEWHAT
C*  LESS THAN 100 PERCENT .   THE FILTER IS TAKEN TO BE ...
C*  A(LSTRP1)*A(LSTRP2)* ... *A(LSTRP(NSTRP)) / LSTRP1* ... LSTRP(NSTRP) .
C*  DELT IS THE SPACING IN HOURS OF THE RAW DATA .
C*  SIG(1...M) IS THE ARRAY OF CONSTITUENT FREQS IN CYCLES PER HOUR .
C*  CX,SX,CY,SY(1...M) ARE THE ARRAYS OF CONSTITS TO BE SCALED UP .
C*  FOR NORMAL USE SET IND=1. IF IND=-1 THE SCALING IS REVERSED.
C*  APRIL 1973   SEE ANALYSIS OF TIDES BY G GODIN   PAGE 62.
C
      DIMENSION LSTRP(10),CX(100),SX(100),CY(100),SY(100),SIG(100)
      IF(NSTRP.EQ.0) RETURN
      PI=3.1415926535
      DO 130 K=1,M
      IF(SIG(K).LE. 1.E-8) GO TO 130
      ANG=PI*DELT*SIG(K)
      DEN=SIN(ANG)
      DO 100 I=1,NSTRP
      FACTR=SIN(LSTRP(I)*ANG)/(LSTRP(I)*DEN)
      IF(IND.EQ.-1) FACTR=1.0/FACTR
      CX(K)=CX(K)/FACTR
      SX(K)=SX(K)/FACTR
      CY(K)=CY(K)/FACTR
      SY(K)=SY(K)/FACTR
100   CONTINUE
130   CONTINUE
      RETURN
      END
      SUBROUTINE OUTPUT(XP,YP,N,KPNS,KPEW,OBSFAC,KSTN)
      DIMENSION XP(9000),YP(9000),MONTH(12),ICEW(24),ICNS(24)
      COMMON IHS,IDS,IMS,IYS,ICS,IHE,IDE,IME,IYE,ICE,KH1
      DATA MONTH/31,28,31,30,31,30,31,31,30,31,30,31/
C
C***********************************************************************
C*  THIS SUBROUTINE WRITES THE PREDICTED HOURLY NORTH/SOUTH, YP, AND
C*  EAST/WEST, XP, CURRENT COMPONENTS ONTO FILE REFERENCE NUMBERS KPNS
C*  AND KPEW RESPECTIVELY. IN ORDER THAT THE VALUES WILL BE COMPARIBLE
C*  TO THOSE ORIGINALLY INPUT FOR ANALYSIS, THEY ARE DIVIDED BY OBSFAC
C*  AND ROUNDED TO INTEGERS BEFORE BEING OUTPUT IN THE SAME FORMAT.
C*  PREDICTIONS ARE SPECIFIED FOR THE DESIRED ANALYSIS PERIOD ONLY,
C*  INCLUDING INTERVALS WHERE THERE WERE GAPS IN THE ORIGINAL RECORD.
C*  VALUES OUTSIDE THIS PERIOD ARE SHOWN AS 99999.
C*
C***********************************************************************
C*  IMPORTANT: CHECK THAT FOR YOUR COMPUTER INSTALLATION, INT HAS THE
C*             FOLLOWING MEANING.
C*                 INT(X) = SIGN(X)*N  WHERE N IS THE LARGEST INTEGER
C*                          LESS THAN OR EQUAL TO ABS(X).
C*             IF IT DOES NOT, THEN A STATEMENT FUNCTION THAT PERFORMS
C*             THIS OPERATION WILL HAVE TO BE DEFINED.
C***********************************************************************
C*
C*  INITIALIZATIONS
C
      K99=99999
      MODC=ICS-4*(ICS/4)
      IF(IYS.EQ.0.AND.MODC.EQ.0) MONTH(2)=29
      MODY=IYS-4*(IYS/4)
      IF(IYS.NE.0.AND.MODY.EQ.0) MONTH(2)=29
      DO 18 J=1,N
      XX=XP(J)/OBSFAC
      YY=YP(J)/OBSFAC
      XP(J)=XX+SIGN(0.5,XX)
   18 YP(J)=YY+SIGN(0.5,YY)
      ID=IDS
      IM=IMS
      IY=IYS
      IC=ICS
C
C***********************************************************************
C*  OUTPUT THE FIRST DAYS RESULTS
C
      DO 19 J=1,24
      ICEW(J)=K99
   19 ICNS(J)=K99
      K=0
      DO 20 J=IHS,24
      K=K+1
      ICEW(J)=INT(XP(K))
   20 ICNS(J)=INT(YP(K))
   21 FORMAT('1',2X,I4,4X,I2,1X,3I2,12I5/'2',2X,I4,4X,I2,1X,3I2,12I5)
      WRITE(KPNS,21) KSTN,IC,ID,IM,IY,(ICNS(L),L=1,12),KSTN,IC,ID,IM
     1,IY,(ICNS(L),L=13,24)
      WRITE(KPEW,21) KSTN,IC,ID,IM,IY,(ICEW(L),L=1,12),KSTN,IC,ID,IM
     1,IY,(ICEW(L),L=13,24)
C
C***********************************************************************
C*  OUTPUT THE REMAINING DAYS HERE
C
      NRHR=N-(24-IHS+1)
      NDAY=NRHR/24
      IF(24*NDAY.NE.NRHR) NDAY=NDAY+1
      DO 27 J=1,NDAY
      DO 28 I=1,24
      K=K+1
      IF(K.GT.N) GO TO 30
      ICEW(I)=INT(XP(K))
   28 ICNS(I)=INT(YP(K))
      GO TO 33
   30 DO 32 L=I,24
      ICEW(L)=K99
   32 ICNS(L)=K99
   33 CONTINUE
      ID=ID+1
      IF(ID.LE.MONTH(IM)) GO TO 29
      ID=1
      IM=IM+1
      IF(IM.LE.12) GO TO 29
      IM=1
      IY=IY+1
	IF(IY.EQ.100) THEN
	IY=0
	IC=IC+1
	MOD=IC-(IC/4)*4
	IF(MOD.EQ.0) THEN
	MONTH(2)=29
	ELSE
	MONTH(2)=28
	END IF
	GO TO 41
	END IF
      MOD=IY-4*(IY/4)
      IF(IY.NE.0.AND.MOD.EQ.0) GO TO 40
      MONTH(2)=28
      GO TO 41
   40 MONTH(2)=29
   41 CONTINUE
   29 WRITE(KPNS,21) KSTN,IC,ID,IM,IY,(ICNS(L),L=1,12),KSTN,IC,ID,IM
     1,IY,(ICNS(L),L=13,24)
   27 WRITE(KPEW,21) KSTN,IC,ID,IM,IY,(ICEW(L),L=1,12),KSTN,IC,ID,IM
     1,IY,(ICEW(L),L=13,24)
      RETURN
      END
      SUBROUTINE UCON(NAME,F,KMPR,M,N,NAMEU,FU,MU,RAY)
C
C***********************************************************************
C*    GIVEN A LIST OF M POSSIBLE CONSTITUENTS, THE RAYLEIGH CRITERION IS
C*    USED TO DETERMINE MU USEABLE CONSTITUENTS. NAME(K),F(K),KMPR(K)
C*    K=1...M ARE THE 5 CHAR NAME,FREQ IN CYCLES PER TIME INCREMENT,AND
C*    COMPARISON NAME OF THE INPUT CONSTITS.  NAMEU(K) AND FU(K)  K=1..
C*    .MU ARE THE USEABLE CONSTITS. N IS THE NO. PTS IN THE DATA SERIES.
C*    RAY IS THE RAYLEIGH CRITERION PARAMETER,  UNITY OR PERHAPS LESS.
C*    FOR PROG. G10620   OCEANOGRAPHY/EMR   JUNE/70
C*
      character*5 NAME,NAMEU,KMPR,KBL
      DIMENSION NAME(150),F(150),KMPR(150),NAMEU(100),FU(100)
      DATA KBL/'     '/
      LP=6
      MU=0
      DO 50 K=1,M
      IF(KMPR(K).EQ.KBL) GO TO 50
      DO 51 L=1,M
      IF(NAME(L).EQ.KMPR(K)) GO TO 52
   51 CONTINUE
      WRITE(LP,53) KMPR(K)
   53 FORMAT(1X,'CANNOT FIND THIS CONSTITUENT FOR RAYLEIGH COMPARISON
     1PURPOSES',2X,A5)
      STOP
   52 IF(ABS(F(K)-F(L))*N.LT.RAY) GO TO 50
      MU=MU+1
      FU(MU)=F(K)
      NAMEU(MU)=NAME(K)
50    CONTINUE
      IF(MU.EQ.0) GO TO 150
      IF(MU.EQ.1) RETURN
C
C***********************************************************************
C*    IF TWO NEIGHBOURING CHOSEN CONSTITUENTS VIOLATE THE RAYLEIGH
C*    CRITERION A WARNING IS PRINTED.
C
      DO 100 K=2,MU
      IF(ABS(FU(K)-FU(K-1))*N .GE. RAY) GO TO 100
      WRITE(LP,60) NAMEU(K)
   60 FORMAT(/' RAY VIOLATION ',A5,/)
100   CONTINUE
      RETURN
150   WRITE(LP,160)
160   FORMAT(/ , ' NO USEABLE CONSTITUENTS , STOP',/)
      STOP
      END
      SUBROUTINE VUF (KH,KONX,VUX,FX,XLAT)
C
C***********************************************************************
C*  THIS SUBROUTINE CALCULATES V (ASTRONOMICAL PHASE ARGUMENT), U AND F
C*  (NODAL MODULATION PHASE AND AMPLITUDE CORRECTIONS) FOR ALL CONSTITU-
C*  ENTS.
c*
C*	This October 1992 version also recalculates the constituent
c	frequencies for the middle of the analysis period
C
      character*5 KON,KBLANK,KONCO,KONX,name
	real*8 d1,h,pp,s,p,enp,dh,dpp,ds,dp,dnp,hh,tau,dtau
      DIMENSION KON(150),VU(150),F(150),NJ(150),II(50),JJ(50),KK(50),
     1 LL(50),MM(50),NN(50),SEMI(50),name(150),freq(150)
      DIMENSION EE(180),LDEL(180),MDEL(180),NDEL(180),IR(180),PH(180)
      DIMENSION KONCO(320),COEF(320),indx(150)
      	common /const/name,freq,mtot
	DATA KBLANK/'     '/
C
C***********************************************************************
C*  THE DIMENSION OF KON, VU, F, AND NJ SHOULD BE AT LEAST EQUAL TO THE
C*  TOTAL NUMBER OF POSSIBLE CONSTITUENTS (PRESENTLY 146), THE DIMENSION
C*  OF II, JJ, KK, LL, MM, NN AND SEMI SHOULD BE AT LEAST EQUAL TO THE
C*  NUMBER OF MAIN CONSTITUENTS (PRESENTLY 45), THE DIMENSION OF EE,
C*  LDEL, MDEL, NDEL, IR, AND PH SHOULD BE AT LEAST EQUAL TO THE TOTAL
C*  NUMBER OF SATELLITES TO ALL THE MAIN CONSTITUENTS PLUS THE NUMBER
C*  OF CONSTITUENTS WITH NO SATELLITES (PRESENTLY 162+8),
C*  AND THE DIMENSION OF KONCO, AND COEFF SHOULD BE AT LEAST EQUAL TO
C*  THE SUM FOR ALL SHALLOW WATER CONSTITUENTS OF THE NUMBER OF MAIN
C*  CONSTITUENTS FROM WHICH EACH IS DERIVED (PRESENTLY 251).
C***********************************************************************
C* GIVEN CONSTITUENT KONX , THE NODAL CORRECTIONS V+U AND F ARE RETURNED
C
      DO 20 K=1,NTOTAL
      IF(KON(K).eq.KONX) go to 40
20    CONTINUE
      WRITE(LP,30)KONX
   30 FORMAT(' VUF STOP.',A5)
      STOP
40    VUX=VU(K)
      FX=F(K)
      RETURN
C
C***********************************************************************
C*  THE ASTRONOMICAL ARGUMENTS AND THEIR RATES OF CHANGE,
C*  S0,H0,P0,ENP0,PP0,DS,DH,DP,DNP,DPP,  ARE READ FROM TWO RECORDS IN
C*  THE FORMAT(5F13.10):
C*     S0  = MEAN LONGITUDE OF THE MOON (CYCLES) AT 000 ET 1/1/1976.
C*     H0  = MEAN LONGITUDE OF THE SUN.
C*     P0  = MEAN LONGITUDE OF THE LUNAR PERIGEE.
C*     ENP0= NEGATIVE OF THE MEAN LONGITUDE OF THE ASCENDING NODE.
C*     PP0 = MEAN LONGITUDE OF THE SOLAR PERIGEE (PERIHELION).
C*     DS,DH,DP,DNP,DPP ARE THEIR RESPECTIVE RATES OF CHANGE OVER A 365
C*     DAY PERIOD AS OF 000 ET 1/1/1976.
C
      ENTRY OPNVUF(KH,KONX,VUX,FX,XLAT)
      KR=8
      LP=6
      PI=3.1415926536
      TWOPI=2.*PI
c	These values are no longer used though they are still
c	read in. More accurate polynomial approximations are 
c	now employed.
      READ(KR,50)S0,H0,P0,ENP0,PP0,DS,DH,DP,DNP,DPP
 50   FORMAT(5F13.10)
C
C***********************************************************************
C*  HERE THE MAIN CONSTITUENTS AND THEIR DOODSON NUMBERS ARE READ IN
C*  FORMAT (6X,A5,1X,6I3,F5.2,I4). THE VALUES ARE RESPECTIVELY
C*     KON    = CONSTITUENT NAME
C*  II,JJ,KK,LL,MM,NN = THE SIX DOODSON NUMBERS
C*     SEMI   = PHASE CORRECTION
C*     NJ     = THE NUMBER OF SATELLITES FOR THIS CONSTITUENT.
C*  THE END OF ALL MAIN CONSTITUENTS IS DENOTED BY A BLANK CARD.
C
      JBASE=0
      DO 90 K=1,1000
      READ(KR,60)KON(K),II(K),JJ(K),KK(K),LL(K),MM(K),NN(K),SEMI(K),
     2 NJ(K)
   60 FORMAT(6X,A5,1X,6I3,F5.2,I4)
      IF(KON(K).eq.KBLANK) go to 100
70    J1=JBASE+1
      IF(NJ(K).GE.1) GO TO 75
      NJ(K)=1
      JL=J1
      PH(J1)=0.
      EE(J1)=0.
      LDEL(J1)=0
      MDEL(J1)=0
      NDEL(J1)=0
      IR(J1)=0
      GO TO 90
   75 JL=JBASE+NJ(K)
C
C***********************************************************************
C*  IF NJ&gt;0, INFORMATION ON THE SATELLITE CONSTITUENTS IS READ , THREE
C*  SATELLITES PER CARD, IN THE FORMAT (11X,3(3I3,F4.2,F7.4,1X,I1,1X)).
C*  FOR EACH SATELLITE THE VALUES READ ARE
C*     LDEL,MDEL,NDEL = THE CHANGES IN THE LAST THREE DOODSON NUMBERS
C*                      FROM THOSE OF THE MAIN CONSTITUENT.
C*     PH     = THE PHASE CORRECTION
C*     EE     = THE AMPLITUDE RATIO OF THE SATELLITE TIDAL POTENTIAL TO
C*              THAT OF THE MAIN CONSTITUENT.
C*     IR     = 1 IF THE AMPLITUDE RATIO HAS TO BE MULTIPLIED BY THE
C*                LATITUDE CORRECTION FACTOR FOR DIURNAL CONSTITUENTS
C*              2 IF THE AMPLITUDE RATIO HAS TO BE MULTIPLIED BY THE
C*                LATITUDE CORRECTION FACTOR FOR SEMI-DIURNAL CONSTI-
C*                TUENTS.
C*              OTHERWISE IF NO CORRECTION IS REQUIRED TO THE AMPLITUDE
C*                RATIO.
C
      READ(KR,80)(LDEL(J),MDEL(J),NDEL(J),PH(J),EE(J),IR(J),J=J1,JL)
   80 FORMAT((11X,3(3I3,F4.2,F7.4,1X,I1,1X)))
90    JBASE=JL
100   NTIDAL=K-1
C
C***********************************************************************
C*  THE SHALLOW WATER CONSTITUENTS AND THE MAIN CONSTITUENTS FROM WHICH
C*  THEY ARE DERIVED ARE READ IN HERE WITH THE FORMAT
C*  (6X,A5,I1,2X,4(F5.2,A5,5X)). THE VALUES ARE RESPECTIVELY
C*     KON    = NAME  OF THE SHALLOW WATER CONSTITUENT
C*     NJ     = NUMBER OF MAIN CONSTITUENTS FROM WHICH IT IS DERIVED.
C*     COEF,KONCO = COMBINATION NUMBER AND NAME OF THESE MAIN
C*                  CONSTITUENTS.
C*  THE END OF THESE CONSTITUENTS IS DENOTED BY A BLANK CARD.
C
      JBASE=0
      K1=NTIDAL+1
      DO 160 K=K1,1000
      J1=JBASE+1
      J4=J1+3
      READ(KR,130)KON(K),NJ(K),(COEF(J),KONCO(J),J=J1,J4)
  130 FORMAT(6X,A5,I1,2X,4(F5.2,A5,5X))
      IF(KON(K).eq.KBLANK) go to 170
160   JBASE=JBASE+NJ(K)
170   NTOTAL=K-1
      RETURN
C
C***********************************************************************
C*  NTIDAL IS THE NUMBER OF MAIN CONSTITUENTS
C*  NTOTAL IS THE NUMBER OF CONSTITUENTS (MAIN + SHALLOW WATER)
C*  FOR  THE GIVEN TIME KH, THE TABLE OF F AND V+U VALUES IS
C*  CALCULATED FOR ALL THE CONSTITUENTS.
C*     F IS THE NODAL MODULATION ADJUSTMENT FACTOR FOR AMPLITUDE
C*     U IS THE NODAL MODULATION ADJUSTMENT FACTOR FOR PHASE
C*     V IS THE ASTRONOMICAL ARGUMENT ADJUSTMENT FOR PHASE.
C
      ENTRY SETVUF(KH,KONX,VUX,FX,XLAT)
      SLAT=SIN(PI*XLAT/180.)
c      CALL GDAY(1,1,76,19,KD)
c      YEARS=(KH/24.D0-KD)/365.00D0
C
C***********************************************************************
C*  THE ASTRONOMICAL ARGUMENTS ARE CALCULATED BY LINEAR APPROXIMATION
C*  AT THE MID POINT OF THE ANALYSIS PERIOD.
C
c      S=S0+YEARS*DS
c      H=H0+YEARS*DH
c      P=P0+YEARS*DP
c      ENP=ENP0+YEARS*DNP
c      PP=PP0+YEARS*DPP
c	day number measured from January 0.5 1900 (i.e.,
c	1200 UT December 31, 1899
	d1=kh/24.d0
	call gday(31,12,99,18,kd0)
	d1=d1-dfloat(kd0)-0.5d0
	call astr(d1,h,pp,s,p,enp,dh,dpp,ds,dp,dnp)
      INT24=24
      INTDYS=KH/INT24
      HH=dfloat(KH-INTDYS*INT24)
      TAU=HH/24.D0+H-S
	dtau=365.d0+dh-ds
C
C***********************************************************************
C*  ONLY THE FRACTIONAL PART OF A SOLAR DAY NEED BE RETAINED FOR COMPU-
C*  TING THE LUNAR TIME TAU.
C
      JBASE=0
      DO 210 K=1,NTIDAL
	do 209 l=1,mtot
	if(kon(k).eq.name(l)) then
      FREQ(l)=(II(K)*DTAU+JJ(K)*DS+KK(K)*DH+LL(K)*DP+MM(K)*DNP+
     1NN(K)*DPP)/(365.*24.)
	indx(k)=l
	end if
209	continue
      VDBL=II(K)*TAU+JJ(K)*S+KK(K)*H+LL(K)*P+MM(K)*ENP+NN(K)*PP+SEMI(K)
      IV=VDBL
      IV=(IV/2)*2
      V=VDBL-IV
      J1=JBASE+1
      JL=JBASE+NJ(K)
      SUMC=1.
      SUMS=0.
      DO 200 J=J1,JL
C
C***********************************************************************
C*  HERE THE SATELLITE AMPLITUDE RATIO ADJUSTMENT FOR LATITUDE IS MADE
C
      RR=EE(J)
      L=IR(J)+1
      GO TO (901,902,903),L
  902 RR=EE(J)*0.36309*(1.-5.*SLAT*SLAT)/SLAT
      GO TO 901
  903 RR=EE(J)*2.59808*SLAT
  901 CONTINUE
      UUDBL=LDEL(J)*P+MDEL(J)*ENP+NDEL(J)*PP+PH(J)
      IUU=UUDBL
      UU=UUDBL-IUU
      SUMC=SUMC+RR*COS(UU*TWOPI)
      SUMS=SUMS+RR*SIN(UU*TWOPI)
  200 CONTINUE
      F(K)=SQRT(SUMC*SUMC+SUMS*SUMS)
      VU(K)=V+ATAN2(SUMS,SUMC)/TWOPI
210   JBASE=JL
C
C***********************************************************************
C*  HERE F AND V+U OF THE SHALLOW WATER CONSTITUENTS ARE COMPUTED FROM
C*  THE VALUES OF THE MAIN CONSTITUENT FROM WHICH THEY ARE DERIVED.
C
      JBASE=0
      K1=NTIDAL+1
      IF(K1.GT.NTOTAL) RETURN
      DO 270 K=K1,NTOTAL
      F(K)=1.0
      VU(K)=0.0
	iflag=0
	do 269 lk=1,mtot
	if(kon(k).eq.name(lk)) then
      FREQ(lk)=0.
	iflag=1
	go to 268
	end if
269	continue
268   J1=JBASE+1
      JL=JBASE+NJ(K)
      DO 260 J=J1,JL
      KM1=K-1
      DO 240 L=1,KM1
      IF(KON(L).eq.KONCO(J)) go to 250
240   CONTINUE
      WRITE(LP,241)KONCO(J)
  241 FORMAT('   SETVUF STOP.',A5)
      STOP
250   F(K)=F(K)*F(L)**ABS(COEF(J))
      VU(K)=VU(K)+COEF(J)*VU(L)
      if(iflag.eq.1) FREQ(lk)=FREQ(lk)+COEF(J)*FREQ(indx(L))
260	continue
270   JBASE=JL
      RETURN
      END
      SUBROUTINE INPUT(IPU,Z,ISTN,N,ICN,ICHK,OBSF)
C
C***********************************************************************
C*   INPUT READS IN HOURLY OBSERVATIONS AND SETS UP DATA ARRAY Z. GAPS
C*   IN THE DATA ARE SET TO 1.E35. THE PROCEDURE USED IS SIMILAR TO
C*   THAT OF THE ORIGINAL FLEXIBLE ANALYSIS PROGRAM.
C*
C* INPUTS
C*       FORMAL PARAMETERS -- IPU  - INPUT UNIT NUMBER
C*                         -- ICHK - FLAG TO DENOTE WHETHER OR NOT
C*                                   CHECKING OF THE HOURLY DATA
C*                                   CARDS FOR ERRORS IS DESIRED:
C*                                   0         = CHECKING
C*                                   OTHERWISE = NO CHECKING
C*                         -- OBSF - THE FACTOR THAT WILL MULTIPLY THE
C*                                   INTEGER HOURLY OBSERVATIONS IN
C*                                   ORDER TO PRODUCE THE DESIRED UNITS
C*                                   FOR THE FINAL CURRENT ELLIPSE MAJOR
C*                                   AND MINOR SEMI-AXIS LENGTHS.
C*               IN COMMON -- IHS,IDS,IMS,IYS,ICS - STARTING TIME OF DATA
C*                         -- IHE,IDE,IME,IYE,ICE - ENDING TIME
C*                         -- KH1 - TIME COUNT FOR STARTING DATUM
C*                                   ( USING SUBROUTINE GDAY)
C* OUTPUTS
C*       FORMAL PARAMETERS -- ISTN - STATION NUMBER
C*                         -- N    - NUMBER OF DATA INCLUDING GAPS
C*                         -- ICN  - 'N' IF THERE ARE GAPS IN DATA
C*                                 - BLANK OTHERWISE.
C*                         -- Z    - THE DATA ARRAY
C*
C*                                          J. MINAKER  DEC 1973.
C********************************************************************
C
      character*5 KARD,KBLANK,K9999
      character*60 kard1
      character*1 icn,icnn,k1b
      DIMENSION KARD(12),IHT(12)
      DIMENSION Z(9000)
      COMMON IHS,IDS,IMS,IYS,ICS,IHE,IDE,IME,IYE,ICE,KH1
      equivalence (kard(1),kard1)
      DATA KBLANK/'     '/,K9999/'99999'/,ICNN/'N'/,K1B/' '/
      I=0
      N=0
      LP=6
      ICN=K1B
C
C***********************************************************************
C*  I1000 IS USED FOR COMPARISON OF HOURLY READINGS.
C*  YOU MAY WISH TO ALTER ITS VALUE TO SUIT YOUR OWN PURPOSES.
C
      I1000=10000
C
C***********************************************************************
C*  THE HOURLY OBSERVATION CARDS CONTAIN THE FOLLOWING INFORMATION
C*     KOLI,JSTN,IC,ID,IM,IY,(KARD(I),I=1,12)   IN THE FORMAT
C*      (I1,1X,I5,4X,I2,1X,3I2,12A5).
C*     KOLI   = 1 OR 2 INDICATES WHETHER THIS SPECIFIC CARD IS THE FIRST
C*                     SECOND ONE FOR THAT DAY.
C*              OTHERWISE  INDICATES A NON DATA CARD WHICH IS IGNORED.
C*     JSTN   = TIDAL STATION NUMBER.
C*     ID,IM,IY,IC = DAY, MONTH, YEAR CENTURY OF THE CURRENTS ON THIS CARD.
C*     KARD   = THE HOURLY READINGS IN INTEGER FORM. THE FINAL CONSTI-
C*              TUENT AMPLITUDES ARE IN UNITS OBSF TIMES THOSE FOR THE
C*              HOURLY READINGS. MISSING VALUES SHOULD BE SPECIFIED AS A
C*              BLANK FIELD OR 99999.
C*     WHEN KOLI=1 THE FIRST HOURLY READING ON THE DATA CARD IS AT 0100
C*     HR AND WHEN KOLI=2, IT IS AT 1300 HR.
C***********************************************************************
C
C  READ UNTIL STARTING DATE IS FOUND
C
10    READ(IPU,200,END=1) KOLI,JSTN,IC,ID,IM,IY,KARD
	IF(IC.EQ.0) IC=19
  200 FORMAT(I1,1X,I5,4XI2,1X,3I2,12A5)
      IF((KOLI-1)*(KOLI-2)) 10,9,10
    9 IF(IY.NE.IYS) GO TO 10
      IF(IC.NE.ICS) GO TO 10
      IF(IM.NE.IMS) GO TO 10
      IF(ID.NE.IDS) GO TO 10
      L=IHS-12*(KOLI-1)-1
      IF(L.GE.12) GO TO 10
      ISTN=JSTN
       DO 11 K=1,12
      IF(KARD(K).EQ.KBLANK) KARD(K)=K9999
   11 CONTINUE
C
C***********************************************************************
C     INTERNAL READ TO SWITCH VARIABLE TYPE
C
       read(kard1,111,err=115) (iht(k),k=1,12)
  111 FORMAT(12I5)
      GO TO 112
115   WRITE(6,113) KARD
  113 FORMAT('  decode didnot work; kard=',
     12X,12A5)
      STOP
  112 CONTINUE
      IHTP=IHT(L+1)
      KHP=KH1-L
C
C***********************************************************************
C*  STOP WHEN THE FINAL DATE IS FOUND.
C
   30 IF(IY.LT.IYE) GO TO 12
      IF(IC.LT.ICE) GO TO 12
      IF(IM.LT.IME) GO TO 12
      IF(ID.LT.IDE) GO TO 12
      IF((KOLI-1)*12 + L .LT. IHE) GO TO 12
      GO TO 13
   12 IF(L.NE.12) GO TO 14
15    READ(IPU,200,END=1) KOLI,JSTN,IC,ID,IM,IY,KARD
	IF(IC.EQ.0) IC=19
C
C***********************************************************************
C*  IF ICHK=0 SEVERAL ERROR CHECKS ARE MADE ON THE DATA INPUT. THESE
C*  INCLUDE
C*   A) COMPARISON OF THE STATION NUMBER READ ON EACH CARD WITH THE
C*      STATION NUMBER OF THE FIRST CARD
C*   B) CHECKING THE DAY, MONTH, YEAR ON EACH CARD BY INSURING THAT
C*      THE CUMULATIVE HOUR NUMBER FOR THE FIRST READING ON EACH CARD
C*      DIFFERS FROM THAT OF THE PREVIOUS CARD BY EXACTLY 12 HOURS.
C*   C) COMPARISON OF SUCCESSIVE HOURLY READINGS TO INSURE THAT THEIR
C*      DIFFERENCE IS NOT LARGER THAN I1000
C*
      IF(ICHK.EQ.0.AND.JSTN.NE.ISTN) GO TO 18
      IF((KOLI-1)*(KOLI-2)) 15,16,15
   16 DO 17 K=1,12
      IF(KARD(K).EQ.KBLANK) KARD(K)=K9999
17    CONTINUE
      read(kard1,111,err=116) (iht(k),k=1,12)
      go to 114
116   WRITE(6,113) KARD
      STOP
  114 CONTINUE
      IF(ICHK.NE.0) GO TO 22
      CALL GDAY(ID,IM,IY,IC,KD)
      KH=KD*24+12*(KOLI-1)+1
C
C***********************************************************************
C*  KHP IS THE CONSECUTIVE HOUR NUMBER (CALCULATED IN SUBROUTINE GDAY)
C*  OF THE FIRST HEIGHT ON THE PREVIOUS CARD
C*  KH IS THE CONSECUTIVE HOUR NUMBER OF THE FIRST HEIGHT ON THE PRESENT
C*  CARD.
C*  A CHECK IS MADE TO INSURE THAT KH-KHP=12.
C
      IF(KH-KHP-12) 18,19,18
18    WRITE(LP,300) KOLI,JSTN,ID,IM,IY,IC,KARD
  300 FORMAT(' THIS CARD IN ERROR. ',10X,I1,I5,3X,4I2,12A6)
      STOP
   19 KHP=KH
   22 L=0
   14 L=L+1
      IF(IHT(L).EQ.99999) GO TO 20
      IF(IHTP.EQ.99999) GO TO 21
      IF(ICHK.NE.0) GO TO 21
C
C***********************************************************************
C*  EVERY HEIGHT IS COMPARED TO IHTP TO INSURE THAT THE DIFFERENCE DOES
C*  NOT EXCEED I1000.  IN THIS CASE IHTP IS SET EQUAL TO THE PREVIOUS
C*  HEIGHT.
C
      IF(IABS(IHT(L)-IHTP)-I1000) 21,21,18
   21 I=I+1
      Z(I)=IHT(L)*OBSF
      IHTP=IHT(L)
      GO TO 30
   20 I=I+1
      Z(I)=1.E35
      IHTP=IHT(L)
      ICN=ICNN
      GO TO 30
   13 N=I
      RETURN
    1 CONTINUE
      WRITE(LP,301) ISTN
  301 FORMAT(' PERIOD OF DATA TO BE ANALYZED FOR',I5,' WAS NOT FOUND')
      STOP
      END
      SUBROUTINE INFER(KON,M,N,KONA,APAN,AMAN,EPSPAN,EPSMAN,KONI,APIN,AM
     1IN,EPSPIN,EPSMIN,SIGI,NIN)
C
C***********************************************************************
C*  THIS SUBROUTINE INFERS THE POSITIVE AND NEGATIVE AMPLITUDES OF THE
C*  ROTATING CURRENT VECTORS, AND THE POSITIVE AND NEGATIVE GREENWICH
C*  PHASES, FOR A CONSTITUENT NOT INCLUDED IN THE ANALYSIS, FROM ONE
C*  THAT WAS.  APPROPRIATE ADJUSTMENTS ARE MADE TO THESE PARAMETERS
C*  OF THE CONSTITUENT USED FOR THE INFERENCE.
C*     KONAN, SIGAN ARE THE NAME AND FREQUENCY OF A CONSTITUENT TO BE
C*                  USED FOR INFERENCE.
C*     KONIN, SIGIN ARE THE NAME AND FREQUENCY OF A CONSTITUENT TO BE
C*                  INFERRED FROM KONAN.
C*     RPL, RMIN ARE THE RESPECTIVE RATIOS OF KONIN TO KONAN FOR THE
C*               POSITIVE AND NEGATIVE CURRENT AMPLITUDE COMPONENTS.
C*               THE POSITIVE AMPLITUDE COMPONENT IS 0.5*( MAJOR SEMI-
C*               AXIS LENGTH + MINOR SEMI-AXIS LENGTH), AND THE NEGATIVE
C*               AMPLITUDE COMPONENT IS 0.5*(MAJOR SEMI-AXIS LENGTH -
C*               MINOR SEMI-AXIS LENGTH).
C*     ZETAP, ZETAM ARE THE RESPECTIVE POSITIVE AND NEGATIVE GREENWICH
C*                  PHASES FOR KONAN, MINUS THOSE FOR KONIN.
C*  KONAN,SIGAN,KONIN,SIGIN,RPL,RMIN,ZETAP,ZETAM ARE READ FROM DEVICE
C*  MTD WITH THE FORMAT (2(2X,A5,F13.10),4F10.3).  THEIR END IS DENOTED
C*  BY A BLANK CARD.
C*
C*  THE PREVIOUS METHOD OF INFERENCE ASSUMED THAT RPL=RMIN AND
C*  ZETAP=ZETAM. THIS ONE WILL ALLOW MORE FLEXIBILITY.
C*
      character*5 KONAN,KONIN,KBLANK,KON,KONI,KONA
      DIMENSION KON(150),KONAN(10),KONIN(10),SIGAN(10),SIGIN(10),RPL(10)
     1,RMIN(10),ZETAP(10),ZETAM(10)
      DATA KBLANK/'     '/
C
C***********************************************************************
C*  TEST FOR INFERENCE
C*  IF A CONSTITUENT SPECIFIED FOR INFERENCE IS INCLUDED DIRECTLY IN
C*  THE LEAST SQUARES FIT ANALYSIS, THEN THE INFERENCE IS IGNORED.
C
      IF(NIN.EQ.0) GO TO 50
      DO 30 L=1,NIN
      IF(KONA.ne.KONAN(L)) go to 30
   10 DO 20 KK=1,M
      IF(KONIN(L).eq.KON(KK)) go to 30
   20 CONTINUE
      GO TO 40
   30 CONTINUE
   50 KONI=KBLANK
      RETURN
C
C***********************************************************************
C*  PERFORM INFERENCE
C
   40 KONI=KONIN(L)
      SIGI=SIGIN(L)
      ZETAPC=ZETAP(L)/360.
      ZETAMC=ZETAM(L)/360.
      CALL VUF(KH,KONAN(L),VUAN,FAN,XLAT)
      CALL VUF(KH,KONIN(L),VUIN,FIN,XLAT)
      SIGDIF=SIGIN(L)-SIGAN(L)
      ARG=PI*N*SIGDIF
      FACTOR=SIN(ARG)/ARG
      ARG1=(VUIN-VUAN+ZETAPC)*TWOPI
      ARG2=(VUAN-VUIN-ZETAMC)*TWOPI
      TERM1=(FIN/FAN)*FACTOR
      TPLR=1.0+RPL(L)*TERM1*COS(ARG1)
      TMINR=1.0+RMIN(L)*TERM1*COS(ARG2)
      TPLI=RPL(L)*TERM1*SIN(ARG1)
      TMINI=RMIN(L)*TERM1*SIN(ARG2)
      ARG=TWOPI*EPSPAN
      XPL=APAN*COS(ARG)
      YPL=APAN*SIN(ARG)
      ARG=TWOPI*EPSMAN
      XMIN=AMAN*COS(ARG)
      YMIN=AMAN*SIN(ARG)
      DETPL=TPLR*TPLR+TPLI*TPLI
      X1=(XPL*TPLR+YPL*TPLI)
      Y1=(YPL*TPLR-XPL*TPLI)
      APAN=SQRT(X1*X1+Y1*Y1)/DETPL
      EPSPAN=ATAN2(Y1,X1)/TWOPI
      DETMIN=TMINR*TMINR+TMINI*TMINI
      X1=(XMIN*TMINR+YMIN*TMINI)
      Y1=(YMIN*TMINR-XMIN*TMINI)
      AMAN=SQRT(X1*X1+Y1*Y1)/DETMIN
      EPSMAN=ATAN2(Y1,X1)/TWOPI
      APIN=APAN*(FIN/FAN)*RPL(L)
      AMIN=AMAN*(FIN/FAN)*RMIN(L)
      EPSPIN=EPSPAN+VUIN-VUAN+ZETAPC
      EPSMIN=EPSMAN-VUIN+VUAN-ZETAMC
      RETURN
C
C***********************************************************************
C*  READ INFERENCE DATA
C
      ENTRY OPNINF(KON,M,N,KONA,APAN,AMAN,EPSPAN,EPSMAN,KONI,APIN,AMIN,E
     1PSPIN,EPSMIN,SIGI,NIN)
      MTD=4
      PI=3.1415926535898
      TWOPI=2.*PI
      DO 1020 K=1,10
      READ(MTD,1010) KONAN(K),SIGAN(K),KONIN(K),SIGIN(K),RPL(K),RMIN(K),
     1ZETAP(K),ZETAM(K)
 1010 FORMAT(2(2X,A5,F13.10),4F10.3)
      IF(KONAN(K).eq.KBLANK) go to 1040
 1020 CONTINUE
 1040 NIN=K-1
      RETURN
      END
      SUBROUTINE SCFIT2(X,NIN,F,M,IND,C,S,ERC,ERS,G,NX,AVREM,SDX,RT,RA,X
     1P)
C     ------------------------------------------------------------------
C        THIS SUBROUTINE FINDS THE LEAST SQUARES FIT TO AN EQUALLY
C     SPACED TIME SERIES USING SINES AND COSINES OF SPECIFIED FREQ-
C     UENCIES AS FITTING FUNCTIONS. THERE MAY BE GAPS IN THE DATA SERIES
C
C  INPUTS
C  ------
C   --X(I),I=1...NIN  THE DATA SERIES TO BE FITTED. IF THERE ARE GAPS IN
C     THE DATA , THE X VALUES IN THE GAPS SHOULD BE SET TO 1.E35 .
C   --NIN = THE NUMBER OF POINTS IN SERIES X INCLUDING GAPS .
C     NIN SHOULD BE AN ODD NUMBER . IF IT IS NOT THE LAST X VALUE
C     WILL BE COMPLETELY IGNORED BY THE ANALYSIS .
C   --F(K),K=1...M  THE FREQUENCIES OF THE SIN AND COS COMPONENTS USED
C     IN THE ANALYSIS IN CYCLES PER TIME INCREMENT. IF THE ZERO
C     FREQUENCY IS USED IT MUST BE THE FIRST OF THE SET (IE F(1)=0.0)
C   --M = NUMBER OF FREQUENCIES IN THE ANALYSIS.
C   --IND = 0 IF THE CALCULATION OF RA AND XP IS TO BE BYPASSED.
C         = 1 IF RA AND XP ARE TO BE CALCULATED.
C         = 2 IF RA AND XP ONLY ARE TO BE CALCULATED FROM THE INPUTS X,
C                NIN,F,M,C, AND S. (IE ANALYSIS IS BYPASSED AND
C                PREDICTIONS ARE MADE FROM GIVEN C AND S ARRAYS.)
C
C  OUTPUTS
C  -------
C   --C(K),S(K),K=1...M ARE THE AMPLITUDES OF THE COS AND SIN COMPONENTS
C     OF THE FIT ...
C     XP(I) = C(K)*COS(2PI*F(K)*T) + S(K)*SIN(2PI*F(K)*T)  SUMMED OVER M
C     T=I-NIN/2 (IE THE TIME ORIG IS AT THE CENTER POINT OF SERIES X .)
C   --ERC(K),ERS(K),K=1...M ARE THE EXPECTED ERRORS IN C AND S .
C   --G IS THE CONDITION OF THE MATRIX OF NORMAL EQUATIONS .
C       = 1.0 FOR A PERFECT DIAGONAL MATRIX .
C       = 0.0 FOR A SINGULAR MATRIX (IE NO SOLUTION POSSIBLE)
C   --NX,AVX,SDX ARE THE NUMBER OF VALID DATA POINTS IN SERIES X (IE
C     WITH THOSE = 1.E35 OMITTED) , AND THE AVERAGE AND STANDARD DEV-
C     IATION OF X .
C   --RT IS THE RMS OF THE RESIDUALS OF THE FIT CALCULATED PREVIOUS TO
C     THE PREDICTIONS USING THE MULTIPLE CORRELATION TECHNIQUE.
C   --RA IS THE SAME AS RT ONLY CALCULATED DIRECTLY FROM THE DIFFERENCES
C     BETWEEN DATA AND PREDICTIONS. IF RA AND RT ARE NOT PRETTY CLOSE
C     THEN THERE IS A BUG IN THIS PROGRAM OR ROUNDING ERRORS ARE GETTING
C     SERIOUS OR THE FIT IS ALMOST PERFECT.
C   --XP(I),I=1,..NIN ARE THE PREDICTED X VALUES.
C
C  NOTES
C  ------
C   1) AVX IS SUBTRACTED FROM X DURING THE ANALYSIS IF F(1) = 0.
C   2) ALL FREQUENCIES SHOULD BE LESS THAN  HALF A CYCLE PER TIME
C     INCREMENT . FOR GOOD RESOLUTION IT IS SUFFICIENT THAT ADJACENT
C     FREQUENCIES DIFFER BY ONE CYCLE OR MORE OVER THE DURATION OF THE
C     ANALYSIS IF THE GAPS ARE SMALL .
C   3) SUBROUTUNE LSQSLV IS REQUIRED TO SOLVE THE EQUATIONS.
C   4) ARRAY A MUST BE DIMENSIONED AT LEAST (2*M+1)*M , RHS AT LEAST 2*M
C      AND THE OTHER ARRAYS AT LEAST M.
C
C     THIS ROUTINE IS PART OF THE TIDAL STREAMS ANALYSIS PROGRAM FOR
C     DR G GODIN    OCEANOGRAPHIC RESEARCH/EMR    JULY/70
C
      REAL*8 AVX,SSX,CWTK,CWTKK,SWTK,CK,SK,CWK,SWK,XL,XU,XPDT,RAA,CW1,SW
     11,CSUM,SSUM
      DIMENSION F(100),ERS(100),ERC(100),C(100),S(100)
      DIMENSION RHS(200),CW(100),SW(100),CW1(100),SW1(100)
      DIMENSION X(9000),XP(9000),A(15000)
      DIMENSION AC(7500),AS(7500),RHSC(100),RHSS(100)
      EQUIVALENCE (AC(1),A(1)),(AS(1),A(7501)),(RHS(1),RHSC(1)),(RHS(101
     1),RHSS(1))
C
C***********************************************************************
C*  INITIALIZE
C
      PI=3.141592653589793
      PI2 = 2.*PI
      BIG=.9E35
      LP = 6
      IMID = (NIN+1)/2
      N =  IMID*2-1
      NH =N/2
      NH1=NH+1
C
C***********************************************************************
C*  NX IS THE NUMBER OF OBSERVATIONS (NOT INCLUDING GAPS) IN THE
C*     DESIRED ANALYSIS PERIOD.
C*  AVX=AVREM IS THE AVERAGE OF THESE OBSERVATIONS.
C*  SDX IS THE STANDARD DEVIATION ESTIMATE.
C
      NX=0
      AVX=0.D0
      DO 25 I=1,N
      IF(X(I).GE.BIG) GO TO 25
      NX=NX+1
      AVX=AVX+X(I)
25    CONTINUE
      AVX=AVX/NX
      SSX = 0.D0
      DO 27 I=1,N
      IF(X(I).LT.BIG) SSX=SSX+(X(I)-AVX)**2
27    CONTINUE
      SDX=SSX/(NX-1)
      SDX=SQRT(SDX)
C
C***********************************************************************
C*  SSX IS THE ORIGINAL SUM OF SQUARES OF THE HOURLY HEIGHTS.
C*  NDF IS THE NUMBER OF DEGREES OF FREEDOM.
C
      NDF=NX-2*M+1
      IF(NDF.GE.0) GO TO  40
      WRITE (LP,30)
30    FORMAT(/' SUBROUTINE SCFIT2 , NDF NEGATIVE , STOP' /)
      STOP
C
C***********************************************************************
C*  THE ZERO FREQUENCY MUST BE THE FIRST ONE IN THE LIST.
C
40    DO  50 K=1,M
      CW(K) = COS(PI2*F(K))
50    SW(K) = SIN(PI2*F(K))
      M2=2*M
      M2M2=(M2*M2+M2)/2
      M1M1=(3*M*M+M)/2+1
      MM=(M*M+M)/2
      IF(IND.EQ.2) GO TO 500
C
C***********************************************************************
C*  ACCUMULATE RIGHT SIDES OF NORMAL EQUATIONS FOR C AND S.
C*  THESE TAKE THE FORM OF SUM(I) Y(I)*COS(2PI*SIGMA(J)*T(I))  AND
C*  SUM(I) Y(I)*SIN(2PI*SIGMA(J)*T(I)) FOR J=1,M CONSTITUENTS AND
C*  T(I)=-NH,-NH+1,...,0,...NH.
C
C
      DO 140 K=2,M
      CWK = CW(K)
      SWK = SW(K)
      CWTK =1.D0
      SWTK =0.D0
      CK=0.D0
      IF(X(IMID).LT.BIG) CK=X(IMID)-AVX
      SK = 0.D0
      DO 120  I=1,NH
C
C***********************************************************************
C*  USING THE IDENTITIES FOR COS(T+DT) AND SIN(T+DT)
C
      CWTKK = CWTK*CWK - SWTK*SWK
      SWTK  = CWTK*SWK + SWTK*CWK
      CWTK=CWTKK
      IL =IMID-I
      IU= IMID+I
      XL=0.D0
      XU=0.D0
      IF(X(IL).LT.BIG) XL=X(IL)-AVX
      IF(X(IU).LT.BIG) XU=X(IU)-AVX
C
C***********************************************************************
C*  USING COS(DT)=COS(-DT) AND SIN(DT)=-SIN(-DT)
C
      CK = CK + (XU+XL)*CWTK
120   SK = SK + (XU-XL)*SWTK
      C(K)=CK
      S(K)=SK
140   CONTINUE
C
C***********************************************************************
C*  BECAUSE THE AVERAGE VALUE HAS BEEN SUBTRACTED FROM ALL THE OBSERVA-
C*  TIONS, THE FIRST ELEMENT IN THE RIGHT HAND SIDE IS 0.
C
      C(1)=0.
      S(1)=0.
C
C***********************************************************************
C*  IF THERE ARE NO GAPS IN THE DATA THEN THE RESULTANT LEAST SQUARES
C*  MATRIX HAS ZEROS IN THE UPPER RIGHT AND LOWER LEFT PARTITIONS. IF
C*  THE NEW MATRIX EQUATIONS OBTAINED FROM THESE NON-ZERO PARTITIONS
C*  ARE SOLVED SEPARATELY, THIS MAKES FOR AN APPROXIMATE FOUR FACTOR
C*  TIME SAVING IN THE CHOLESKY FACTORIZATION.
C
      IF(N.EQ.NX) GO TO 600
C
C***********************************************************************
C*  GENERATE THE MATRIX BY SUMMING THE CONTRIBUTIONS FROM EACH OF THE
C*  CONTINUOUS BLOCKS OF DATA.
C
      DO 160 JK=1,M2M2
160   A(JK)=0.0
C
C***********************************************************************
C*  IA AND IB ARE RESPECTIVELY THE FIRST AND LAST READINGS IN A
C*  CONTINUOUS BLOCK OF DATA.
C
      IA=-NH-1
180   IA=IA+1
      IF(IA.GT.NH) GO TO 300
      IIA=IA+IMID
      IF(X(IIA).GE.BIG) GO TO 180
      I=IA
185   I=I+1
      IF(I.GT.NH) GO TO 190
      II=I+IMID
      IF(X(II).LT.BIG) GO TO 185
190   IB=I-1
      AB=IA+IB
      BA1=IB-IA+1
C
C***********************************************************************
C*  TRIGONOMETRIC IDENTITIES AVOID THE SUMMATIONS REQUIRED IN
C*  CALCULATING THE MATRIX ELEMENTS.
C*  ONLY THE LOWER TRIANGLE (INCLUDING DIAGONAL) OF THE MATRIX NEED BE
C*  GENERATED.
C
      DO 260 J=1,M
      WJ=PI*F(J)
      SIND=BA1
      SINS=BA1
      IF(J.GT.1) SINS=SIN(2.*BA1*WJ)/SIN(2.*WJ)
240   DO 255 K=J,M
      JK=M2*(J-1)+K-(J*J-J)/2
      JKM=JK+M
      JM=J+M
      KJM=M2*(K-1)+JM-(K*K-K)/2
      JMKM=M2*(JM-1)+K+M-(JM*JM-JM)/2
      WK=PI*F(K)
      WD=WJ-WK
      WS=WJ+WK
      IF(J.EQ.K) GO TO 250
      SIND=SIN(BA1*WD)/SIN(WD)
      SINS=SIN(BA1*WS)/SIN(WS)
250   TD=COS(AB*WD)*SIND
      TS=COS(AB*WS)*SINS
      A(JK)=A(JK)+.5*(TD+TS)
      A(JMKM)=A(JMKM)+.5*(TD-TS)
      TD=SIN(AB*WD)*SIND
      TS=SIN(AB*WS)*SINS
      IF(J.EQ.K) GO TO 255
      A(JKM)=A(JKM)+.5*(-TD+TS)
255   A(KJM)=A(KJM)+.5*(TD+TS)
260   CONTINUE
      IA=IB
      GO TO 180
C
C***********************************************************************
C*  S(1) IS FORCED TO ZERO BY SETTING THIS MATRIX ELEMENT TO LARGE VALUE
C
  300 A(M1M1)=NX
C
C***********************************************************************
C*  SOLVE THE EQUATIONS FOR C AND S .
C
      DO 370 K=1,M
      RHS(K)=C(K)
      MPK=M+K
370   RHS(MPK)=S(K)
C
C***********************************************************************
C*  SINCE THE TWO DIMENSIONAL MATRIX DUE TO THE LEAST SQUARES FIT IS
C*  POSITIVE DEFINITE SYMMETRIC, IT CAN BE DECOMPOSED INTO THE FORM
C*  G*G(TRANSPOSE), WHERE G IS A LOWER TRIANGULAR MATRIX. SUBROUTINE
C*  TRIANG FINDS THIS G AND SOLUTN SOLVES THE RESULTING LINEAR
C*  EQUATIONS BY FORWARD AND BACKWARD SUBSTITUTION.
C
      CALL TRIANG(A,RHS,G,M2)
      IF(G.GT.0.) GO TO 371
      WRITE(LP,372)
  372 FORMAT(' THE LEAST SQUARES MATRIX IS ILL-CONDITIONED AND COULD NOT
     1 BE TRIANGULARIZED')
      STOP
  371 CONTINUE
      GG=1.005
      CALL SOLUTN(A,RHS,GG,M2)
      XPDT=0.D0
      DO 380 K=1,M
      MPK=M+K
      XPDT=XPDT+RHS(K)*C(K)+RHS(MPK)*S(K)
      C(K)=RHS(K)
380   S(K)=RHS(MPK)
C
C***********************************************************************
C*  THE EXPECTED ERRORS ARE CALCULATED FROM THE INVERSE MATRIX DIAGONAL
C*  ELEMENTS.
C
      DO 420 K=1,M2
      DO 400 KK=1,M2
400   RHS(KK)=0.
      RHS(K)=1.0
      GG=K+.005
      CALL SOLUTN(A,RHS,GG,M2)
      IF(K.LE.M) GO TO 405
      KMM=K-M
      ERS(KMM)=SQRT(RHS(K))
      GO TO 406
405   ERC(K)=SQRT(RHS(K))
406   CONTINUE
420   CONTINUE
C
C***********************************************************************
C*  GET THEORETICAL RESIDUAL RT AND EXPECTED ERRORS ERC,ERS OF C,S .
C*  XPDT IS THE SUM OF SQUARES DUE TO REGRESSION.
C*  RT IS THE ROOT MEAN SQUARE RESIDUAL ERROR.
C*  SSX-XPDT IS THE RESIDUAL ERROR SUM OF SQUARES.
  515 RAD=SSX-XPDT
      RAD=ABS(RAD)/NDF
      RT=SQRT(RAD)
      DO 450 K=1,M
      ERC(K) =  ERC(K)*RT
450   ERS(K) =  ERS(K)*RT
      C(1)=C(1)+AVX
      AVREM=AVX
C
C***********************************************************************
C*    CALCULATE PREDICTIONS XP(1...N) AND ACTUAL RESIDUAL RA.
C
  500 IF(IND.EQ.0) RETURN
      XP(IMID)=0.
      DO 510 K=1,M
      CW1(K)=1.D0
      SW1(K)=0.D0
  510 XP(IMID)=XP(IMID)+C(K)
      IMAX=NH
      IF(NIN.GT.N) IMAX=NH1
      DO 550 I=1,IMAX
      IL=IMID-I
      IU=IMID+I
      CSUM=0.D0
      SSUM=0.D0
      DO 530 K=1,M
      CWTK=CW1(K)*CW(K)-SW1(K)*SW(K)
      SW1(K)=CW1(K)*SW(K)+SW1(K)*CW(K)
      CW1(K)=CWTK
      CSUM=CSUM+C(K)*CW1(K)
  530 SSUM=SSUM+S(K)*SW1(K)
      IF(I.EQ.NH1) GO TO 531
      XP(IL)=CSUM-SSUM
  531 XP(IU)=CSUM+SSUM
  550 CONTINUE
      RAA=0.D0
      DO 570 I=1,N
      IF(X(I).LT.BIG) RAA=RAA+(X(I)-XP(I))**2
  570 CONTINUE
      RA=RAA
      RA=SQRT(RA/NDF)
      RETURN
C
C***********************************************************************
C*  WHEN THERE ARE NO GAPS IN THE RECORD, THE C AND S COEFFICIENT
C*  MATRICES ARE SOLVED SEPARATELY.
C
  600 BA1=2*NH+1
      DO 601 J=1,MM
      AC(J)=0.
  601 AS(J)=0.
      DO 660 J=1,M
      WJ=PI*F(J)
      T1=BA1
      T2=BA1
      IF(J.GT.1) T2=SIN(2.*BA1*WJ)/SIN(2.*WJ)
      JK=M*(J-1)-(J*J-J)/2+J
      DO 655 K=J,M
      IF(J.EQ.K) GO TO 650
      WK=PI*F(K)
      T1=SIN(BA1*(WJ-WK))/SIN(WJ-WK)
      T2=SIN(BA1*(WJ+WK))/SIN(WJ+WK)
  650 AC(JK)=(T1+T2)*0.5
      AS(JK)=(T1-T2)*0.5
  655 JK=JK+1
  660 CONTINUE
      AS(1)=BA1
      DO 670 I=1,M
      RHSC(I)=C(I)
  670 RHSS(I)=S(I)
      CALL TRIANG(AC,RHSC,GC,M)
      IF(GC.GT.0.) GO TO 609
      WRITE(LP,372)
      STOP
  609 CALL TRIANG(AS,RHSS,GS,M)
      IF(GS.GT.0.) GO TO 611
      WRITE(LP,372)
      STOP
  611 G=GS*GC
      GGS=1.005
      GGC=1.005
      CALL SOLUTN(AC,RHSC,GGC,M)
      CALL SOLUTN(AS,RHSS,GGS,M)
      XPDT=0.D0
      DO 612 K=1,M
      XPDT=XPDT+RHSC(K)*C(K)+RHSS(K)*S(K)
      C(K)=RHSC(K)
  612 S(K)=RHSS(K)
C
C***********************************************************************
C*  THE EXPECTED ERRORS ARE CALCULATED FROM THE INVERSE MATRIX DIAGONAL
C*  ELEMENTS.
C
      DO 613 K=1,M
      DO 614 KK=1,M
      RHSS(KK)=0.
  614 RHSC(KK)=0.
      RHSC(K)=1.
      GGC=K+.005
      CALL SOLUTN(AC,RHSC,GGC,M)
      ERC(K)=SQRT(RHSC(K))
      RHSS(K)=1.
      GGS=K+.005
      CALL SOLUTN(AS,RHSS,GGS,M)
      ERS(K)=SQRT(RHSS(K))
  613 CONTINUE
      GO TO 515
      END
      SUBROUTINE CHLSKY(A,F,G,N)
C
C***********************************************************************
C*    ROUTINE TO SOLVE SYMMETRIC POSITIVE DEFINITE MATRICES FOUND IN
C*    LINEAR LEAST SQUARES PROBLEMS.  THE CHOLESKY SQUARE METHOD (ALSO
C*    ATTRIBUTED TO BANACHIEWICZ) IS USED.  SEE LEAST SQUARES PROGRAM-
C*    MING FOR BAND MATRICES BY B. EVANS. COMPUTATIONAL METHODS FOR
C*    LINEAR ALGEBRA BY FADDEEV AND FADDEEVA PAGE 145. ADVANCES IN
C*    COMPUTERS VOL 2 PAGE 57.  COMPUTER SOLUTION OF LINEAR ALGEBRAIC
C*    SYSTEMS BY FORSYTHE AND MOLER PAGE 114.
C*
C*    DIRECTIONS...
C*    1... CALL TRIANG WITH THE UPPER TRIANGLE OF THE MATRIX STORED
C*    BY ROWS IN THE ONE DIMENSIONAL ARRAR A.  THE PRICE OF THIS
C*    STORAGE SAVING IS EXTRA PROCESSING TIME DUE TO A COMPLEX
C*    SUBSCRIPTING. IN TRIANG, A IS FACTORIZED AND THE NEW MATRIX
C*    REPLACES A.  THE MATRIX CONDITION IS RETURNED IN G.  IF (G.LE.0),
C*    THEN G IS SET TO -I (ROW NUMBER) AND AN IMMEDIATE RETURN IS MADE.
C*    2...CALL SOLUTN WITH THE RIGHT HAND SIDE ARRAY IN F. THE SOLUTION
C*    IS RETURNED IN F.
C
C*    DEC/76 ... INDEXING SIMPLIFIED TO IMPROVE SPEED.
C*    IF F(I)=0 FOR ALL I EXCEPT F(IENTRY)=1.0, THEN SETTING G TO
C*    IENTRY CAUSES THE PROGRAM TO CALCULATE ONLY THE PARTIAL SOLUTION
C*    F(IENTRY)...F(N). THIS IS USEFUL FOR GETTING THE
C*    DIAGONAL ELEMENTS OF THE INVERSE MATRIX WHICH ARE RELATED TO THE
C*    EXPECTED ERRORS IN THE REGRESSION COEFFICIENTS AND ALLOWS A SPEED
C*    IMPROVEMENT OF ABOUT 3X. FOR OTHER TYPES OF RHS THE FULL SOLUTION
C*    IS FOUND. TO CANCEL THIS FEATURE SET IENTRY=1 FOR ALL TIME.
C
C*    TIMING FOR...TRIANGULARIZE + SOLVE ONE RHS + GET INVERSE MATRIX
C*    DIAGONAL ELEMENTS (N=124, CYBER/74)
C*       OLD TIME = 3.0+.09+12.0=15.9 SEC.
C*       NEW TIME = 2.0+.06+ 3.5= 5.56 SEC.=37 PERCENT OF OLD.
C
      DIMENSION A(15000),F(200)
C
C***********************************************************************
C*    CHOLESKY FACTORIZATION OF THE MATRIX A.
      ENTRY TRIANG(A,F,G,N)
      NP1=N+1
10    IF(A(1))20,20,30
20    G=-1.
      RETURN
30    A(1)= SQRT(A(1))
      DO 40 J=2,N
40    A(J)=A(J)/A(1)
      G=1.
      II=1
50    DO 100 I=2,N
      IP1=I+1
      IM1=I-1
      II=II+N+2-I
      AII=A(II)
      LI=I-N
      DO 60 L=1,IM1
      LI=LI+NP1-L
60    AII=AII-A(LI)*A(LI)
      IF(AII)65,65,70
65    G=-I
      RETURN
70    G=G*AII/A(II)
      A(II)= SQRT(AII)
      IF(I-N)75,100,75
75    DO 90 J=IP1,N
      IJ=II+J-I
      AIJ=A(IJ)
      JMI=J-I
      LI=I-N
      DO 80 L=1,IM1
      LI=LI+NP1-L
      LJ=LI+JMI
80    AIJ=AIJ-A(LI)*A(LJ)
90    A(IJ)=AIJ/A(II)
100   CONTINUE
      G= SQRT(G)
      RETURN
C
C***********************************************************************
C*    SOLUTION OF THE TRIANGULARIZED MATRIX EQUATION
C*    G NOW DENOTES WHETHER OR NOT AN EXPECTED ERROR CALCULATION IS
C*    DESIRED; THAT IS, IF THE RIGHT HAND SIDE OF THE MATRIX EQUATION
C*    IS A VECTOR WITH VALUE 1 IN ONLY ONE LOCATION AND ZEROES
C*    EVERYWHERE ELSE.  IN THESE CASES, THE FORWARD AND BACKWARD
C*    SUBSTITUTION METHODS CAN BE ABBREVIATED AND RESULT IN AN APPROX.
C*    3 FACTOR TIME SAVING.  A G VALUE EQUAL TO K INDICATES SUCH A
C*    CASE WITH THE 1 IN THE K-TH POSITION.  A G VALUE EQUAL TO 1
C*    INDICATES THAT A STANDARD MATRIX SOLUTION METHOD IS REQUIRED.
      ENTRY SOLUTN(A,F,G,N)
C
C***********************************************************************
C     FORWARD SOLUTION OF RIGHT HAND SIDE
C
      IENTRY=INT(G)
      NP1=N+1
      DO 220 I=IENTRY,N
      IM1=I-1
      FI=F(I)
      LI=((N+N-IENTRY)*(IENTRY-1))/2+I
      IF(I.EQ.IENTRY) GO TO 220
      DO 210 L=IENTRY,IM1
      FI=FI-A(LI)*F(L)
  210 LI=LI+N-L
220   F(I)=FI/A(LI)
C
C***********************************************************************
C*    BACKWARD SUBSTITUTION FOR FINAL SOLUTION
C
230   NN=(N*(N+1))/2
      F(N)=F(N)/A(NN)
      IF(IENTRY.EQ.N) RETURN
      II=NN
      IENTB=N+1-IENTRY
      DO 260 IB=2,IENTB
      I=N+1-IB
      II=II+I-NP1
      IP1=I+1
      FI=F(I)
      III=II-I
      DO 250 L=IP1,N
      IL=III+L
250   FI=FI-A(IL)*F(L)
260   F(I)=FI/A(II)
      RETURN
      END
	subroutine astr(d1,h,pp,s,p,np,dh,dpp,ds,dp,dnp)
c	this subroutine calculates the following five ephermides
c	of the sun and moon
c	h = mean longitude of the sum
c	pp = mean longitude of the solar perigee
c	s = mean longitude of the moon
c	p = mean longitude of the lunar perigee
c	np = negative of the longitude of the mean ascending node
c	and their rates of change.
c	Units for the ephermides are cycles and for their derivatives
c	are cycles/365 days
c	The formulae for calculating this ephermides were taken from
c	pages 98 and 107 of the Explanatory Supplement to the
c	Astronomical Ephermeris and the American Ephermis and
c	Nautical Almanac (1961)
c
	implicit real*8(a-h,o-z)
	real*8 np
	d2=d1*1.d-4
	f=360.d0
	f2=f/365.d0
	h=279.696678d0+.9856473354d0*d1+.00002267d0*d2*d2
	pp=281.220833d0+.0000470684d0*d1+.0000339d0*d2*d2+
     1  .00000007d0*d2**3
	s=270.434164d0+13.1763965268d0*d1-.000085d0*d2*d2+
     1  .000000039d0*d2**3
	p=334.329556d0+.1114040803d0*d1-.0007739d0*d2*d2-
     1  .00000026d0*d2**3
	np=-259.183275d0+.0529539222d0*d1-.0001557d0*d2*d2-
     1  .00000005d0*d2**3
	h=h/f
	pp=pp/f
	s=s/f
	p=p/f
	np=np/f
	h=h-dint(h)
	pp=pp-dint(pp)
	s=s-dint(s)
	p=p-dint(p)
	np=np-dint(np)
	dh=.9856473354d0+2.d-8*.00002267d0*d1
	dpp=.0000470684d0+2.d-8*.0000339d0*d1
     1  +3.d-12*.00000007d0*d1**2
	ds=13.1763965268d0-2.d-8*.000085d0*d1+
     1  3.d-12*.000000039d0*d1**2
	dp=.1114040803d0-2.d-8*.0007739d0*d1-
     1  3.d-12*.00000026d0*d1**2
	dnp=+.0529539222d0-2.d-8*.0001557d0*d1-
     1  3.d-12*.00000005d0*d1**2
	dh=dh/f2
	dpp=dpp/f2
	ds=ds/f2
	dp=dp/f2
	dnp=dnp/f2
	return
	end
      SUBROUTINE GDAY(IDD,IMM,IYY,ICC,KD)
C!
C!  GIVEN DAY,MONTH,YEAR AND CENTURY(EACH 2 DIGITS), GDAY RETURNS
C!  THE DAY#, KD BASED ON THE GREGORIAN CALENDAR.
C!  THE GREGORIAN CALENDAR, CURRENTLY 'UNIVERSALLY' IN USE WAS
C!  INITIATED IN EUROPE IN THE SIXTEENTH CENTURY. NOTE THAT GDAY
C!  IS VALID ONLY FOR GREGORIAN CALENDAR DATES.
C
C   KD=1 CORRESPONDS TO JANUARY 1, 0000
C	
c 	Note that the Gregorian reform of the Julian calendar 
c	omitted 10 days in 1582 in order to restore the date
c	of the vernal equinox to March 21 (the day after
c	Oct 4, 1582 became Oct 15, 1582), and revised the leap 
c	year rule so that centurial years not divisible by 400
c	were not leap years.
c
C   THIS ROUTINE WAS WRITTEN BY EUGENE NEUFELD, AT IOS, IN JUNE 1990.
C
      INTEGER NDP(13)
      INTEGER NDM(12)
      DATA NDP/0,31,59,90,120,151,181,212,243,273,304,334,365/
      DATA NDM/31,28,31,30,31,30,31,31,30,31,30,31/
C!
      LP = 6
C!  TEST FOR INVALID INPUT:
      IF(ICC.LT.0)THEN
	 WRITE(LP,5000)ICC
	 STOP
      ENDIF
      IF(IYY.LT.0.OR.IYY.GT.99)THEN
	 WRITE(LP,5010)IYY
	 STOP
      ENDIF
      IF(IMM.LE.0.OR.IMM.GT.12)THEN
	 WRITE(LP,5020)IMM
	 STOP
      ENDIF
      IF(IDD.LE.0)THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
      IF(IMM.NE.2.AND.IDD.GT.NDM(IMM))THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
      IF(IMM.EQ.2.AND.IDD.GT.29)THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
      IF(IMM.EQ.2.AND.IDD.GT.28.AND.((IYY/4)*4-IYY.NE.0.OR.(IYY.EQ.0.AND
     .    .(ICC/4)*4-ICC.NE.0)))THEN
	 WRITE(LP,5030)IDD
	 STOP
      ENDIF
5000  FORMAT(' INPUT ERROR. ICC = ',I7)
5010  FORMAT(' INPUT ERROR. IYY = ',I7)
5020  FORMAT(' INPUT ERROR. IMM = ',I7)
5030  FORMAT(' INPUT ERROR. IDD = ',I7)
C!
C!  CALCULATE DAY# OF LAST DAY OF LAST CENTURY:
      KD = ICC*36524 + (ICC+3)/4
C!
C!  CALCULATE DAY# OF LAST DAY OF LAST YEAR:
      KD = KD + IYY*365 + (IYY+3)/4
C!
C!  ADJUST FOR CENTURY RULE:
C!  (VIZ. NO LEAP-YEARS ON CENTURYS EXCEPT WHEN THE 2-DIGIT
C!  CENTURY IS DIVISIBLE BY 4.)
      IF(IYY.GT.0.AND.(ICC-(ICC/4)*4).NE.0) KD=KD-1
C!  KD NOW TRULY REPRESENTS THE DAY# OF THE LAST DAY OF LAST YEAR.
C!
C!  CALCULATE DAY# OF LAST DAY OF LAST MONTH:
      KD = KD + NDP(IMM)
C!
C!  ADJUST FOR LEAP YEARS:
      IF(IMM.GT.2.AND.((IYY/4)*4-IYY).EQ.0.AND.((IYY.NE.0).OR.
     .   (((ICC/4)*4-ICC).EQ.0)))   KD=KD+1
C!  KD NOW TRULY REPRESENTS THE DAY# OF THE LAST DAY OF THE LAST
C!  MONTH.
C!
C!  CALCULATE THE CURRENT DAY#:
      KD = KD + IDD
      RETURN
C!
C!
      ENTRY DMY(IDD,IMM,IYY,ICC,KD)
C!
C!  GIVEN THE (GREGORIAN) DAY#, KD, AS CALCULATED ABOVE IN THIS ROUTINE,
C!  ENTRY DMY RETURNS THE (GREGORIAN) DAY, MONTH, YEAR AND CENTURY.
C!
C!  TEST FOR VALID INPUT:
      IF(KD.LE.0) WRITE(LP,5040)KD
5040  FORMAT(' KD = ',I7,'  INVALID INPUT. DMY STOP.')
C!
C!  SAVE KD
      KKD=KD
C!  CALCULATE ICC AND SUBTRACT THE NUMBER OF DAYS REPRESENTED BY ICC
C!  FROM KKD
C!  JFH IS THE NUMBER OF 400 YEAR INTERVALS UP TO KKD
C!  JCC IS THE NUMBER OF ADDITIONAL CENTURIES UP TO KKD
      JFH = KKD/146097
      KKD = KKD - JFH*146097
      IF(KKD.LT.36525)THEN
	 JCC = 0
      ELSE
	 KKD = KKD - 36525
	 JCC = 1 + KKD/36524
	 KKD = KKD - (JCC-1)*36524
      END IF
      ICC = 4*JFH + JCC
      IF(KKD.EQ.0)THEN
	 ICC = ICC-1
	 IYY = 99
	 IMM = 12
	 IDD = 31
	 RETURN
      ENDIF
C!
C!  CALCULATE IYY. JFY IS THE NUMBER OF FOUR YEAR INTERVALS IN THE
C!  CURRENT CENTURY. THE FIRST FOUR YEAR INTERVAL IS SHORT (1460 DAYS
C!  RATHER THAN 1461)IF THE CURRENT CENTURY IS NOT DIVISIBLE BY 4, AND
C!  IN THIS CASE JCC.NE.0 AS CALCULATED ABOVE.
C!
C!  CALCULATE JFY:
      JFY = 0
      IF(JCC.EQ.0)GOTO 10
      IF(KKD.LT.1460)GOTO 10
      JFY = 1
      KKD = KKD - 1460
10    KK = KKD/1461
      JFY = JFY + KK
      KKD = KKD - KK*1461
C!
C!  CALCULATE JYY, THE REMAINING YEARS OF THE CURRENT CENTURY UP TO THE
C!  CURRENT DAY:
      JYY = 0
C!  THE NEXT YEAR IS NOT A LEAP YEAR IF JFY=0 AND JCC.NE.0.
      IF(JFY.EQ.0.AND.JCC.NE.0)GOTO 20
      IF(KKD.LT.366)GOTO 30
      JYY = 1
      KKD = KKD - 366
20    JYYY = KKD/365
      JYY = JYY + JYYY
      KKD = KKD - JYYY*365
30    IYY = 4*JFY + JYY
      IF(KKD.EQ.0) THEN
	 IYY=IYY-1
	 IMM=12
	 IDD=31
	 RETURN
      END IF
C!
C!  SET L=1 IF WE HAVE A LEAP YEAR.
      L=0
      IF(IYY-(IYY/4)*4.NE.0)GOTO 40
      IF(IYY.EQ.0.AND.(ICC-(ICC/4)*4).NE.0)GOTO 40
      L=1
C!
C!  CALCULATE IMM AND IDD
40    IF(KKD.GT.31) GOTO 50
      IMM=1
      IDD=KKD
      RETURN
C!
50    IF(KKD.GT.59)GOTO 60
      IMM = 2
      IDD = KKD-31
      RETURN
C!
60    IF(KKD.GT.60)GOTO 70
      IF(L.EQ.0)GOTO 70
      IMM = 2
      IDD = 29
      RETURN
C!
70    IF(L.EQ.1) KKD=KKD-1
      DO 80 I=4,13
	 IF(KKD.GT.NDP(I))GOTO 80
	 IMM = I-1
	 IDD = KKD - NDP(I-1)
	 RETURN
C!
80    CONTINUE
90    WRITE(LP,5050)
5050  FORMAT(' ERROR IN DMY.')
      STOP
      END
